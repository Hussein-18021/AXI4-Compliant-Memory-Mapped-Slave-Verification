# [BEAT 125/171] Beat completed, advancing to next
# [BEAT 126/171] Starting beat processing
# [BEAT 126/171] Applying WVALID delay of 1 cycles
# [BEAT 126/171] WVALID delay completed
# [BEAT 126/171] Setting WDATA=0x4b439596, WLAST=0, WVALID=1
# [BEAT 126/171] WVALID asserted, waiting for WREADY...
# [BEAT 126/171] WREADY received, handshake complete
# [BEAT 126/171] Beat completed, advancing to next
# [BEAT 127/171] Starting beat processing
# [BEAT 127/171] No WVALID delay (delay=0)
# [BEAT 127/171] Setting WDATA=0x463c3f8c, WLAST=0, WVALID=1
# [BEAT 127/171] WVALID asserted, waiting for WREADY...
# [BEAT 127/171] WREADY received, handshake complete
# [BEAT 127/171] Beat completed, advancing to next
# [BEAT 128/171] Starting beat processing
# [BEAT 128/171] Applying WVALID delay of 2 cycles
# [BEAT 128/171] WVALID delay completed
# [BEAT 128/171] Setting WDATA=0x8ae74a15, WLAST=0, WVALID=1
# [BEAT 128/171] WVALID asserted, waiting for WREADY...
# [BEAT 128/171] WREADY received, handshake complete
# [BEAT 128/171] Beat completed, advancing to next
# [BEAT 129/171] Starting beat processing
# [BEAT 129/171] Applying WVALID delay of 1 cycles
# [BEAT 129/171] WVALID delay completed
# [BEAT 129/171] Setting WDATA=0x43748786, WLAST=0, WVALID=1
# [BEAT 129/171] WVALID asserted, waiting for WREADY...
# [BEAT 129/171] WREADY received, handshake complete
# [BEAT 129/171] Beat completed, advancing to next
# [BEAT 130/171] Starting beat processing
# [BEAT 130/171] No WVALID delay (delay=0)
# [BEAT 130/171] Setting WDATA=0x73f637e7, WLAST=0, WVALID=1
# [BEAT 130/171] WVALID asserted, waiting for WREADY...
# [BEAT 130/171] WREADY received, handshake complete
# [BEAT 130/171] Beat completed, advancing to next
# [BEAT 131/171] Starting beat processing
# [BEAT 131/171] Applying WVALID delay of 3 cycles
# [BEAT 131/171] WVALID delay completed
# [BEAT 131/171] Setting WDATA=0x92ad4825, WLAST=0, WVALID=1
# [BEAT 131/171] WVALID asserted, waiting for WREADY...
# [BEAT 131/171] WREADY received, handshake complete
# [BEAT 131/171] Beat completed, advancing to next
# [BEAT 132/171] Starting beat processing
# [BEAT 132/171] Applying WVALID delay of 2 cycles
# [BEAT 132/171] WVALID delay completed
# [BEAT 132/171] Setting WDATA=0x88525210, WLAST=0, WVALID=1
# [BEAT 132/171] WVALID asserted, waiting for WREADY...
# [BEAT 132/171] WREADY received, handshake complete
# [BEAT 132/171] Beat completed, advancing to next
# [BEAT 133/171] Starting beat processing
# [BEAT 133/171] Applying WVALID delay of 3 cycles
# [BEAT 133/171] WVALID delay completed
# [BEAT 133/171] Setting WDATA=0xa906d052, WLAST=0, WVALID=1
# [BEAT 133/171] WVALID asserted, waiting for WREADY...
# [BEAT 133/171] WREADY received, handshake complete
# [BEAT 133/171] Beat completed, advancing to next
# [BEAT 134/171] Starting beat processing
# [BEAT 134/171] Applying WVALID delay of 2 cycles
# [BEAT 134/171] WVALID delay completed
# [BEAT 134/171] Setting WDATA=0x822d9204, WLAST=0, WVALID=1
# [BEAT 134/171] WVALID asserted, waiting for WREADY...
# [BEAT 134/171] WREADY received, handshake complete
# [BEAT 134/171] Beat completed, advancing to next
# [BEAT 135/171] Starting beat processing
# [BEAT 135/171] Applying WVALID delay of 1 cycles
# [BEAT 135/171] WVALID delay completed
# [BEAT 135/171] Setting WDATA=0x1f7a373e, WLAST=0, WVALID=1
# [BEAT 135/171] WVALID asserted, waiting for WREADY...
# [BEAT 135/171] WREADY received, handshake complete
# [BEAT 135/171] Beat completed, advancing to next
# [BEAT 136/171] Starting beat processing
# [BEAT 136/171] Applying WVALID delay of 3 cycles
# [BEAT 136/171] WVALID delay completed
# [BEAT 136/171] Setting WDATA=0x9eb1483d, WLAST=0, WVALID=1
# [BEAT 136/171] WVALID asserted, waiting for WREADY...
# [BEAT 136/171] WREADY received, handshake complete
# [BEAT 136/171] Beat completed, advancing to next
# [BEAT 137/171] Starting beat processing
# [BEAT 137/171] Applying WVALID delay of 3 cycles
# [BEAT 137/171] WVALID delay completed
# [BEAT 137/171] Setting WDATA=0x5ac13fb5, WLAST=0, WVALID=1
# [BEAT 137/171] WVALID asserted, waiting for WREADY...
# [BEAT 137/171] WREADY received, handshake complete
# [BEAT 137/171] Beat completed, advancing to next
# [BEAT 138/171] Starting beat processing
# [BEAT 138/171] Applying WVALID delay of 1 cycles
# [BEAT 138/171] WVALID delay completed
# [BEAT 138/171] Setting WDATA=0xb90c8072, WLAST=0, WVALID=1
# [BEAT 138/171] WVALID asserted, waiting for WREADY...
# [BEAT 138/171] WREADY received, handshake complete
# [BEAT 138/171] Beat completed, advancing to next
# [BEAT 139/171] Starting beat processing
# [BEAT 139/171] Applying WVALID delay of 1 cycles
# [BEAT 139/171] WVALID delay completed
# [BEAT 139/171] Setting WDATA=0x50b937a1, WLAST=0, WVALID=1
# [BEAT 139/171] WVALID asserted, waiting for WREADY...
# [BEAT 139/171] WREADY received, handshake complete
# [BEAT 139/171] Beat completed, advancing to next
# [BEAT 140/171] Starting beat processing
# [BEAT 140/171] No WVALID delay (delay=0)
# [BEAT 140/171] Setting WDATA=0x40016780, WLAST=0, WVALID=1
# [BEAT 140/171] WVALID asserted, waiting for WREADY...
# [BEAT 140/171] WREADY received, handshake complete
# [BEAT 140/171] Beat completed, advancing to next
# [BEAT 141/171] Starting beat processing
# [BEAT 141/171] Applying WVALID delay of 2 cycles
# [BEAT 141/171] WVALID delay completed
# [BEAT 141/171] Setting WDATA=0xb878da70, WLAST=0, WVALID=1
# [BEAT 141/171] WVALID asserted, waiting for WREADY...
# [BEAT 141/171] WREADY received, handshake complete
# [BEAT 141/171] Beat completed, advancing to next
# [BEAT 142/171] Starting beat processing
# [BEAT 142/171] Applying WVALID delay of 1 cycles
# [BEAT 142/171] WVALID delay completed
# [BEAT 142/171] Setting WDATA=0xb3c99e67, WLAST=0, WVALID=1
# [BEAT 142/171] WVALID asserted, waiting for WREADY...
# [BEAT 142/171] WREADY received, handshake complete
# [BEAT 142/171] Beat completed, advancing to next
# [BEAT 143/171] Starting beat processing
# [BEAT 143/171] Applying WVALID delay of 1 cycles
# [BEAT 143/171] WVALID delay completed
# [BEAT 143/171] Setting WDATA=0xd31130a6, WLAST=0, WVALID=1
# [BEAT 143/171] WVALID asserted, waiting for WREADY...
# [BEAT 143/171] WREADY received, handshake complete
# [BEAT 143/171] Beat completed, advancing to next
# [BEAT 144/171] Starting beat processing
# [BEAT 144/171] Applying WVALID delay of 3 cycles
# [BEAT 144/171] WVALID delay completed
# [BEAT 144/171] Setting WDATA=0x13e9ab27, WLAST=0, WVALID=1
# [BEAT 144/171] WVALID asserted, waiting for WREADY...
# [BEAT 144/171] WREADY received, handshake complete
# [BEAT 144/171] Beat completed, advancing to next
# [BEAT 145/171] Starting beat processing
# [BEAT 145/171] No WVALID delay (delay=0)
# [BEAT 145/171] Setting WDATA=0x79b171f3, WLAST=0, WVALID=1
# [BEAT 145/171] WVALID asserted, waiting for WREADY...
# [BEAT 145/171] WREADY received, handshake complete
# [BEAT 145/171] Beat completed, advancing to next
# [BEAT 146/171] Starting beat processing
# [BEAT 146/171] Applying WVALID delay of 2 cycles
# [BEAT 146/171] WVALID delay completed
# [BEAT 146/171] Setting WDATA=0xe44b48c8, WLAST=0, WVALID=1
# [BEAT 146/171] WVALID asserted, waiting for WREADY...
# [BEAT 146/171] WREADY received, handshake complete
# [BEAT 146/171] Beat completed, advancing to next
# [BEAT 147/171] Starting beat processing
# [BEAT 147/171] No WVALID delay (delay=0)
# [BEAT 147/171] Setting WDATA=0xeaa5d6d5, WLAST=0, WVALID=1
# [BEAT 147/171] WVALID asserted, waiting for WREADY...
# [BEAT 147/171] WREADY received, handshake complete
# [BEAT 147/171] Beat completed, advancing to next
# [BEAT 148/171] Starting beat processing
# [BEAT 148/171] Applying WVALID delay of 2 cycles
# [BEAT 148/171] WVALID delay completed
# [BEAT 148/171] Setting WDATA=0x26b6d34d, WLAST=0, WVALID=1
# [BEAT 148/171] WVALID asserted, waiting for WREADY...
# [BEAT 148/171] WREADY received, handshake complete
# [BEAT 148/171] Beat completed, advancing to next
# [BEAT 149/171] Starting beat processing
# [BEAT 149/171] Applying WVALID delay of 2 cycles
# [BEAT 149/171] WVALID delay completed
# [BEAT 149/171] Setting WDATA=0x19698d32, WLAST=0, WVALID=1
# [BEAT 149/171] WVALID asserted, waiting for WREADY...
# [BEAT 149/171] WREADY received, handshake complete
# [BEAT 149/171] Beat completed, advancing to next
# [BEAT 150/171] Starting beat processing
# [BEAT 150/171] Applying WVALID delay of 3 cycles
# [BEAT 150/171] WVALID delay completed
# [BEAT 150/171] Setting WDATA=0x41839b83, WLAST=0, WVALID=1
# [BEAT 150/171] WVALID asserted, waiting for WREADY...
# [BEAT 150/171] WREADY received, handshake complete
# [BEAT 150/171] Beat completed, advancing to next
# [BEAT 151/171] Starting beat processing
# [BEAT 151/171] No WVALID delay (delay=0)
# [BEAT 151/171] Setting WDATA=0xbec38e7d, WLAST=0, WVALID=1
# [BEAT 151/171] WVALID asserted, waiting for WREADY...
# [BEAT 151/171] WREADY received, handshake complete
# [BEAT 151/171] Beat completed, advancing to next
# [BEAT 152/171] Starting beat processing
# [BEAT 152/171] Applying WVALID delay of 1 cycles
# [BEAT 152/171] WVALID delay completed
# [BEAT 152/171] Setting WDATA=0x3e17577c, WLAST=0, WVALID=1
# [BEAT 152/171] WVALID asserted, waiting for WREADY...
# [BEAT 152/171] WREADY received, handshake complete
# [BEAT 152/171] Beat completed, advancing to next
# [BEAT 153/171] Starting beat processing
# [BEAT 153/171] Applying WVALID delay of 1 cycles
# [BEAT 153/171] WVALID delay completed
# [BEAT 153/171] Setting WDATA=0x3ca67d79, WLAST=0, WVALID=1
# [BEAT 153/171] WVALID asserted, waiting for WREADY...
# [BEAT 153/171] WREADY received, handshake complete
# [BEAT 153/171] Beat completed, advancing to next
# [BEAT 154/171] Starting beat processing
# [BEAT 154/171] Applying WVALID delay of 1 cycles
# [BEAT 154/171] WVALID delay completed
# [BEAT 154/171] Setting WDATA=0x818c7003, WLAST=0, WVALID=1
# [BEAT 154/171] WVALID asserted, waiting for WREADY...
# [BEAT 154/171] WREADY received, handshake complete
# [BEAT 154/171] Beat completed, advancing to next
# [BEAT 155/171] Starting beat processing
# [BEAT 155/171] No WVALID delay (delay=0)
# [BEAT 155/171] Setting WDATA=0x4e4b899c, WLAST=0, WVALID=1
# [BEAT 155/171] WVALID asserted, waiting for WREADY...
# [BEAT 155/171] WREADY received, handshake complete
# [BEAT 155/171] Beat completed, advancing to next
# [BEAT 156/171] Starting beat processing
# [BEAT 156/171] No WVALID delay (delay=0)
# [BEAT 156/171] Setting WDATA=0x0f97751f, WLAST=0, WVALID=1
# [BEAT 156/171] WVALID asserted, waiting for WREADY...
# [BEAT 156/171] WREADY received, handshake complete
# [BEAT 156/171] Beat completed, advancing to next
# [BEAT 157/171] Starting beat processing
# [BEAT 157/171] No WVALID delay (delay=0)
# [BEAT 157/171] Setting WDATA=0x9fc04c3f, WLAST=0, WVALID=1
# [BEAT 157/171] WVALID asserted, waiting for WREADY...
# [BEAT 157/171] WREADY received, handshake complete
# [BEAT 157/171] Beat completed, advancing to next
# [BEAT 158/171] Starting beat processing
# [BEAT 158/171] Applying WVALID delay of 1 cycles
# [BEAT 158/171] WVALID delay completed
# [BEAT 158/171] Setting WDATA=0xfb8366f7, WLAST=0, WVALID=1
# [BEAT 158/171] WVALID asserted, waiting for WREADY...
# [BEAT 158/171] WREADY received, handshake complete
# [BEAT 158/171] Beat completed, advancing to next
# [BEAT 159/171] Starting beat processing
# [BEAT 159/171] Applying WVALID delay of 1 cycles
# [BEAT 159/171] WVALID delay completed
# [BEAT 159/171] Setting WDATA=0x78dfaff1, WLAST=0, WVALID=1
# [BEAT 159/171] WVALID asserted, waiting for WREADY...
# [BEAT 159/171] WREADY received, handshake complete
# [BEAT 159/171] Beat completed, advancing to next
# [BEAT 160/171] Starting beat processing
# [BEAT 160/171] Applying WVALID delay of 3 cycles
# [BEAT 160/171] WVALID delay completed
# [BEAT 160/171] Setting WDATA=0xd4dd28a9, WLAST=0, WVALID=1
# [BEAT 160/171] WVALID asserted, waiting for WREADY...
# [BEAT 160/171] WREADY received, handshake complete
# [BEAT 160/171] Beat completed, advancing to next
# [BEAT 161/171] Starting beat processing
# [BEAT 161/171] No WVALID delay (delay=0)
# [BEAT 161/171] Setting WDATA=0xd66dc6ac, WLAST=0, WVALID=1
# [BEAT 161/171] WVALID asserted, waiting for WREADY...
# [BEAT 161/171] WREADY received, handshake complete
# [BEAT 161/171] Beat completed, advancing to next
# [BEAT 162/171] Starting beat processing
# [BEAT 162/171] No WVALID delay (delay=0)
# [BEAT 162/171] Setting WDATA=0x0d25d71a, WLAST=0, WVALID=1
# [BEAT 162/171] WVALID asserted, waiting for WREADY...
# [BEAT 162/171] WREADY received, handshake complete
# [BEAT 162/171] Beat completed, advancing to next
# [BEAT 163/171] Starting beat processing
# [BEAT 163/171] No WVALID delay (delay=0)
# [BEAT 163/171] Setting WDATA=0x48ceaf91, WLAST=0, WVALID=1
# [BEAT 163/171] WVALID asserted, waiting for WREADY...
# [BEAT 163/171] WREADY received, handshake complete
# [BEAT 163/171] Beat completed, advancing to next
# [BEAT 164/171] Starting beat processing
# [BEAT 164/171] No WVALID delay (delay=0)
# [BEAT 164/171] Setting WDATA=0x79a42df3, WLAST=0, WVALID=1
# [BEAT 164/171] WVALID asserted, waiting for WREADY...
# [BEAT 164/171] WREADY received, handshake complete
# [BEAT 164/171] Beat completed, advancing to next
# [BEAT 165/171] Starting beat processing
# [BEAT 165/171] Applying WVALID delay of 2 cycles
# [BEAT 165/171] WVALID delay completed
# [BEAT 165/171] Setting WDATA=0xea9076d5, WLAST=0, WVALID=1
# [BEAT 165/171] WVALID asserted, waiting for WREADY...
# [BEAT 165/171] WREADY received, handshake complete
# [BEAT 165/171] Beat completed, advancing to next
# [BEAT 166/171] Starting beat processing
# [BEAT 166/171] Applying WVALID delay of 3 cycles
# [BEAT 166/171] WVALID delay completed
# [BEAT 166/171] Setting WDATA=0xa02ce040, WLAST=0, WVALID=1
# [BEAT 166/171] WVALID asserted, waiting for WREADY...
# [BEAT 166/171] WREADY received, handshake complete
# [BEAT 166/171] Beat completed, advancing to next
# [BEAT 167/171] Starting beat processing
# [BEAT 167/171] Applying WVALID delay of 2 cycles
# [BEAT 167/171] WVALID delay completed
# [BEAT 167/171] Setting WDATA=0x69bff3d3, WLAST=0, WVALID=1
# [BEAT 167/171] WVALID asserted, waiting for WREADY...
# [BEAT 167/171] WREADY received, handshake complete
# [BEAT 167/171] Beat completed, advancing to next
# [BEAT 168/171] Starting beat processing
# [BEAT 168/171] Applying WVALID delay of 2 cycles
# [BEAT 168/171] WVALID delay completed
# [BEAT 168/171] Setting WDATA=0x5f7a01be, WLAST=0, WVALID=1
# [BEAT 168/171] WVALID asserted, waiting for WREADY...
# [BEAT 168/171] WREADY received, handshake complete
# [BEAT 168/171] Beat completed, advancing to next
# [BEAT 169/171] Starting beat processing
# [BEAT 169/171] Applying WVALID delay of 1 cycles
# [BEAT 169/171] WVALID delay completed
# [BEAT 169/171] Setting WDATA=0xa5c0a84b, WLAST=0, WVALID=1
# [BEAT 169/171] WVALID asserted, waiting for WREADY...
# [BEAT 169/171] WREADY received, handshake complete
# [BEAT 169/171] Beat completed, advancing to next
# [BEAT 170/171] Starting beat processing
# [BEAT 170/171] Applying WVALID delay of 1 cycles
# [BEAT 170/171] WVALID delay completed
# [BEAT 170/171] Setting WDATA=0x2b695d56, WLAST=0, WVALID=1
# [BEAT 170/171] WVALID asserted, waiting for WREADY...
# [BEAT 170/171] WREADY received, handshake complete
# [BEAT 170/171] Beat completed, advancing to next
# [BEAT 171/171] Starting beat processing
# [BEAT 171/171] No WVALID delay (delay=0)
# [BEAT 171/171] Setting WDATA=0x781fa9f0, WLAST=1, WVALID=1
# [BEAT 171/171] WVALID asserted, waiting for WREADY...
# [BEAT 171/171] WREADY received, handshake complete
# [BEAT 171/171] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9398 Result (WRITE_OP)
#   Actual   : AWADDR=0x0bb8 AWLEN=170 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0bb8 AWLEN=170 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Applying reset for 4 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0eb0, ARLEN=29, ARVALID delayed by 0 cycles
# Address phase complete
# Read beat 0: RDATA=0x50b2eba1, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0x9ee9343d, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0x4c214f98, RLAST=0 (with RREADY backpressure)
# Read beat 3: RDATA=0xf3e5c4e7, RLAST=0 (with RREADY backpressure)
# Read beat 4: RDATA=0xaaaaaaaa, RLAST=0 (with RREADY backpressure)
# Read beat 5: RDATA=0xaaaaaaaa, RLAST=0 (with RREADY backpressure)
# Read beat 6: RDATA=0xaaaaaaaa, RLAST=0 (with RREADY backpressure)
# Read beat 7: RDATA=0xaaaaaaaa, RLAST=0 (with RREADY backpressure)
# Read beat 8: RDATA=0xaaaaaaaa, RLAST=0 (with RREADY backpressure)
# Read beat 9: RDATA=0xaaaaaaaa, RLAST=0 (with RREADY backpressure)
# Read beat 10: RDATA=0xaaaaaaaa, RLAST=0 (with RREADY backpressure)
# Read beat 11: RDATA=0xaaaaaaaa, RLAST=0 (with RREADY backpressure)
# Read beat 12: RDATA=0xa4a74249, RLAST=0 (with RREADY backpressure)
# Read beat 13: RDATA=0x556413aa, RLAST=0 (with RREADY backpressure)
# Read beat 14: RDATA=0x87d3820f, RLAST=0 (with RREADY backpressure)
# Read beat 15: RDATA=0x02ab0505, RLAST=0 (with RREADY backpressure)
# Read beat 16: RDATA=0xd54290aa, RLAST=0 (with RREADY backpressure)
# Read beat 17: RDATA=0xb699006d, RLAST=0 (with RREADY backpressure)
# Read beat 18: RDATA=0xfcb01ef9, RLAST=0 (with RREADY backpressure)
# Read beat 19: RDATA=0x66b4d3cd, RLAST=0 (with RREADY backpressure)
# Read beat 20: RDATA=0xe0b578c1, RLAST=0 (with RREADY backpressure)
# Read beat 21: RDATA=0x9fffb43f, RLAST=0 (with RREADY backpressure)
# Read beat 22: RDATA=0xcfd31e9f, RLAST=0 (with RREADY backpressure)
# Read beat 23: RDATA=0xa8690450, RLAST=0 (with RREADY backpressure)
# Read beat 24: RDATA=0x33b78367, RLAST=0 (with RREADY backpressure)
# Read beat 25: RDATA=0x3bf97777, RLAST=0 (with RREADY backpressure)
# Read beat 26: RDATA=0x25f81b4b, RLAST=0 (with RREADY backpressure)
# Read beat 27: RDATA=0x1960a532, RLAST=0 (with RREADY backpressure)
# Read beat 28: RDATA=0xdcebd4b9, RLAST=0 (with RREADY backpressure)
# Read beat 29: RDATA=0xb56a146a, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 29
# Read transaction complete
# ======================================================
# Test #9399 Result (READ_OP)
#   Actual   : ARADDR=0x0eb0 ARLEN=29 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0eb0 ARLEN=29 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Coverage-driven test 4570: Overall coverage = 100.0%
# Coverage appears stuck at 100.0% - running specific hole tests...
# === COMPREHENSIVE COVERAGE HOLE FILLING ===
# Testing FSM state transitions with handshaking variations...
# === COVERAGE REPORT (Transaction 9400) ===
# Data Patterns: 4/4 (100.0%)
# Address Ranges: 6/6 (100.0%)
# Boundary Cases: 1/2 (50.0%)
# Corner Cases: 12/12 (100.0%)
# ===========================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Setting AWADDR=0x08c0, AWLEN=2, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 2240, AWLEN=2, AWSIZE=2, STOP_ADDR=      2252, 4KB_OFFSET=      2252, Is it supposed to cross 4KB?  NO
# Starting data phase with 3 beats...
# [BEAT 1/3] Starting beat processing
# [BEAT 1/3] Applying WVALID delay of 2 cycles
# [BEAT 1/3] WVALID delay completed
# [BEAT 1/3] Setting WDATA=0x7339dfe6, WLAST=0, WVALID=1
# [BEAT 1/3] WVALID asserted, waiting for WREADY...
# [BEAT 1/3] WREADY received, handshake complete
# [BEAT 1/3] Beat completed, advancing to next
# [BEAT 2/3] Starting beat processing
# [BEAT 2/3] Applying WVALID delay of 1 cycles
# [BEAT 2/3] WVALID delay completed
# [BEAT 2/3] Setting WDATA=0x11996b23, WLAST=0, WVALID=1
# [BEAT 2/3] WVALID asserted, waiting for WREADY...
# [BEAT 2/3] WREADY received, handshake complete
# [BEAT 2/3] Beat completed, advancing to next
# [BEAT 3/3] Starting beat processing
# [BEAT 3/3] Applying WVALID delay of 2 cycles
# [BEAT 3/3] WVALID delay completed
# [BEAT 3/3] Setting WDATA=0x4b9fe997, WLAST=1, WVALID=1
# [BEAT 3/3] WVALID asserted, waiting for WREADY...
# [BEAT 3/3] WREADY received, handshake complete
# [BEAT 3/3] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=0
# BREADY not asserted - response phase incomplete
# BRESP available but not captured due to BREADY=0: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9399 Result (WRITE_OP)
#   Actual   : AWADDR=0x08c0 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x08c0 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Applying reset for 4 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x04b0, ARLEN=0, ARVALID delayed by 1 cycles
# Address phase complete
# Read beat 0: RDATA=0xffffffff, RLAST=0, RREADY_delay=1
# ** Error: [ERROR] RLAST not asserted on last beat (beat 0), LEN=0 - RLAST should be 1
#    Time: 15599715 ns  Scope: top.tb.drive_read_transaction File: Testbench.sv Line: 416
# Read transaction complete
# === COMPREHENSIVE COVERAGE REPORT ===
# Burst Coverage:           100.0%
# Memory Address Coverage:  100.0%
# Data Patterns Coverage:   100.0%
# Protocol Coverage:        100.0%
# -------------------------------------
# Overall Coverage:         100.0%
# =====================================
# 
# === DETAILED COVERAGE BINS ===
# Address Ranges Hit:
#   Low (0-341): R=✓, W=✓
#   Mid (342-681): R=✓, W=✓
#   High (682-1023): R=✓, W=✓
# Boundary Cases: No_Cross=✓, Cross=✗
# ===============================
# ======================================================
# Test #9400 Result (READ_OP)
#   Actual   : ARADDR=0x04b0 ARLEN=0 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x04b0 ARLEN=0 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 2 cycles
# AWVALID delay completed
# Setting AWADDR=0x0cb0, AWLEN=2, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 3248, AWLEN=2, AWSIZE=2, STOP_ADDR=      3260, 4KB_OFFSET=      3260, Is it supposed to cross 4KB?  NO
# Starting data phase with 3 beats...
# [BEAT 1/3] Starting beat processing
# [BEAT 1/3] Applying WVALID delay of 2 cycles
# [BEAT 1/3] WVALID delay completed
# [BEAT 1/3] Setting WDATA=0x954aba2a, WLAST=0, WVALID=1
# [BEAT 1/3] WVALID asserted, waiting for WREADY...
# [BEAT 1/3] WREADY received, handshake complete
# [BEAT 1/3] Beat completed, advancing to next
# [BEAT 2/3] Starting beat processing
# [BEAT 2/3] Applying WVALID delay of 2 cycles
# [BEAT 2/3] WVALID delay completed
# [BEAT 2/3] Setting WDATA=0x1048c120, WLAST=0, WVALID=1
# [BEAT 2/3] WVALID asserted, waiting for WREADY...
# [BEAT 2/3] WREADY received, handshake complete
# [BEAT 2/3] Beat completed, advancing to next
# [BEAT 3/3] Starting beat processing
# [BEAT 3/3] No WVALID delay (delay=0)
# [BEAT 3/3] Setting WDATA=0x7ac487f5, WLAST=1, WVALID=1
# [BEAT 3/3] WVALID asserted, waiting for WREADY...
# [BEAT 3/3] WREADY received, handshake complete
# [BEAT 3/3] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=0
# BREADY not asserted - response phase incomplete
# BRESP available but not captured due to BREADY=0: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9401 Result (WRITE_OP)
#   Actual   : AWADDR=0x0cb0 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0cb0 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 3 cycles
# AWVALID delay completed
# Setting AWADDR=0x0180, AWLEN=3, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR=  384, AWLEN=3, AWSIZE=2, STOP_ADDR=       400, 4KB_OFFSET=       400, Is it supposed to cross 4KB?  NO
# Starting data phase with 4 beats...
# [BEAT 1/4] Starting beat processing
# [BEAT 1/4] Applying WVALID delay of 3 cycles
# [BEAT 1/4] WVALID delay completed
# [BEAT 1/4] Setting WDATA=0xd024e0a0, WLAST=0, WVALID=1
# [BEAT 1/4] WVALID asserted, waiting for WREADY...
# [BEAT 1/4] WREADY received, handshake complete
# [BEAT 1/4] Beat completed, advancing to next
# [BEAT 2/4] Starting beat processing
# [BEAT 2/4] No WVALID delay (delay=0)
# [BEAT 2/4] Setting WDATA=0x6c7ad5d8, WLAST=0, WVALID=1
# [BEAT 2/4] WVALID asserted, waiting for WREADY...
# [BEAT 2/4] WREADY received, handshake complete
# [BEAT 2/4] Beat completed, advancing to next
# [BEAT 3/4] Starting beat processing
# [BEAT 3/4] Applying WVALID delay of 1 cycles
# [BEAT 3/4] WVALID delay completed
# [BEAT 3/4] Setting WDATA=0xed9164db, WLAST=0, WVALID=1
# [BEAT 3/4] WVALID asserted, waiting for WREADY...
# [BEAT 3/4] WREADY received, handshake complete
# [BEAT 3/4] Beat completed, advancing to next
# [BEAT 4/4] Starting beat processing
# [BEAT 4/4] Applying WVALID delay of 1 cycles
# [BEAT 4/4] WVALID delay completed
# [BEAT 4/4] Setting WDATA=0x02c68b05, WLAST=1, WVALID=1
# [BEAT 4/4] WVALID asserted, waiting for WREADY...
# [BEAT 4/4] WREADY received, handshake complete
# [BEAT 4/4] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9402 Result (WRITE_OP)
#   Actual   : AWADDR=0x0180 AWLEN=3 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0180 AWLEN=3 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Testbench.sv(873): randomize() failed due to conflicts between the following constraints:
# 	Testbench.sv(875): (awvalid_delay == (local::i % 6));
# 	enhanced_Transaction.sv(216): handshake_delay_c { (awvalid_delay inside { [0:3] }); }
# Where:
# 	awvalid_delay = 4 /* random  */
# 	local::i = 4 /* non-random */ 
# ** Note: (vsim-7130) Enabling enhanced debug (-solvefaildebug=2) may generate a more descriptive constraint contradiction report.
# ** Note: (vsim-7106) Use vsim option '-solvefailtestcase[=filename]' to generate a simplified testcase that will reproduce the failure.
# ** Warning: (vsim-7084) No solutions exist which satisfy the specified constraints; randomize() failed.
# 
#    Time: 15600145 ns  Iteration: 1  Process: /top/tb/#INITIAL#1133 File: Testbench.sv Line: 873
# Testbench.sv(873): randomize() failed due to conflicts between the following constraints:
# 	Testbench.sv(875): (awvalid_delay == (local::i % 6));
# 	enhanced_Transaction.sv(216): handshake_delay_c { (awvalid_delay inside { [0:3] }); }
# Where:
# 	awvalid_delay = 5 /* random  */
# 	local::i = 5 /* non-random */ 
# ** Note: (vsim-7130) Enabling enhanced debug (-solvefaildebug=2) may generate a more descriptive constraint contradiction report.
# ** Note: (vsim-7106) Use vsim option '-solvefailtestcase[=filename]' to generate a simplified testcase that will reproduce the failure.
# ** Warning: (vsim-7084) No solutions exist which satisfy the specified constraints; randomize() failed.
# 
#    Time: 15600145 ns  Iteration: 1  Process: /top/tb/#INITIAL#1133 File: Testbench.sv Line: 873
# Applying reset for 3 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0744, ARLEN=0, ARVALID delayed by 2 cycles
# Address phase complete
# Read beat 0: RDATA=0x00000000, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 0
# Read transaction complete
# ======================================================
# Test #9403 Result (READ_OP)
#   Actual   : ARADDR=0x0744 ARLEN=0 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0744 ARLEN=0 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 1 cycles
# AWVALID delay completed
# Setting AWADDR=0x0b54, AWLEN=1, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 2900, AWLEN=1, AWSIZE=2, STOP_ADDR=      2908, 4KB_OFFSET=      2908, Is it supposed to cross 4KB?  NO
# Starting data phase with 2 beats...
# [BEAT 1/2] Starting beat processing
# [BEAT 1/2] Applying WVALID delay of 1 cycles
# [BEAT 1/2] WVALID delay completed
# [BEAT 1/2] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 1/2] WVALID asserted, waiting for WREADY...
# [BEAT 1/2] WREADY received, handshake complete
# [BEAT 1/2] Beat completed, advancing to next
# [BEAT 2/2] Starting beat processing
# [BEAT 2/2] No WVALID delay (delay=0)
# [BEAT 2/2] Setting WDATA=0x00000000, WLAST=1, WVALID=1
# [BEAT 2/2] WVALID asserted, waiting for WREADY...
# [BEAT 2/2] WREADY received, handshake complete
# [BEAT 2/2] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9404 Result (WRITE_OP)
#   Actual   : AWADDR=0x0b54 AWLEN=1 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0b54 AWLEN=1 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Applying reset for 2 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x077c, ARLEN=2, ARVALID delayed by 0 cycles
# Address phase complete
# Read beat 0: RDATA=0x00000000, RLAST=0, RREADY_delay=1
# Read beat 1: RDATA=0x00000000, RLAST=0, RREADY_delay=0
# Read beat 2: RDATA=0x00000000, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 2
# Read transaction complete
# ======================================================
# Test #9405 Result (READ_OP)
#   Actual   : ARADDR=0x077c ARLEN=2 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x077c ARLEN=2 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 3 cycles
# AWVALID delay completed
# Setting AWADDR=0x0d9c, AWLEN=0, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 3484, AWLEN=0, AWSIZE=2, STOP_ADDR=      3488, 4KB_OFFSET=      3488, Is it supposed to cross 4KB?  NO
# Starting data phase with 1 beats...
# [BEAT 1/1] Starting beat processing
# [BEAT 1/1] Applying WVALID delay of 3 cycles
# [BEAT 1/1] WVALID delay completed
# [BEAT 1/1] Setting WDATA=0xd73860ae, WLAST=1, WVALID=1
# [BEAT 1/1] WVALID asserted, waiting for WREADY...
# [BEAT 1/1] WREADY received, handshake complete
# [BEAT 1/1] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9406 Result (WRITE_OP)
#   Actual   : AWADDR=0x0d9c AWLEN=0 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0d9c AWLEN=0 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Testbench.sv(873): randomize() failed due to conflicts between the following constraints:
# 	Testbench.sv(875): (awvalid_delay == (local::i % 6));
# 	enhanced_Transaction.sv(216): handshake_delay_c { (awvalid_delay inside { [0:3] }); }
# Where:
# 	awvalid_delay = 4 /* random  */
# 	local::i = 10 /* non-random */ 
# ** Note: (vsim-7130) Enabling enhanced debug (-solvefaildebug=2) may generate a more descriptive constraint contradiction report.
# ** Note: (vsim-7106) Use vsim option '-solvefailtestcase[=filename]' to generate a simplified testcase that will reproduce the failure.
# ** Warning: (vsim-7084) No solutions exist which satisfy the specified constraints; randomize() failed.
# 
#    Time: 15600745 ns  Iteration: 1  Process: /top/tb/#INITIAL#1133 File: Testbench.sv Line: 873
# Testbench.sv(873): randomize() failed due to conflicts between the following constraints:
# 	Testbench.sv(875): (awvalid_delay == (local::i % 6));
# 	enhanced_Transaction.sv(216): handshake_delay_c { (awvalid_delay inside { [0:3] }); }
# Where:
# 	awvalid_delay = 5 /* random  */
# 	local::i = 11 /* non-random */ 
# ** Note: (vsim-7130) Enabling enhanced debug (-solvefaildebug=2) may generate a more descriptive constraint contradiction report.
# ** Note: (vsim-7106) Use vsim option '-solvefailtestcase[=filename]' to generate a simplified testcase that will reproduce the failure.
# ** Warning: (vsim-7084) No solutions exist which satisfy the specified constraints; randomize() failed.
# 
#    Time: 15600745 ns  Iteration: 1  Process: /top/tb/#INITIAL#1133 File: Testbench.sv Line: 873
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Setting AWADDR=0x0d48, AWLEN=1, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 3400, AWLEN=1, AWSIZE=2, STOP_ADDR=      3408, 4KB_OFFSET=      3408, Is it supposed to cross 4KB?  NO
# Starting data phase with 2 beats...
# [BEAT 1/2] Starting beat processing
# [BEAT 1/2] Applying WVALID delay of 3 cycles
# [BEAT 1/2] WVALID delay completed
# [BEAT 1/2] Setting WDATA=0x94726228, WLAST=0, WVALID=1
# [BEAT 1/2] WVALID asserted, waiting for WREADY...
# [BEAT 1/2] WREADY received, handshake complete
# [BEAT 1/2] Beat completed, advancing to next
# [BEAT 2/2] Starting beat processing
# [BEAT 2/2] Applying WVALID delay of 3 cycles
# [BEAT 2/2] WVALID delay completed
# [BEAT 2/2] Setting WDATA=0x10404720, WLAST=1, WVALID=1
# [BEAT 2/2] WVALID asserted, waiting for WREADY...
# [BEAT 2/2] WREADY received, handshake complete
# [BEAT 2/2] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=0
# BREADY not asserted - response phase incomplete
# BRESP available but not captured due to BREADY=0: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9407 Result (WRITE_OP)
#   Actual   : AWADDR=0x0d48 AWLEN=1 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0d48 AWLEN=1 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 1 cycles
# AWVALID delay completed
# Setting AWADDR=0x0bb8, AWLEN=3, AWSIZE=2, AWVALID=0
# AWVALID NOT asserted, skipping AWREADY wait
# Address phase skipped (AWVALID=0), skipping data phase
# Transaction aborted - no data transfer
# ======================================================
# Test #9408 Result (WRITE_OP)
#   Actual   : AWADDR=0x0bb8 AWLEN=3 AWSIZE=2 BRESP=SLVERR
#   Expected : AWADDR=0x0bb8 AWLEN=3 AWSIZE=2 BRESP=SLVERR
#   TEST PASS
# ======================================================
# Applying reset for 4 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0a8c, ARLEN=2, ARVALID delayed by 2 cycles
# Address phase complete
# Read beat 0: RDATA=0xa0463840, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0x20072940, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0x294acb52, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 2
# Read transaction complete
# ======================================================
# Test #9409 Result (READ_OP)
#   Actual   : ARADDR=0x0a8c ARLEN=2 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0a8c ARLEN=2 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Testing comprehensive memory address coverage...
# Applying reset for 2 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0000, ARLEN=7, ARVALID delayed by 2 cycles
# Address phase complete
# Read beat 0: RDATA=0xxxxxxxxx, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0x23751346, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0x676f5bce, RLAST=0 (with RREADY backpressure)
# Read beat 3: RDATA=0xd51366aa, RLAST=0 (with RREADY backpressure)
# Read beat 4: RDATA=0xaaaaaaaa, RLAST=0 (with RREADY backpressure)
# Read beat 5: RDATA=0xaaaaaaaa, RLAST=0 (with RREADY backpressure)
# Read beat 6: RDATA=0xaaaaaaaa, RLAST=0 (with RREADY backpressure)
# Read beat 7: RDATA=0xc0f2f881, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 7
# Read transaction complete
# ======================================================
# Test #9410 Result (READ_OP)
#   Actual   : ARADDR=0x0000 ARLEN=7 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0000 ARLEN=7 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Applying reset for 2 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0040, ARLEN=4, ARVALID delayed by 1 cycles
# Address phase complete
# Read beat 0: RDATA=0x55555555, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0x55555555, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0x55555555, RLAST=0 (with RREADY backpressure)
# Read beat 3: RDATA=0x55555555, RLAST=0 (with RREADY backpressure)
# Read beat 4: RDATA=0x55555555, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 4
# Read transaction complete
# ======================================================
# Test #9411 Result (READ_OP)
#   Actual   : ARADDR=0x0040 ARLEN=4 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0040 ARLEN=4 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Applying reset for 4 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0080, ARLEN=4, ARVALID delayed by 1 cycles
# Address phase complete
# Read beat 0: RDATA=0x2b5e7b56, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0xffa702ff, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0x20aded41, RLAST=0 (with RREADY backpressure)
# Read beat 3: RDATA=0xffffffff, RLAST=0 (with RREADY backpressure)
# Read beat 4: RDATA=0xffffffff, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 4
# Read transaction complete
# ======================================================
# Test #9412 Result (READ_OP)
#   Actual   : ARADDR=0x0080 ARLEN=4 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0080 ARLEN=4 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 3 cycles...
# Randomized reset task completed
# Delaying AWVALID by 1 cycles
# AWVALID delay completed
# Setting AWADDR=0x00c0, AWLEN=6, AWSIZE=2, AWVALID=0
# AWVALID NOT asserted, skipping AWREADY wait
# Address phase skipped (AWVALID=0), skipping data phase
# Transaction aborted - no data transfer
# ======================================================
# Test #9413 Result (WRITE_OP)
#   Actual   : AWADDR=0x00c0 AWLEN=6 AWSIZE=2 BRESP=SLVERR
#   Expected : AWADDR=0x00c0 AWLEN=6 AWSIZE=2 BRESP=SLVERR
#   TEST PASS
# ======================================================
# Applying reset for 3 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0200, ARLEN=0, ARVALID delayed by 0 cycles
# Address phase complete
# Read beat 0: RDATA=0xf92376f2, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 0
# Read transaction complete
# ======================================================
# Test #9414 Result (READ_OP)
#   Actual   : ARADDR=0x0200 ARLEN=0 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0200 ARLEN=0 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Delaying AWVALID by 1 cycles
# AWVALID delay completed
# Setting AWADDR=0x0240, AWLEN=4, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR=  576, AWLEN=4, AWSIZE=2, STOP_ADDR=       596, 4KB_OFFSET=       596, Is it supposed to cross 4KB?  NO
# Starting data phase with 5 beats...
# [BEAT 1/5] Starting beat processing
# [BEAT 1/5] No WVALID delay (delay=0)
# [BEAT 1/5] Setting WDATA=0x3a737574, WLAST=0, WVALID=1
# [BEAT 1/5] WVALID asserted, waiting for WREADY...
# [BEAT 1/5] WREADY received, handshake complete
# [BEAT 1/5] Beat completed, advancing to next
# [BEAT 2/5] Starting beat processing
# [BEAT 2/5] Applying WVALID delay of 3 cycles
# [BEAT 2/5] WVALID delay completed
# [BEAT 2/5] Setting WDATA=0x1e90b53d, WLAST=0, WVALID=1
# [BEAT 2/5] WVALID asserted, waiting for WREADY...
# [BEAT 2/5] WREADY received, handshake complete
# [BEAT 2/5] Beat completed, advancing to next
# [BEAT 3/5] Starting beat processing
# [BEAT 3/5] No WVALID delay (delay=0)
# [BEAT 3/5] Setting WDATA=0x86a7660d, WLAST=0, WVALID=1
# [BEAT 3/5] WVALID asserted, waiting for WREADY...
# [BEAT 3/5] WREADY received, handshake complete
# [BEAT 3/5] Beat completed, advancing to next
# [BEAT 4/5] Starting beat processing
# [BEAT 4/5] Applying WVALID delay of 3 cycles
# [BEAT 4/5] WVALID delay completed
# [BEAT 4/5] Setting WDATA=0xb9bd4473, WLAST=0, WVALID=1
# [BEAT 4/5] WVALID asserted, waiting for WREADY...
# [BEAT 4/5] WREADY received, handshake complete
# [BEAT 4/5] Beat completed, advancing to next
# [BEAT 5/5] Starting beat processing
# [BEAT 5/5] No WVALID delay (delay=0)
# [BEAT 5/5] Setting WDATA=0x9cb57839, WLAST=1, WVALID=1
# [BEAT 5/5] WVALID asserted, waiting for WREADY...
# [BEAT 5/5] WREADY received, handshake complete
# [BEAT 5/5] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9415 Result (WRITE_OP)
#   Actual   : AWADDR=0x0240 AWLEN=4 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0240 AWLEN=4 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Applying reset for 4 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0280, ARLEN=7, ARVALID delayed by 1 cycles
# Address phase complete
# Read beat 0: RDATA=0x090d1312, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0xfa992cf5, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0x9fbd3e3f, RLAST=0 (with RREADY backpressure)
# Read beat 3: RDATA=0xc4080688, RLAST=0 (with RREADY backpressure)
# Read beat 4: RDATA=0x689a25d1, RLAST=0 (with RREADY backpressure)
# Read beat 5: RDATA=0xb957b672, RLAST=0 (with RREADY backpressure)
# Read beat 6: RDATA=0x9441bc28, RLAST=0 (with RREADY backpressure)
# Read beat 7: RDATA=0xca502094, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 7
# Read transaction complete
# ======================================================
# Test #9416 Result (READ_OP)
#   Actual   : ARADDR=0x0280 ARLEN=7 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0280 ARLEN=7 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Applying reset for 3 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x02c0, ARLEN=5, ARVALID delayed by 1 cycles
# Address phase complete
# Read beat 0: RDATA=0xf68b72ed, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0xf3dea4e7, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0x39d0c773, RLAST=0 (with RREADY backpressure)
# Read beat 3: RDATA=0xab3f9e56, RLAST=0 (with RREADY backpressure)
# Read beat 4: RDATA=0xfac5fef5, RLAST=0 (with RREADY backpressure)
# Read beat 5: RDATA=0xdbc7acb7, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 5
# Read transaction complete
# ======================================================
# Test #9417 Result (READ_OP)
#   Actual   : ARADDR=0x02c0 ARLEN=5 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x02c0 ARLEN=5 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Applying reset for 2 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0400, ARLEN=4, ARVALID delayed by 0 cycles
# Address phase complete
# Read beat 0: RDATA=0x00000000, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0x00000000, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0x55555555, RLAST=0 (with RREADY backpressure)
# Read beat 3: RDATA=0x55555555, RLAST=0 (with RREADY backpressure)
# Read beat 4: RDATA=0x55555555, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 4
# Read transaction complete
# ======================================================
# Test #9418 Result (READ_OP)
#   Actual   : ARADDR=0x0400 ARLEN=4 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0400 ARLEN=4 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Applying reset for 2 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0440, ARLEN=6, ARVALID delayed by 3 cycles
# Address phase complete
# Read beat 0: RDATA=0x60b73fc1, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0xfd522afa, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0x309e9961, RLAST=0 (with RREADY backpressure)
# Read beat 3: RDATA=0xd2a8baa5, RLAST=0 (with RREADY backpressure)
# Read beat 4: RDATA=0xfaaa26f5, RLAST=0 (with RREADY backpressure)
# Read beat 5: RDATA=0x83ce8807, RLAST=0 (with RREADY backpressure)
# Read beat 6: RDATA=0x8f53241e, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 6
# Read transaction complete
# ======================================================
# Test #9419 Result (READ_OP)
#   Actual   : ARADDR=0x0440 ARLEN=6 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0440 ARLEN=6 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Delaying AWVALID by 2 cycles
# AWVALID delay completed
# Setting AWADDR=0x0480, AWLEN=6, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 1152, AWLEN=6, AWSIZE=2, STOP_ADDR=      1180, 4KB_OFFSET=      1180, Is it supposed to cross 4KB?  NO
# Starting data phase with 7 beats...
# [BEAT 1/7] Starting beat processing
# [BEAT 1/7] No WVALID delay (delay=0)
# [BEAT 1/7] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 1/7] WVALID asserted, waiting for WREADY...
# [BEAT 1/7] WREADY received, handshake complete
# [BEAT 1/7] Beat completed, advancing to next
# [BEAT 2/7] Starting beat processing
# [BEAT 2/7] Applying WVALID delay of 1 cycles
# [BEAT 2/7] WVALID delay completed
# [BEAT 2/7] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 2/7] WVALID asserted, waiting for WREADY...
# [BEAT 2/7] WREADY received, handshake complete
# [BEAT 2/7] Beat completed, advancing to next
# [BEAT 3/7] Starting beat processing
# [BEAT 3/7] Applying WVALID delay of 1 cycles
# [BEAT 3/7] WVALID delay completed
# [BEAT 3/7] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 3/7] WVALID asserted, waiting for WREADY...
# [BEAT 3/7] WREADY received, handshake complete
# [BEAT 3/7] Beat completed, advancing to next
# [BEAT 4/7] Starting beat processing
# [BEAT 4/7] Applying WVALID delay of 2 cycles
# [BEAT 4/7] WVALID delay completed
# [BEAT 4/7] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 4/7] WVALID asserted, waiting for WREADY...
# [BEAT 4/7] WREADY received, handshake complete
# [BEAT 4/7] Beat completed, advancing to next
# [BEAT 5/7] Starting beat processing
# [BEAT 5/7] Applying WVALID delay of 2 cycles
# [BEAT 5/7] WVALID delay completed
# [BEAT 5/7] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 5/7] WVALID asserted, waiting for WREADY...
# [BEAT 5/7] WREADY received, handshake complete
# [BEAT 5/7] Beat completed, advancing to next
# [BEAT 6/7] Starting beat processing
# [BEAT 6/7] Applying WVALID delay of 3 cycles
# [BEAT 6/7] WVALID delay completed
# [BEAT 6/7] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 6/7] WVALID asserted, waiting for WREADY...
# [BEAT 6/7] WREADY received, handshake complete
# [BEAT 6/7] Beat completed, advancing to next
# [BEAT 7/7] Starting beat processing
# [BEAT 7/7] Applying WVALID delay of 1 cycles
# [BEAT 7/7] WVALID delay completed
# [BEAT 7/7] Setting WDATA=0xffffffff, WLAST=1, WVALID=1
# [BEAT 7/7] WVALID asserted, waiting for WREADY...
# [BEAT 7/7] WREADY received, handshake complete
# [BEAT 7/7] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9420 Result (WRITE_OP)
#   Actual   : AWADDR=0x0480 AWLEN=6 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0480 AWLEN=6 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 2 cycles
# AWVALID delay completed
# Setting AWADDR=0x04c0, AWLEN=2, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 1216, AWLEN=2, AWSIZE=2, STOP_ADDR=      1228, 4KB_OFFSET=      1228, Is it supposed to cross 4KB?  NO
# Starting data phase with 3 beats...
# [BEAT 1/3] Starting beat processing
# [BEAT 1/3] Applying WVALID delay of 1 cycles
# [BEAT 1/3] WVALID delay completed
# [BEAT 1/3] Setting WDATA=0x2b16cb56, WLAST=0, WVALID=1
# [BEAT 1/3] WVALID asserted, waiting for WREADY...
# [BEAT 1/3] WREADY received, handshake complete
# [BEAT 1/3] Beat completed, advancing to next
# [BEAT 2/3] Starting beat processing
# [BEAT 2/3] No WVALID delay (delay=0)
# [BEAT 2/3] Setting WDATA=0x73751fe6, WLAST=0, WVALID=1
# [BEAT 2/3] WVALID asserted, waiting for WREADY...
# [BEAT 2/3] WREADY received, handshake complete
# [BEAT 2/3] Beat completed, advancing to next
# [BEAT 3/3] Starting beat processing
# [BEAT 3/3] Applying WVALID delay of 3 cycles
# [BEAT 3/3] WVALID delay completed
# [BEAT 3/3] Setting WDATA=0x839dde07, WLAST=1, WVALID=1
# [BEAT 3/3] WVALID asserted, waiting for WREADY...
# [BEAT 3/3] WREADY received, handshake complete
# [BEAT 3/3] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9421 Result (WRITE_OP)
#   Actual   : AWADDR=0x04c0 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x04c0 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Setting AWADDR=0x0600, AWLEN=2, AWSIZE=2, AWVALID=0
# AWVALID NOT asserted, skipping AWREADY wait
# Address phase skipped (AWVALID=0), skipping data phase
# Transaction aborted - no data transfer
# ======================================================
# Test #9422 Result (WRITE_OP)
#   Actual   : AWADDR=0x0600 AWLEN=2 AWSIZE=2 BRESP=SLVERR
#   Expected : AWADDR=0x0600 AWLEN=2 AWSIZE=2 BRESP=SLVERR
#   TEST PASS
# ======================================================
# Applying reset for 4 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0640, ARLEN=6, ARVALID delayed by 2 cycles
# Address phase complete
# Read beat 0: RDATA=0xffffffff, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0xffffffff, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0xffffffff, RLAST=0 (with RREADY backpressure)
# Read beat 3: RDATA=0xffffffff, RLAST=0 (with RREADY backpressure)
# Read beat 4: RDATA=0xffffffff, RLAST=0 (with RREADY backpressure)
# Read beat 5: RDATA=0xffffffff, RLAST=0 (with RREADY backpressure)
# Read beat 6: RDATA=0xffffffff, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 6
# Read transaction complete
# ======================================================
# Test #9423 Result (READ_OP)
#   Actual   : ARADDR=0x0640 ARLEN=6 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0640 ARLEN=6 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Applying reset for 4 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0680, ARLEN=0, ARVALID delayed by 3 cycles
# Address phase complete
# Read beat 0: RDATA=0xffffffff, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 0
# Read transaction complete
# ======================================================
# Test #9424 Result (READ_OP)
#   Actual   : ARADDR=0x0680 ARLEN=0 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0680 ARLEN=0 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Applying reset for 4 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x06c0, ARLEN=7, ARVALID delayed by 0 cycles
# Address phase complete
# Read beat 0: RDATA=0xffffffff, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0xffffffff, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0xffffffff, RLAST=0 (with RREADY backpressure)
# Read beat 3: RDATA=0xffffffff, RLAST=0 (with RREADY backpressure)
# Read beat 4: RDATA=0xffffffff, RLAST=0 (with RREADY backpressure)
# Read beat 5: RDATA=0xffffffff, RLAST=0 (with RREADY backpressure)
# Read beat 6: RDATA=0xffffffff, RLAST=0 (with RREADY backpressure)
# Read beat 7: RDATA=0xffffffff, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 7
# Read transaction complete
# === COMPREHENSIVE COVERAGE REPORT ===
# Burst Coverage:           100.0%
# Memory Address Coverage:  100.0%
# Data Patterns Coverage:   100.0%
# Protocol Coverage:        100.0%
# -------------------------------------
# Overall Coverage:         100.0%
# =====================================
# 
# === DETAILED COVERAGE BINS ===
# Address Ranges Hit:
#   Low (0-341): R=✓, W=✓
#   Mid (342-681): R=✓, W=✓
#   High (682-1023): R=✓, W=✓
# Boundary Cases: No_Cross=✓, Cross=✗
# ===============================
# ======================================================
# Test #9425 Result (READ_OP)
#   Actual   : ARADDR=0x06c0 ARLEN=7 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x06c0 ARLEN=7 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Applying reset for 3 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0800, ARLEN=4, ARVALID delayed by 0 cycles
# Address phase complete
# Read beat 0: RDATA=0x00000000, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0x00000000, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0x00000000, RLAST=0 (with RREADY backpressure)
# Read beat 3: RDATA=0x00000000, RLAST=0 (with RREADY backpressure)
# Read beat 4: RDATA=0x00000000, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 4
# Read transaction complete
# ======================================================
# Test #9426 Result (READ_OP)
#   Actual   : ARADDR=0x0800 ARLEN=4 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0800 ARLEN=4 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Delaying AWVALID by 2 cycles
# AWVALID delay completed
# Setting AWADDR=0x0840, AWLEN=6, AWSIZE=2, AWVALID=0
# AWVALID NOT asserted, skipping AWREADY wait
# Address phase skipped (AWVALID=0), skipping data phase
# Transaction aborted - no data transfer
# ======================================================
# Test #9427 Result (WRITE_OP)
#   Actual   : AWADDR=0x0840 AWLEN=6 AWSIZE=2 BRESP=SLVERR
#   Expected : AWADDR=0x0840 AWLEN=6 AWSIZE=2 BRESP=SLVERR
#   TEST PASS
# ======================================================
# Applying reset for 3 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0880, ARLEN=4, ARVALID delayed by 2 cycles
# Address phase complete
# Read beat 0: RDATA=0x00000000, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0x00000000, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0x00000000, RLAST=0 (with RREADY backpressure)
# Read beat 3: RDATA=0x00000000, RLAST=0 (with RREADY backpressure)
# Read beat 4: RDATA=0x00000000, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 4
# Read transaction complete
# ======================================================
# Test #9428 Result (READ_OP)
#   Actual   : ARADDR=0x0880 ARLEN=4 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0880 ARLEN=4 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Applying reset for 4 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x08c0, ARLEN=6, ARVALID delayed by 2 cycles
# Address phase complete
# Read beat 0: RDATA=0x7339dfe6, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0x11996b23, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0x4b9fe997, RLAST=0 (with RREADY backpressure)
# Read beat 3: RDATA=0x00000000, RLAST=0 (with RREADY backpressure)
# Read beat 4: RDATA=0x00000000, RLAST=0 (with RREADY backpressure)
# Read beat 5: RDATA=0x00000000, RLAST=0 (with RREADY backpressure)
# Read beat 6: RDATA=0x00000000, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 6
# Read transaction complete
# ======================================================
# Test #9429 Result (READ_OP)
#   Actual   : ARADDR=0x08c0 ARLEN=6 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x08c0 ARLEN=6 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Applying reset for 4 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0a00, ARLEN=7, ARVALID delayed by 1 cycles
# Address phase complete
# Read beat 0: RDATA=0x7eda03fd, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0xa717da4e, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0xdccdaeb9, RLAST=0 (with RREADY backpressure)
# Read beat 3: RDATA=0xee95bcdd, RLAST=0 (with RREADY backpressure)
# Read beat 4: RDATA=0x6302afc6, RLAST=0 (with RREADY backpressure)
# Read beat 5: RDATA=0x19b29f33, RLAST=0 (with RREADY backpressure)
# Read beat 6: RDATA=0x43cb1587, RLAST=0 (with RREADY backpressure)
# Read beat 7: RDATA=0xac52d258, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 7
# Read transaction complete
# ======================================================
# Test #9430 Result (READ_OP)
#   Actual   : ARADDR=0x0a00 ARLEN=7 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0a00 ARLEN=7 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Applying reset for 4 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0a40, ARLEN=5, ARVALID delayed by 0 cycles
# Address phase complete
# Read beat 0: RDATA=0x2732614e, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0x5224f7a4, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0x9d72963a, RLAST=0 (with RREADY backpressure)
# Read beat 3: RDATA=0x7b6875f6, RLAST=0 (with RREADY backpressure)
# Read beat 4: RDATA=0x934a9e26, RLAST=0 (with RREADY backpressure)
# Read beat 5: RDATA=0x58d83fb1, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 5
# Read transaction complete
# ======================================================
# Test #9431 Result (READ_OP)
#   Actual   : ARADDR=0x0a40 ARLEN=5 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0a40 ARLEN=5 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Applying reset for 2 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0a80, ARLEN=7, ARVALID delayed by 3 cycles
# Address phase complete
# Read beat 0: RDATA=0x830b9c06, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0x228e4145, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0x2322bd46, RLAST=0 (with RREADY backpressure)
# Read beat 3: RDATA=0xa0463840, RLAST=0 (with RREADY backpressure)
# Read beat 4: RDATA=0x20072940, RLAST=0 (with RREADY backpressure)
# Read beat 5: RDATA=0x294acb52, RLAST=0 (with RREADY backpressure)
# Read beat 6: RDATA=0xa639b04c, RLAST=0 (with RREADY backpressure)
# Read beat 7: RDATA=0xb8b00471, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 7
# Read transaction complete
# ======================================================
# Test #9432 Result (READ_OP)
#   Actual   : ARADDR=0x0a80 ARLEN=7 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0a80 ARLEN=7 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Setting AWADDR=0x0ac0, AWLEN=5, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 2752, AWLEN=5, AWSIZE=2, STOP_ADDR=      2776, 4KB_OFFSET=      2776, Is it supposed to cross 4KB?  NO
# Starting data phase with 6 beats...
# [BEAT 1/6] Starting beat processing
# [BEAT 1/6] Applying WVALID delay of 2 cycles
# [BEAT 1/6] WVALID delay completed
# [BEAT 1/6] Setting WDATA=0xf44272e8, WLAST=0, WVALID=1
# [BEAT 1/6] WVALID asserted, waiting for WREADY...
# [BEAT 1/6] WREADY received, handshake complete
# [BEAT 1/6] Beat completed, advancing to next
# [BEAT 2/6] Starting beat processing
# [BEAT 2/6] No WVALID delay (delay=0)
# [BEAT 2/6] Setting WDATA=0x696445d2, WLAST=0, WVALID=1
# [BEAT 2/6] WVALID asserted, waiting for WREADY...
# [BEAT 2/6] WREADY received, handshake complete
# [BEAT 2/6] Beat completed, advancing to next
# [BEAT 3/6] Starting beat processing
# [BEAT 3/6] Applying WVALID delay of 3 cycles
# [BEAT 3/6] WVALID delay completed
# [BEAT 3/6] Setting WDATA=0xc06d4e80, WLAST=0, WVALID=1
# [BEAT 3/6] WVALID asserted, waiting for WREADY...
# [BEAT 3/6] WREADY received, handshake complete
# [BEAT 3/6] Beat completed, advancing to next
# [BEAT 4/6] Starting beat processing
# [BEAT 4/6] Applying WVALID delay of 3 cycles
# [BEAT 4/6] WVALID delay completed
# [BEAT 4/6] Setting WDATA=0xf1cc68e3, WLAST=0, WVALID=1
# [BEAT 4/6] WVALID asserted, waiting for WREADY...
# [BEAT 4/6] WREADY received, handshake complete
# [BEAT 4/6] Beat completed, advancing to next
# [BEAT 5/6] Starting beat processing
# [BEAT 5/6] Applying WVALID delay of 2 cycles
# [BEAT 5/6] WVALID delay completed
# [BEAT 5/6] Setting WDATA=0x696903d2, WLAST=0, WVALID=1
# [BEAT 5/6] WVALID asserted, waiting for WREADY...
# [BEAT 5/6] WREADY received, handshake complete
# [BEAT 5/6] Beat completed, advancing to next
# [BEAT 6/6] Starting beat processing
# [BEAT 6/6] Applying WVALID delay of 3 cycles
# [BEAT 6/6] WVALID delay completed
# [BEAT 6/6] Setting WDATA=0xbf07687e, WLAST=1, WVALID=1
# [BEAT 6/6] WVALID asserted, waiting for WREADY...
# [BEAT 6/6] WREADY received, handshake complete
# [BEAT 6/6] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9433 Result (WRITE_OP)
#   Actual   : AWADDR=0x0ac0 AWLEN=5 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0ac0 AWLEN=5 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Applying reset for 4 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0c00, ARLEN=6, ARVALID delayed by 1 cycles
# Address phase complete
# Read beat 0: RDATA=0x966dbc2c, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0xc2fee685, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0xfcac78f9, RLAST=0 (with RREADY backpressure)
# Read beat 3: RDATA=0x8e81e41d, RLAST=0 (with RREADY backpressure)
# Read beat 4: RDATA=0x98921c31, RLAST=0 (with RREADY backpressure)
# Read beat 5: RDATA=0xb43bf268, RLAST=0 (with RREADY backpressure)
# Read beat 6: RDATA=0x506a51a0, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 6
# Read transaction complete
# ======================================================
# Test #9434 Result (READ_OP)
#   Actual   : ARADDR=0x0c00 ARLEN=6 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0c00 ARLEN=6 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Applying reset for 4 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0c40, ARLEN=5, ARVALID delayed by 3 cycles
# Address phase complete
# Read beat 0: RDATA=0x01283502, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0x2ba96357, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0xf0e600e1, RLAST=0 (with RREADY backpressure)
# Read beat 3: RDATA=0x9535482a, RLAST=0 (with RREADY backpressure)
# Read beat 4: RDATA=0x774a23ee, RLAST=0 (with RREADY backpressure)
# Read beat 5: RDATA=0x69fdbdd3, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 5
# Read transaction complete
# ======================================================
# Test #9435 Result (READ_OP)
#   Actual   : ARADDR=0x0c40 ARLEN=5 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0c40 ARLEN=5 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Applying reset for 2 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0c80, ARLEN=2, ARVALID delayed by 1 cycles
# Address phase complete
# Read beat 0: RDATA=0x7bcdfbf7, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0x929bb825, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0x06d6b50d, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 2
# Read transaction complete
# ======================================================
# Test #9436 Result (READ_OP)
#   Actual   : ARADDR=0x0c80 ARLEN=2 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0c80 ARLEN=2 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 2 cycles
# AWVALID delay completed
# Setting AWADDR=0x0cc0, AWLEN=7, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 3264, AWLEN=7, AWSIZE=2, STOP_ADDR=      3296, 4KB_OFFSET=      3296, Is it supposed to cross 4KB?  NO
# Starting data phase with 8 beats...
# [BEAT 1/8] Starting beat processing
# [BEAT 1/8] No WVALID delay (delay=0)
# [BEAT 1/8] Setting WDATA=0xbf4c387e, WLAST=0, WVALID=1
# [BEAT 1/8] WVALID asserted, waiting for WREADY...
# [BEAT 1/8] WREADY received, handshake complete
# [BEAT 1/8] Beat completed, advancing to next
# [BEAT 2/8] Starting beat processing
# [BEAT 2/8] Applying WVALID delay of 1 cycles
# [BEAT 2/8] WVALID delay completed
# [BEAT 2/8] Setting WDATA=0x4572178a, WLAST=0, WVALID=1
# [BEAT 2/8] WVALID asserted, waiting for WREADY...
# [BEAT 2/8] WREADY received, handshake complete
# [BEAT 2/8] Beat completed, advancing to next
# [BEAT 3/8] Starting beat processing
# [BEAT 3/8] Applying WVALID delay of 2 cycles
# [BEAT 3/8] WVALID delay completed
# [BEAT 3/8] Setting WDATA=0x7cc569f9, WLAST=0, WVALID=1
# [BEAT 3/8] WVALID asserted, waiting for WREADY...
# [BEAT 3/8] WREADY received, handshake complete
# [BEAT 3/8] Beat completed, advancing to next
# [BEAT 4/8] Starting beat processing
# [BEAT 4/8] No WVALID delay (delay=0)
# [BEAT 4/8] Setting WDATA=0x5653a9ac, WLAST=0, WVALID=1
# [BEAT 4/8] WVALID asserted, waiting for WREADY...
# [BEAT 4/8] WREADY received, handshake complete
# [BEAT 4/8] Beat completed, advancing to next
# [BEAT 5/8] Starting beat processing
# [BEAT 5/8] Applying WVALID delay of 3 cycles
# [BEAT 5/8] WVALID delay completed
# [BEAT 5/8] Setting WDATA=0x06dab50d, WLAST=0, WVALID=1
# [BEAT 5/8] WVALID asserted, waiting for WREADY...
# [BEAT 5/8] WREADY received, handshake complete
# [BEAT 5/8] Beat completed, advancing to next
# [BEAT 6/8] Starting beat processing
# [BEAT 6/8] Applying WVALID delay of 1 cycles
# [BEAT 6/8] WVALID delay completed
# [BEAT 6/8] Setting WDATA=0x4ae40995, WLAST=0, WVALID=1
# [BEAT 6/8] WVALID asserted, waiting for WREADY...
# [BEAT 6/8] WREADY received, handshake complete
# [BEAT 6/8] Beat completed, advancing to next
# [BEAT 7/8] Starting beat processing
# [BEAT 7/8] No WVALID delay (delay=0)
# [BEAT 7/8] Setting WDATA=0x93e4cc27, WLAST=0, WVALID=1
# [BEAT 7/8] WVALID asserted, waiting for WREADY...
# [BEAT 7/8] WREADY received, handshake complete
# [BEAT 7/8] Beat completed, advancing to next
# [BEAT 8/8] Starting beat processing
# [BEAT 8/8] Applying WVALID delay of 3 cycles
# [BEAT 8/8] WVALID delay completed
# [BEAT 8/8] Setting WDATA=0xd89142b1, WLAST=1, WVALID=1
# [BEAT 8/8] WVALID asserted, waiting for WREADY...
# [BEAT 8/8] WREADY received, handshake complete
# [BEAT 8/8] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9437 Result (WRITE_OP)
#   Actual   : AWADDR=0x0cc0 AWLEN=7 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0cc0 AWLEN=7 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Applying reset for 4 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0e00, ARLEN=0, ARVALID delayed by 0 cycles
# Address phase complete
# Read beat 0: RDATA=0xeaa5d6d5, RLAST=0 (with RREADY backpressure)
# ** Error: [ERROR] RLAST not asserted on last beat (beat 0), LEN=0 - RLAST should be 1
#    Time: 15610845 ns  Scope: top.tb.drive_read_transaction File: Testbench.sv Line: 416
# Read transaction complete
# ======================================================
# Test #9438 Result (READ_OP)
#   Actual   : ARADDR=0x0e00 ARLEN=0 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0e00 ARLEN=0 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 3 cycles...
# Randomized reset task completed
# Setting AWADDR=0x0e40, AWLEN=5, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 3648, AWLEN=5, AWSIZE=2, STOP_ADDR=      3672, 4KB_OFFSET=      3672, Is it supposed to cross 4KB?  NO
# Starting data phase with 6 beats...
# [BEAT 1/6] Starting beat processing
# [BEAT 1/6] Applying WVALID delay of 2 cycles
# [BEAT 1/6] WVALID delay completed
# [BEAT 1/6] Setting WDATA=0x0cfccf19, WLAST=0, WVALID=1
# [BEAT 1/6] WVALID asserted, waiting for WREADY...
# [BEAT 1/6] WREADY received, handshake complete
# [BEAT 1/6] Beat completed, advancing to next
# [BEAT 2/6] Starting beat processing
# [BEAT 2/6] No WVALID delay (delay=0)
# [BEAT 2/6] Setting WDATA=0x0a5bdb14, WLAST=0, WVALID=1
# [BEAT 2/6] WVALID asserted, waiting for WREADY...
# [BEAT 2/6] WREADY received, handshake complete
# [BEAT 2/6] Beat completed, advancing to next
# [BEAT 3/6] Starting beat processing
# [BEAT 3/6] No WVALID delay (delay=0)
# [BEAT 3/6] Setting WDATA=0xcdd5209b, WLAST=0, WVALID=1
# [BEAT 3/6] WVALID asserted, waiting for WREADY...
# [BEAT 3/6] WREADY received, handshake complete
# [BEAT 3/6] Beat completed, advancing to next
# [BEAT 4/6] Starting beat processing
# [BEAT 4/6] Applying WVALID delay of 2 cycles
# [BEAT 4/6] WVALID delay completed
# [BEAT 4/6] Setting WDATA=0xc4e23289, WLAST=0, WVALID=1
# [BEAT 4/6] WVALID asserted, waiting for WREADY...
# [BEAT 4/6] WREADY received, handshake complete
# [BEAT 4/6] Beat completed, advancing to next
# [BEAT 5/6] Starting beat processing
# [BEAT 5/6] Applying WVALID delay of 2 cycles
# [BEAT 5/6] WVALID delay completed
# [BEAT 5/6] Setting WDATA=0x55b555ab, WLAST=0, WVALID=1
# [BEAT 5/6] WVALID asserted, waiting for WREADY...
# [BEAT 5/6] WREADY received, handshake complete
# [BEAT 5/6] Beat completed, advancing to next
# [BEAT 6/6] Starting beat processing
# [BEAT 6/6] Applying WVALID delay of 1 cycles
# [BEAT 6/6] WVALID delay completed
# [BEAT 6/6] Setting WDATA=0x2a72e754, WLAST=1, WVALID=1
# [BEAT 6/6] WVALID asserted, waiting for WREADY...
# [BEAT 6/6] WREADY received, handshake complete
# [BEAT 6/6] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9439 Result (WRITE_OP)
#   Actual   : AWADDR=0x0e40 AWLEN=5 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0e40 AWLEN=5 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Setting AWADDR=0x0e80, AWLEN=2, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 3712, AWLEN=2, AWSIZE=2, STOP_ADDR=      3724, 4KB_OFFSET=      3724, Is it supposed to cross 4KB?  NO
# Starting data phase with 3 beats...
# [BEAT 1/3] Starting beat processing
# [BEAT 1/3] No WVALID delay (delay=0)
# [BEAT 1/3] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 1/3] WVALID asserted, waiting for WREADY...
# [BEAT 1/3] WREADY received, handshake complete
# [BEAT 1/3] Beat completed, advancing to next
# [BEAT 2/3] Starting beat processing
# [BEAT 2/3] Applying WVALID delay of 3 cycles
# [BEAT 2/3] WVALID delay completed
# [BEAT 2/3] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 2/3] WVALID asserted, waiting for WREADY...
# [BEAT 2/3] WREADY received, handshake complete
# [BEAT 2/3] Beat completed, advancing to next
# [BEAT 3/3] Starting beat processing
# [BEAT 3/3] Applying WVALID delay of 3 cycles
# [BEAT 3/3] WVALID delay completed
# [BEAT 3/3] Setting WDATA=0x55555555, WLAST=1, WVALID=1
# [BEAT 3/3] WVALID asserted, waiting for WREADY...
# [BEAT 3/3] WREADY received, handshake complete
# [BEAT 3/3] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=0
# BREADY not asserted - response phase incomplete
# BRESP available but not captured due to BREADY=0: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9440 Result (WRITE_OP)
#   Actual   : AWADDR=0x0e80 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0e80 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Applying reset for 4 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0ec0, ARLEN=3, ARVALID delayed by 1 cycles
# Address phase complete
# Read beat 0: RDATA=0xaaaaaaaa, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0xaaaaaaaa, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0xaaaaaaaa, RLAST=0 (with RREADY backpressure)
# Read beat 3: RDATA=0xaaaaaaaa, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 3
# Read transaction complete
# ======================================================
# Test #9441 Result (READ_OP)
#   Actual   : ARADDR=0x0ec0 ARLEN=3 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0ec0 ARLEN=3 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Applying reset for 3 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0f00, ARLEN=6, ARVALID delayed by 3 cycles
# Address phase complete
# Read beat 0: RDATA=0xe0b578c1, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0x9fffb43f, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0xcfd31e9f, RLAST=0 (with RREADY backpressure)
# Read beat 3: RDATA=0xa8690450, RLAST=0 (with RREADY backpressure)
# Read beat 4: RDATA=0x33b78367, RLAST=0 (with RREADY backpressure)
# Read beat 5: RDATA=0x3bf97777, RLAST=0 (with RREADY backpressure)
# Read beat 6: RDATA=0x25f81b4b, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 6
# Read transaction complete
# ======================================================
# Test #9442 Result (READ_OP)
#   Actual   : ARADDR=0x0f00 ARLEN=6 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0f00 ARLEN=6 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 3 cycles...
# Randomized reset task completed
# Delaying AWVALID by 2 cycles
# AWVALID delay completed
# Setting AWADDR=0x0f40, AWLEN=1, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 3904, AWLEN=1, AWSIZE=2, STOP_ADDR=      3912, 4KB_OFFSET=      3912, Is it supposed to cross 4KB?  NO
# Starting data phase with 2 beats...
# [BEAT 1/2] Starting beat processing
# [BEAT 1/2] No WVALID delay (delay=0)
# [BEAT 1/2] Setting WDATA=0xb9110c72, WLAST=0, WVALID=1
# [BEAT 1/2] WVALID asserted, waiting for WREADY...
# [BEAT 1/2] WREADY received, handshake complete
# [BEAT 1/2] Beat completed, advancing to next
# [BEAT 2/2] Starting beat processing
# [BEAT 2/2] Applying WVALID delay of 3 cycles
# [BEAT 2/2] WVALID delay completed
# [BEAT 2/2] Setting WDATA=0x1a3e3334, WLAST=1, WVALID=1
# [BEAT 2/2] WVALID asserted, waiting for WREADY...
# [BEAT 2/2] WREADY received, handshake complete
# [BEAT 2/2] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9443 Result (WRITE_OP)
#   Actual   : AWADDR=0x0f40 AWLEN=1 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0f40 AWLEN=1 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Applying reset for 3 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0f80, ARLEN=2, ARVALID delayed by 0 cycles
# Address phase complete
# Read beat 0: RDATA=0x55555555, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0x55555555, RLAST=0 (with RREADY backpressure)
# Read beat 2: RDATA=0x8cf04019, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 2
# Read transaction complete
# ======================================================
# Test #9444 Result (READ_OP)
#   Actual   : ARADDR=0x0f80 ARLEN=2 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0f80 ARLEN=2 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Applying reset for 2 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0fc0, ARLEN=0, ARVALID delayed by 0 cycles
# Address phase complete
# Read beat 0: RDATA=0xffffffff, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 0
# Read transaction complete
# ======================================================
# Test #9445 Result (READ_OP)
#   Actual   : ARADDR=0x0fc0 ARLEN=0 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0fc0 ARLEN=0 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 3 cycles
# AWVALID delay completed
# Setting AWADDR=0x0fe0, AWLEN=4, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 4064, AWLEN=4, AWSIZE=2, STOP_ADDR=      4084, 4KB_OFFSET=      4084, Is it supposed to cross 4KB?  NO
# Starting data phase with 5 beats...
# [BEAT 1/5] Starting beat processing
# [BEAT 1/5] Applying WVALID delay of 2 cycles
# [BEAT 1/5] WVALID delay completed
# [BEAT 1/5] Setting WDATA=0x5df1d1bb, WLAST=0, WVALID=1
# [BEAT 1/5] WVALID asserted, waiting for WREADY...
# [BEAT 1/5] WREADY received, handshake complete
# [BEAT 1/5] Beat completed, advancing to next
# [BEAT 2/5] Starting beat processing
# [BEAT 2/5] No WVALID delay (delay=0)
# [BEAT 2/5] Setting WDATA=0x517e4da2, WLAST=0, WVALID=1
# [BEAT 2/5] WVALID asserted, waiting for WREADY...
# [BEAT 2/5] WREADY received, handshake complete
# [BEAT 2/5] Beat completed, advancing to next
# [BEAT 3/5] Starting beat processing
# [BEAT 3/5] Applying WVALID delay of 1 cycles
# [BEAT 3/5] WVALID delay completed
# [BEAT 3/5] Setting WDATA=0xf62bfcec, WLAST=0, WVALID=1
# [BEAT 3/5] WVALID asserted, waiting for WREADY...
# [BEAT 3/5] WREADY received, handshake complete
# [BEAT 3/5] Beat completed, advancing to next
# [BEAT 4/5] Starting beat processing
# [BEAT 4/5] Applying WVALID delay of 2 cycles
# [BEAT 4/5] WVALID delay completed
# [BEAT 4/5] Setting WDATA=0x572ec3ae, WLAST=0, WVALID=1
# [BEAT 4/5] WVALID asserted, waiting for WREADY...
# [BEAT 4/5] WREADY received, handshake complete
# [BEAT 4/5] Beat completed, advancing to next
# [BEAT 5/5] Starting beat processing
# [BEAT 5/5] Applying WVALID delay of 1 cycles
# [BEAT 5/5] WVALID delay completed
# [BEAT 5/5] Setting WDATA=0xf11690e2, WLAST=1, WVALID=1
# [BEAT 5/5] WVALID asserted, waiting for WREADY...
# [BEAT 5/5] WREADY received, handshake complete
# [BEAT 5/5] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9446 Result (WRITE_OP)
#   Actual   : AWADDR=0x0fe0 AWLEN=4 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0fe0 AWLEN=4 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 3 cycles...
# Randomized reset task completed
# Setting AWADDR=0x0ff0, AWLEN=2, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 4080, AWLEN=2, AWSIZE=2, STOP_ADDR=      4092, 4KB_OFFSET=      4092, Is it supposed to cross 4KB?  NO
# Starting data phase with 3 beats...
# [BEAT 1/3] Starting beat processing
# [BEAT 1/3] Applying WVALID delay of 1 cycles
# [BEAT 1/3] WVALID delay completed
# [BEAT 1/3] Setting WDATA=0xc2aae485, WLAST=0, WVALID=1
# [BEAT 1/3] WVALID asserted, waiting for WREADY...
# [BEAT 1/3] WREADY received, handshake complete
# [BEAT 1/3] Beat completed, advancing to next
# [BEAT 2/3] Starting beat processing
# [BEAT 2/3] Applying WVALID delay of 2 cycles
# [BEAT 2/3] WVALID delay completed
# [BEAT 2/3] Setting WDATA=0x733e1de6, WLAST=0, WVALID=1
# [BEAT 2/3] WVALID asserted, waiting for WREADY...
# [BEAT 2/3] WREADY received, handshake complete
# [BEAT 2/3] Beat completed, advancing to next
# [BEAT 3/3] Starting beat processing
# [BEAT 3/3] Applying WVALID delay of 2 cycles
# [BEAT 3/3] WVALID delay completed
# [BEAT 3/3] Setting WDATA=0x8b4b1a16, WLAST=1, WVALID=1
# [BEAT 3/3] WVALID asserted, waiting for WREADY...
# [BEAT 3/3] WREADY received, handshake complete
# [BEAT 3/3] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9447 Result (WRITE_OP)
#   Actual   : AWADDR=0x0ff0 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0ff0 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Applying reset for 4 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0ff8, ARLEN=1, ARVALID delayed by 0 cycles
# Address phase complete
# Read beat 0: RDATA=0x8b4b1a16, RLAST=0 (with RREADY backpressure)
# Read beat 1: RDATA=0xecf870d9, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 1
# Read transaction complete
# ======================================================
# Test #9448 Result (READ_OP)
#   Actual   : ARADDR=0x0ff8 ARLEN=1 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0ff8 ARLEN=1 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Applying reset for 2 cycles...
# Starting READ transaction...
# Address phase: ARADDR=0x0ffc, ARLEN=0, ARVALID delayed by 0 cycles
# Address phase complete
# Read beat 0: RDATA=0xecf870d9, RLAST=1 (with RREADY backpressure)
# [INFO] RLAST correctly asserted on final beat 0
# Read transaction complete
# ======================================================
# Test #9449 Result (READ_OP)
#   Actual   : ARADDR=0x0ffc ARLEN=0 ARSIZE=2 RRESP=OKAY
#   Expected : ARADDR=0x0ffc ARLEN=0 ARSIZE=2 RRESP=OKAY
#   All read data and responses match expected values
#   TEST PASS
# ======================================================
# Testing comprehensive data pattern coverage...
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Setting AWADDR=0x0488, AWLEN=0, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 1160, AWLEN=0, AWSIZE=2, STOP_ADDR=      1164, 4KB_OFFSET=      1164, Is it supposed to cross 4KB?  NO
# Starting data phase with 1 beats...
# [BEAT 1/1] Starting beat processing
# [BEAT 1/1] No WVALID delay (delay=0)
# [BEAT 1/1] Setting WDATA=0x00000000, WLAST=1, WVALID=1
# [BEAT 1/1] WVALID asserted, waiting for WREADY...
# [BEAT 1/1] WREADY received, handshake complete
# [BEAT 1/1] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# === COMPREHENSIVE COVERAGE REPORT ===
# Burst Coverage:           100.0%
# Memory Address Coverage:  100.0%
# Data Patterns Coverage:   100.0%
# Protocol Coverage:        100.0%
# -------------------------------------
# Overall Coverage:         100.0%
# =====================================
# 
# === DETAILED COVERAGE BINS ===
# Address Ranges Hit:
#   Low (0-341): R=✓, W=✓
#   Mid (342-681): R=✓, W=✓
#   High (682-1023): R=✓, W=✓
# Boundary Cases: No_Cross=✓, Cross=✗
# ===============================
# ======================================================
# Test #9450 Result (WRITE_OP)
#   Actual   : AWADDR=0x0488 AWLEN=0 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0488 AWLEN=0 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 3 cycles...
# Randomized reset task completed
# Delaying AWVALID by 3 cycles
# AWVALID delay completed
# Setting AWADDR=0x02d0, AWLEN=1, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR=  720, AWLEN=1, AWSIZE=2, STOP_ADDR=       728, 4KB_OFFSET=       728, Is it supposed to cross 4KB?  NO
# Starting data phase with 2 beats...
# [BEAT 1/2] Starting beat processing
# [BEAT 1/2] Applying WVALID delay of 1 cycles
# [BEAT 1/2] WVALID delay completed
# [BEAT 1/2] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 1/2] WVALID asserted, waiting for WREADY...
# [BEAT 1/2] WREADY received, handshake complete
# [BEAT 1/2] Beat completed, advancing to next
# [BEAT 2/2] Starting beat processing
# [BEAT 2/2] Applying WVALID delay of 3 cycles
# [BEAT 2/2] WVALID delay completed
# [BEAT 2/2] Setting WDATA=0x00000000, WLAST=1, WVALID=1
# [BEAT 2/2] WVALID asserted, waiting for WREADY...
# [BEAT 2/2] WREADY received, handshake complete
# [BEAT 2/2] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9451 Result (WRITE_OP)
#   Actual   : AWADDR=0x02d0 AWLEN=1 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x02d0 AWLEN=1 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Setting AWADDR=0x0b90, AWLEN=2, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 2960, AWLEN=2, AWSIZE=2, STOP_ADDR=      2972, 4KB_OFFSET=      2972, Is it supposed to cross 4KB?  NO
# Starting data phase with 3 beats...
# [BEAT 1/3] Starting beat processing
# [BEAT 1/3] No WVALID delay (delay=0)
# [BEAT 1/3] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 1/3] WVALID asserted, waiting for WREADY...
# [BEAT 1/3] WREADY received, handshake complete
# [BEAT 1/3] Beat completed, advancing to next
# [BEAT 2/3] Starting beat processing
# [BEAT 2/3] No WVALID delay (delay=0)
# [BEAT 2/3] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 2/3] WVALID asserted, waiting for WREADY...
# [BEAT 2/3] WREADY received, handshake complete
# [BEAT 2/3] Beat completed, advancing to next
# [BEAT 3/3] Starting beat processing
# [BEAT 3/3] No WVALID delay (delay=0)
# [BEAT 3/3] Setting WDATA=0x00000000, WLAST=1, WVALID=1
# [BEAT 3/3] WVALID asserted, waiting for WREADY...
# [BEAT 3/3] WREADY received, handshake complete
# [BEAT 3/3] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9452 Result (WRITE_OP)
#   Actual   : AWADDR=0x0b90 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0b90 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 3 cycles...
# Randomized reset task completed
# Delaying AWVALID by 3 cycles
# AWVALID delay completed
# Setting AWADDR=0x0be4, AWLEN=3, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 3044, AWLEN=3, AWSIZE=2, STOP_ADDR=      3060, 4KB_OFFSET=      3060, Is it supposed to cross 4KB?  NO
# Starting data phase with 4 beats...
# [BEAT 1/4] Starting beat processing
# [BEAT 1/4] Applying WVALID delay of 2 cycles
# [BEAT 1/4] WVALID delay completed
# [BEAT 1/4] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 1/4] WVALID asserted, waiting for WREADY...
# [BEAT 1/4] WREADY received, handshake complete
# [BEAT 1/4] Beat completed, advancing to next
# [BEAT 2/4] Starting beat processing
# [BEAT 2/4] Applying WVALID delay of 1 cycles
# [BEAT 2/4] WVALID delay completed
# [BEAT 2/4] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 2/4] WVALID asserted, waiting for WREADY...
# [BEAT 2/4] WREADY received, handshake complete
# [BEAT 2/4] Beat completed, advancing to next
# [BEAT 3/4] Starting beat processing
# [BEAT 3/4] No WVALID delay (delay=0)
# [BEAT 3/4] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 3/4] WVALID asserted, waiting for WREADY...
# [BEAT 3/4] WREADY received, handshake complete
# [BEAT 3/4] Beat completed, advancing to next
# [BEAT 4/4] Starting beat processing
# [BEAT 4/4] Applying WVALID delay of 3 cycles
# [BEAT 4/4] WVALID delay completed
# [BEAT 4/4] Setting WDATA=0x00000000, WLAST=1, WVALID=1
# [BEAT 4/4] WVALID asserted, waiting for WREADY...
# [BEAT 4/4] WREADY received, handshake complete
# [BEAT 4/4] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9453 Result (WRITE_OP)
#   Actual   : AWADDR=0x0be4 AWLEN=3 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0be4 AWLEN=3 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 3 cycles
# AWVALID delay completed
# Setting AWADDR=0x0bc8, AWLEN=4, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 3016, AWLEN=4, AWSIZE=2, STOP_ADDR=      3036, 4KB_OFFSET=      3036, Is it supposed to cross 4KB?  NO
# Starting data phase with 5 beats...
# [BEAT 1/5] Starting beat processing
# [BEAT 1/5] Applying WVALID delay of 3 cycles
# [BEAT 1/5] WVALID delay completed
# [BEAT 1/5] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 1/5] WVALID asserted, waiting for WREADY...
# [BEAT 1/5] WREADY received, handshake complete
# [BEAT 1/5] Beat completed, advancing to next
# [BEAT 2/5] Starting beat processing
# [BEAT 2/5] No WVALID delay (delay=0)
# [BEAT 2/5] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 2/5] WVALID asserted, waiting for WREADY...
# [BEAT 2/5] WREADY received, handshake complete
# [BEAT 2/5] Beat completed, advancing to next
# [BEAT 3/5] Starting beat processing
# [BEAT 3/5] Applying WVALID delay of 3 cycles
# [BEAT 3/5] WVALID delay completed
# [BEAT 3/5] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 3/5] WVALID asserted, waiting for WREADY...
# [BEAT 3/5] WREADY received, handshake complete
# [BEAT 3/5] Beat completed, advancing to next
# [BEAT 4/5] Starting beat processing
# [BEAT 4/5] Applying WVALID delay of 1 cycles
# [BEAT 4/5] WVALID delay completed
# [BEAT 4/5] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 4/5] WVALID asserted, waiting for WREADY...
# [BEAT 4/5] WREADY received, handshake complete
# [BEAT 4/5] Beat completed, advancing to next
# [BEAT 5/5] Starting beat processing
# [BEAT 5/5] Applying WVALID delay of 1 cycles
# [BEAT 5/5] WVALID delay completed
# [BEAT 5/5] Setting WDATA=0x00000000, WLAST=1, WVALID=1
# [BEAT 5/5] WVALID asserted, waiting for WREADY...
# [BEAT 5/5] WREADY received, handshake complete
# [BEAT 5/5] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9454 Result (WRITE_OP)
#   Actual   : AWADDR=0x0bc8 AWLEN=4 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0bc8 AWLEN=4 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 2 cycles
# AWVALID delay completed
# Setting AWADDR=0x08c0, AWLEN=5, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 2240, AWLEN=5, AWSIZE=2, STOP_ADDR=      2264, 4KB_OFFSET=      2264, Is it supposed to cross 4KB?  NO
# Starting data phase with 6 beats...
# [BEAT 1/6] Starting beat processing
# [BEAT 1/6] Applying WVALID delay of 2 cycles
# [BEAT 1/6] WVALID delay completed
# [BEAT 1/6] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 1/6] WVALID asserted, waiting for WREADY...
# [BEAT 1/6] WREADY received, handshake complete
# [BEAT 1/6] Beat completed, advancing to next
# [BEAT 2/6] Starting beat processing
# [BEAT 2/6] Applying WVALID delay of 1 cycles
# [BEAT 2/6] WVALID delay completed
# [BEAT 2/6] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 2/6] WVALID asserted, waiting for WREADY...
# [BEAT 2/6] WREADY received, handshake complete
# [BEAT 2/6] Beat completed, advancing to next
# [BEAT 3/6] Starting beat processing
# [BEAT 3/6] Applying WVALID delay of 1 cycles
# [BEAT 3/6] WVALID delay completed
# [BEAT 3/6] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 3/6] WVALID asserted, waiting for WREADY...
# [BEAT 3/6] WREADY received, handshake complete
# [BEAT 3/6] Beat completed, advancing to next
# [BEAT 4/6] Starting beat processing
# [BEAT 4/6] Applying WVALID delay of 1 cycles
# [BEAT 4/6] WVALID delay completed
# [BEAT 4/6] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 4/6] WVALID asserted, waiting for WREADY...
# [BEAT 4/6] WREADY received, handshake complete
# [BEAT 4/6] Beat completed, advancing to next
# [BEAT 5/6] Starting beat processing
# [BEAT 5/6] Applying WVALID delay of 2 cycles
# [BEAT 5/6] WVALID delay completed
# [BEAT 5/6] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 5/6] WVALID asserted, waiting for WREADY...
# [BEAT 5/6] WREADY received, handshake complete
# [BEAT 5/6] Beat completed, advancing to next
# [BEAT 6/6] Starting beat processing
# [BEAT 6/6] Applying WVALID delay of 1 cycles
# [BEAT 6/6] WVALID delay completed
# [BEAT 6/6] Setting WDATA=0x00000000, WLAST=1, WVALID=1
# [BEAT 6/6] WVALID asserted, waiting for WREADY...
# [BEAT 6/6] WREADY received, handshake complete
# [BEAT 6/6] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9455 Result (WRITE_OP)
#   Actual   : AWADDR=0x08c0 AWLEN=5 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x08c0 AWLEN=5 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Setting AWADDR=0x02b0, AWLEN=6, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR=  688, AWLEN=6, AWSIZE=2, STOP_ADDR=       716, 4KB_OFFSET=       716, Is it supposed to cross 4KB?  NO
# Starting data phase with 7 beats...
# [BEAT 1/7] Starting beat processing
# [BEAT 1/7] Applying WVALID delay of 3 cycles
# [BEAT 1/7] WVALID delay completed
# [BEAT 1/7] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 1/7] WVALID asserted, waiting for WREADY...
# [BEAT 1/7] WREADY received, handshake complete
# [BEAT 1/7] Beat completed, advancing to next
# [BEAT 2/7] Starting beat processing
# [BEAT 2/7] Applying WVALID delay of 2 cycles
# [BEAT 2/7] WVALID delay completed
# [BEAT 2/7] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 2/7] WVALID asserted, waiting for WREADY...
# [BEAT 2/7] WREADY received, handshake complete
# [BEAT 2/7] Beat completed, advancing to next
# [BEAT 3/7] Starting beat processing
# [BEAT 3/7] Applying WVALID delay of 1 cycles
# [BEAT 3/7] WVALID delay completed
# [BEAT 3/7] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 3/7] WVALID asserted, waiting for WREADY...
# [BEAT 3/7] WREADY received, handshake complete
# [BEAT 3/7] Beat completed, advancing to next
# [BEAT 4/7] Starting beat processing
# [BEAT 4/7] Applying WVALID delay of 3 cycles
# [BEAT 4/7] WVALID delay completed
# [BEAT 4/7] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 4/7] WVALID asserted, waiting for WREADY...
# [BEAT 4/7] WREADY received, handshake complete
# [BEAT 4/7] Beat completed, advancing to next
# [BEAT 5/7] Starting beat processing
# [BEAT 5/7] No WVALID delay (delay=0)
# [BEAT 5/7] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 5/7] WVALID asserted, waiting for WREADY...
# [BEAT 5/7] WREADY received, handshake complete
# [BEAT 5/7] Beat completed, advancing to next
# [BEAT 6/7] Starting beat processing
# [BEAT 6/7] Applying WVALID delay of 2 cycles
# [BEAT 6/7] WVALID delay completed
# [BEAT 6/7] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 6/7] WVALID asserted, waiting for WREADY...
# [BEAT 6/7] WREADY received, handshake complete
# [BEAT 6/7] Beat completed, advancing to next
# [BEAT 7/7] Starting beat processing
# [BEAT 7/7] Applying WVALID delay of 3 cycles
# [BEAT 7/7] WVALID delay completed
# [BEAT 7/7] Setting WDATA=0x00000000, WLAST=1, WVALID=1
# [BEAT 7/7] WVALID asserted, waiting for WREADY...
# [BEAT 7/7] WREADY received, handshake complete
# [BEAT 7/7] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9456 Result (WRITE_OP)
#   Actual   : AWADDR=0x02b0 AWLEN=6 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x02b0 AWLEN=6 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Delaying AWVALID by 1 cycles
# AWVALID delay completed
# Setting AWADDR=0x03fc, AWLEN=7, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 1020, AWLEN=7, AWSIZE=2, STOP_ADDR=      1052, 4KB_OFFSET=      1052, Is it supposed to cross 4KB?  NO
# Starting data phase with 8 beats...
# [BEAT 1/8] Starting beat processing
# [BEAT 1/8] Applying WVALID delay of 3 cycles
# [BEAT 1/8] WVALID delay completed
# [BEAT 1/8] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 1/8] WVALID asserted, waiting for WREADY...
# [BEAT 1/8] WREADY received, handshake complete
# [BEAT 1/8] Beat completed, advancing to next
# [BEAT 2/8] Starting beat processing
# [BEAT 2/8] Applying WVALID delay of 1 cycles
# [BEAT 2/8] WVALID delay completed
# [BEAT 2/8] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 2/8] WVALID asserted, waiting for WREADY...
# [BEAT 2/8] WREADY received, handshake complete
# [BEAT 2/8] Beat completed, advancing to next
# [BEAT 3/8] Starting beat processing
# [BEAT 3/8] No WVALID delay (delay=0)
# [BEAT 3/8] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 3/8] WVALID asserted, waiting for WREADY...
# [BEAT 3/8] WREADY received, handshake complete
# [BEAT 3/8] Beat completed, advancing to next
# [BEAT 4/8] Starting beat processing
# [BEAT 4/8] Applying WVALID delay of 1 cycles
# [BEAT 4/8] WVALID delay completed
# [BEAT 4/8] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 4/8] WVALID asserted, waiting for WREADY...
# [BEAT 4/8] WREADY received, handshake complete
# [BEAT 4/8] Beat completed, advancing to next
# [BEAT 5/8] Starting beat processing
# [BEAT 5/8] Applying WVALID delay of 1 cycles
# [BEAT 5/8] WVALID delay completed
# [BEAT 5/8] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 5/8] WVALID asserted, waiting for WREADY...
# [BEAT 5/8] WREADY received, handshake complete
# [BEAT 5/8] Beat completed, advancing to next
# [BEAT 6/8] Starting beat processing
# [BEAT 6/8] Applying WVALID delay of 3 cycles
# [BEAT 6/8] WVALID delay completed
# [BEAT 6/8] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 6/8] WVALID asserted, waiting for WREADY...
# [BEAT 6/8] WREADY received, handshake complete
# [BEAT 6/8] Beat completed, advancing to next
# [BEAT 7/8] Starting beat processing
# [BEAT 7/8] Applying WVALID delay of 3 cycles
# [BEAT 7/8] WVALID delay completed
# [BEAT 7/8] Setting WDATA=0x00000000, WLAST=0, WVALID=1
# [BEAT 7/8] WVALID asserted, waiting for WREADY...
# [BEAT 7/8] WREADY received, handshake complete
# [BEAT 7/8] Beat completed, advancing to next
# [BEAT 8/8] Starting beat processing
# [BEAT 8/8] No WVALID delay (delay=0)
# [BEAT 8/8] Setting WDATA=0x00000000, WLAST=1, WVALID=1
# [BEAT 8/8] WVALID asserted, waiting for WREADY...
# [BEAT 8/8] WREADY received, handshake complete
# [BEAT 8/8] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9457 Result (WRITE_OP)
#   Actual   : AWADDR=0x03fc AWLEN=7 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x03fc AWLEN=7 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Delaying AWVALID by 3 cycles
# AWVALID delay completed
# Setting AWADDR=0x0a44, AWLEN=0, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 2628, AWLEN=0, AWSIZE=2, STOP_ADDR=      2632, 4KB_OFFSET=      2632, Is it supposed to cross 4KB?  NO
# Starting data phase with 1 beats...
# [BEAT 1/1] Starting beat processing
# [BEAT 1/1] No WVALID delay (delay=0)
# [BEAT 1/1] Setting WDATA=0xffffffff, WLAST=1, WVALID=1
# [BEAT 1/1] WVALID asserted, waiting for WREADY...
# [BEAT 1/1] WREADY received, handshake complete
# [BEAT 1/1] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9458 Result (WRITE_OP)
#   Actual   : AWADDR=0x0a44 AWLEN=0 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0a44 AWLEN=0 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 3 cycles...
# Randomized reset task completed
# Delaying AWVALID by 2 cycles
# AWVALID delay completed
# Setting AWADDR=0x08f8, AWLEN=1, AWSIZE=2, AWVALID=0
# AWVALID NOT asserted, skipping AWREADY wait
# Address phase skipped (AWVALID=0), skipping data phase
# Transaction aborted - no data transfer
# ======================================================
# Test #9459 Result (WRITE_OP)
#   Actual   : AWADDR=0x08f8 AWLEN=1 AWSIZE=2 BRESP=SLVERR
#   Expected : AWADDR=0x08f8 AWLEN=1 AWSIZE=2 BRESP=SLVERR
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Delaying AWVALID by 3 cycles
# AWVALID delay completed
# Setting AWADDR=0x0318, AWLEN=2, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR=  792, AWLEN=2, AWSIZE=2, STOP_ADDR=       804, 4KB_OFFSET=       804, Is it supposed to cross 4KB?  NO
# Starting data phase with 3 beats...
# [BEAT 1/3] Starting beat processing
# [BEAT 1/3] Applying WVALID delay of 2 cycles
# [BEAT 1/3] WVALID delay completed
# [BEAT 1/3] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 1/3] WVALID asserted, waiting for WREADY...
# [BEAT 1/3] WREADY received, handshake complete
# [BEAT 1/3] Beat completed, advancing to next
# [BEAT 2/3] Starting beat processing
# [BEAT 2/3] Applying WVALID delay of 2 cycles
# [BEAT 2/3] WVALID delay completed
# [BEAT 2/3] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 2/3] WVALID asserted, waiting for WREADY...
# [BEAT 2/3] WREADY received, handshake complete
# [BEAT 2/3] Beat completed, advancing to next
# [BEAT 3/3] Starting beat processing
# [BEAT 3/3] Applying WVALID delay of 3 cycles
# [BEAT 3/3] WVALID delay completed
# [BEAT 3/3] Setting WDATA=0xffffffff, WLAST=1, WVALID=1
# [BEAT 3/3] WVALID asserted, waiting for WREADY...
# [BEAT 3/3] WREADY received, handshake complete
# [BEAT 3/3] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9460 Result (WRITE_OP)
#   Actual   : AWADDR=0x0318 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0318 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 3 cycles...
# Randomized reset task completed
# Delaying AWVALID by 2 cycles
# AWVALID delay completed
# Setting AWADDR=0x0db0, AWLEN=3, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 3504, AWLEN=3, AWSIZE=2, STOP_ADDR=      3520, 4KB_OFFSET=      3520, Is it supposed to cross 4KB?  NO
# Starting data phase with 4 beats...
# [BEAT 1/4] Starting beat processing
# [BEAT 1/4] No WVALID delay (delay=0)
# [BEAT 1/4] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 1/4] WVALID asserted, waiting for WREADY...
# [BEAT 1/4] WREADY received, handshake complete
# [BEAT 1/4] Beat completed, advancing to next
# [BEAT 2/4] Starting beat processing
# [BEAT 2/4] No WVALID delay (delay=0)
# [BEAT 2/4] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 2/4] WVALID asserted, waiting for WREADY...
# [BEAT 2/4] WREADY received, handshake complete
# [BEAT 2/4] Beat completed, advancing to next
# [BEAT 3/4] Starting beat processing
# [BEAT 3/4] Applying WVALID delay of 2 cycles
# [BEAT 3/4] WVALID delay completed
# [BEAT 3/4] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 3/4] WVALID asserted, waiting for WREADY...
# [BEAT 3/4] WREADY received, handshake complete
# [BEAT 3/4] Beat completed, advancing to next
# [BEAT 4/4] Starting beat processing
# [BEAT 4/4] Applying WVALID delay of 3 cycles
# [BEAT 4/4] WVALID delay completed
# [BEAT 4/4] Setting WDATA=0xffffffff, WLAST=1, WVALID=1
# [BEAT 4/4] WVALID asserted, waiting for WREADY...
# [BEAT 4/4] WREADY received, handshake complete
# [BEAT 4/4] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9461 Result (WRITE_OP)
#   Actual   : AWADDR=0x0db0 AWLEN=3 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0db0 AWLEN=3 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 3 cycles...
# Randomized reset task completed
# Delaying AWVALID by 3 cycles
# AWVALID delay completed
# Setting AWADDR=0x044c, AWLEN=4, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 1100, AWLEN=4, AWSIZE=2, STOP_ADDR=      1120, 4KB_OFFSET=      1120, Is it supposed to cross 4KB?  NO
# Starting data phase with 5 beats...
# [BEAT 1/5] Starting beat processing
# [BEAT 1/5] Applying WVALID delay of 3 cycles
# [BEAT 1/5] WVALID delay completed
# [BEAT 1/5] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 1/5] WVALID asserted, waiting for WREADY...
# [BEAT 1/5] WREADY received, handshake complete
# [BEAT 1/5] Beat completed, advancing to next
# [BEAT 2/5] Starting beat processing
# [BEAT 2/5] Applying WVALID delay of 2 cycles
# [BEAT 2/5] WVALID delay completed
# [BEAT 2/5] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 2/5] WVALID asserted, waiting for WREADY...
# [BEAT 2/5] WREADY received, handshake complete
# [BEAT 2/5] Beat completed, advancing to next
# [BEAT 3/5] Starting beat processing
# [BEAT 3/5] No WVALID delay (delay=0)
# [BEAT 3/5] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 3/5] WVALID asserted, waiting for WREADY...
# [BEAT 3/5] WREADY received, handshake complete
# [BEAT 3/5] Beat completed, advancing to next
# [BEAT 4/5] Starting beat processing
# [BEAT 4/5] Applying WVALID delay of 3 cycles
# [BEAT 4/5] WVALID delay completed
# [BEAT 4/5] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 4/5] WVALID asserted, waiting for WREADY...
# [BEAT 4/5] WREADY received, handshake complete
# [BEAT 4/5] Beat completed, advancing to next
# [BEAT 5/5] Starting beat processing
# [BEAT 5/5] No WVALID delay (delay=0)
# [BEAT 5/5] Setting WDATA=0xffffffff, WLAST=1, WVALID=1
# [BEAT 5/5] WVALID asserted, waiting for WREADY...
# [BEAT 5/5] WREADY received, handshake complete
# [BEAT 5/5] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9462 Result (WRITE_OP)
#   Actual   : AWADDR=0x044c AWLEN=4 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x044c AWLEN=4 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Setting AWADDR=0x0054, AWLEN=5, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR=   84, AWLEN=5, AWSIZE=2, STOP_ADDR=       108, 4KB_OFFSET=       108, Is it supposed to cross 4KB?  NO
# Starting data phase with 6 beats...
# [BEAT 1/6] Starting beat processing
# [BEAT 1/6] Applying WVALID delay of 3 cycles
# [BEAT 1/6] WVALID delay completed
# [BEAT 1/6] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 1/6] WVALID asserted, waiting for WREADY...
# [BEAT 1/6] WREADY received, handshake complete
# [BEAT 1/6] Beat completed, advancing to next
# [BEAT 2/6] Starting beat processing
# [BEAT 2/6] Applying WVALID delay of 3 cycles
# [BEAT 2/6] WVALID delay completed
# [BEAT 2/6] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 2/6] WVALID asserted, waiting for WREADY...
# [BEAT 2/6] WREADY received, handshake complete
# [BEAT 2/6] Beat completed, advancing to next
# [BEAT 3/6] Starting beat processing
# [BEAT 3/6] No WVALID delay (delay=0)
# [BEAT 3/6] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 3/6] WVALID asserted, waiting for WREADY...
# [BEAT 3/6] WREADY received, handshake complete
# [BEAT 3/6] Beat completed, advancing to next
# [BEAT 4/6] Starting beat processing
# [BEAT 4/6] No WVALID delay (delay=0)
# [BEAT 4/6] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 4/6] WVALID asserted, waiting for WREADY...
# [BEAT 4/6] WREADY received, handshake complete
# [BEAT 4/6] Beat completed, advancing to next
# [BEAT 5/6] Starting beat processing
# [BEAT 5/6] Applying WVALID delay of 1 cycles
# [BEAT 5/6] WVALID delay completed
# [BEAT 5/6] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 5/6] WVALID asserted, waiting for WREADY...
# [BEAT 5/6] WREADY received, handshake complete
# [BEAT 5/6] Beat completed, advancing to next
# [BEAT 6/6] Starting beat processing
# [BEAT 6/6] Applying WVALID delay of 3 cycles
# [BEAT 6/6] WVALID delay completed
# [BEAT 6/6] Setting WDATA=0xffffffff, WLAST=1, WVALID=1
# [BEAT 6/6] WVALID asserted, waiting for WREADY...
# [BEAT 6/6] WREADY received, handshake complete
# [BEAT 6/6] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9463 Result (WRITE_OP)
#   Actual   : AWADDR=0x0054 AWLEN=5 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0054 AWLEN=5 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Delaying AWVALID by 1 cycles
# AWVALID delay completed
# Setting AWADDR=0x07e0, AWLEN=6, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 2016, AWLEN=6, AWSIZE=2, STOP_ADDR=      2044, 4KB_OFFSET=      2044, Is it supposed to cross 4KB?  NO
# Starting data phase with 7 beats...
# [BEAT 1/7] Starting beat processing
# [BEAT 1/7] No WVALID delay (delay=0)
# [BEAT 1/7] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 1/7] WVALID asserted, waiting for WREADY...
# [BEAT 1/7] WREADY received, handshake complete
# [BEAT 1/7] Beat completed, advancing to next
# [BEAT 2/7] Starting beat processing
# [BEAT 2/7] Applying WVALID delay of 3 cycles
# [BEAT 2/7] WVALID delay completed
# [BEAT 2/7] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 2/7] WVALID asserted, waiting for WREADY...
# [BEAT 2/7] WREADY received, handshake complete
# [BEAT 2/7] Beat completed, advancing to next
# [BEAT 3/7] Starting beat processing
# [BEAT 3/7] Applying WVALID delay of 1 cycles
# [BEAT 3/7] WVALID delay completed
# [BEAT 3/7] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 3/7] WVALID asserted, waiting for WREADY...
# [BEAT 3/7] WREADY received, handshake complete
# [BEAT 3/7] Beat completed, advancing to next
# [BEAT 4/7] Starting beat processing
# [BEAT 4/7] No WVALID delay (delay=0)
# [BEAT 4/7] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 4/7] WVALID asserted, waiting for WREADY...
# [BEAT 4/7] WREADY received, handshake complete
# [BEAT 4/7] Beat completed, advancing to next
# [BEAT 5/7] Starting beat processing
# [BEAT 5/7] No WVALID delay (delay=0)
# [BEAT 5/7] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 5/7] WVALID asserted, waiting for WREADY...
# [BEAT 5/7] WREADY received, handshake complete
# [BEAT 5/7] Beat completed, advancing to next
# [BEAT 6/7] Starting beat processing
# [BEAT 6/7] Applying WVALID delay of 1 cycles
# [BEAT 6/7] WVALID delay completed
# [BEAT 6/7] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 6/7] WVALID asserted, waiting for WREADY...
# [BEAT 6/7] WREADY received, handshake complete
# [BEAT 6/7] Beat completed, advancing to next
# [BEAT 7/7] Starting beat processing
# [BEAT 7/7] Applying WVALID delay of 3 cycles
# [BEAT 7/7] WVALID delay completed
# [BEAT 7/7] Setting WDATA=0xffffffff, WLAST=1, WVALID=1
# [BEAT 7/7] WVALID asserted, waiting for WREADY...
# [BEAT 7/7] WREADY received, handshake complete
# [BEAT 7/7] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9464 Result (WRITE_OP)
#   Actual   : AWADDR=0x07e0 AWLEN=6 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x07e0 AWLEN=6 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Setting AWADDR=0x00b0, AWLEN=7, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR=  176, AWLEN=7, AWSIZE=2, STOP_ADDR=       208, 4KB_OFFSET=       208, Is it supposed to cross 4KB?  NO
# Starting data phase with 8 beats...
# [BEAT 1/8] Starting beat processing
# [BEAT 1/8] Applying WVALID delay of 1 cycles
# [BEAT 1/8] WVALID delay completed
# [BEAT 1/8] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 1/8] WVALID asserted, waiting for WREADY...
# [BEAT 1/8] WREADY received, handshake complete
# [BEAT 1/8] Beat completed, advancing to next
# [BEAT 2/8] Starting beat processing
# [BEAT 2/8] Applying WVALID delay of 2 cycles
# [BEAT 2/8] WVALID delay completed
# [BEAT 2/8] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 2/8] WVALID asserted, waiting for WREADY...
# [BEAT 2/8] WREADY received, handshake complete
# [BEAT 2/8] Beat completed, advancing to next
# [BEAT 3/8] Starting beat processing
# [BEAT 3/8] No WVALID delay (delay=0)
# [BEAT 3/8] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 3/8] WVALID asserted, waiting for WREADY...
# [BEAT 3/8] WREADY received, handshake complete
# [BEAT 3/8] Beat completed, advancing to next
# [BEAT 4/8] Starting beat processing
# [BEAT 4/8] No WVALID delay (delay=0)
# [BEAT 4/8] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 4/8] WVALID asserted, waiting for WREADY...
# [BEAT 4/8] WREADY received, handshake complete
# [BEAT 4/8] Beat completed, advancing to next
# [BEAT 5/8] Starting beat processing
# [BEAT 5/8] Applying WVALID delay of 2 cycles
# [BEAT 5/8] WVALID delay completed
# [BEAT 5/8] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 5/8] WVALID asserted, waiting for WREADY...
# [BEAT 5/8] WREADY received, handshake complete
# [BEAT 5/8] Beat completed, advancing to next
# [BEAT 6/8] Starting beat processing
# [BEAT 6/8] Applying WVALID delay of 1 cycles
# [BEAT 6/8] WVALID delay completed
# [BEAT 6/8] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 6/8] WVALID asserted, waiting for WREADY...
# [BEAT 6/8] WREADY received, handshake complete
# [BEAT 6/8] Beat completed, advancing to next
# [BEAT 7/8] Starting beat processing
# [BEAT 7/8] Applying WVALID delay of 2 cycles
# [BEAT 7/8] WVALID delay completed
# [BEAT 7/8] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 7/8] WVALID asserted, waiting for WREADY...
# [BEAT 7/8] WREADY received, handshake complete
# [BEAT 7/8] Beat completed, advancing to next
# [BEAT 8/8] Starting beat processing
# [BEAT 8/8] No WVALID delay (delay=0)
# [BEAT 8/8] Setting WDATA=0xffffffff, WLAST=1, WVALID=1
# [BEAT 8/8] WVALID asserted, waiting for WREADY...
# [BEAT 8/8] WREADY received, handshake complete
# [BEAT 8/8] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9465 Result (WRITE_OP)
#   Actual   : AWADDR=0x00b0 AWLEN=7 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x00b0 AWLEN=7 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 2 cycles
# AWVALID delay completed
# Setting AWADDR=0x0094, AWLEN=0, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR=  148, AWLEN=0, AWSIZE=2, STOP_ADDR=       152, 4KB_OFFSET=       152, Is it supposed to cross 4KB?  NO
# Starting data phase with 1 beats...
# [BEAT 1/1] Starting beat processing
# [BEAT 1/1] Applying WVALID delay of 1 cycles
# [BEAT 1/1] WVALID delay completed
# [BEAT 1/1] Setting WDATA=0xaaaaaaaa, WLAST=1, WVALID=1
# [BEAT 1/1] WVALID asserted, waiting for WREADY...
# [BEAT 1/1] WREADY received, handshake complete
# [BEAT 1/1] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9466 Result (WRITE_OP)
#   Actual   : AWADDR=0x0094 AWLEN=0 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0094 AWLEN=0 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Setting AWADDR=0x04b4, AWLEN=1, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 1204, AWLEN=1, AWSIZE=2, STOP_ADDR=      1212, 4KB_OFFSET=      1212, Is it supposed to cross 4KB?  NO
# Starting data phase with 2 beats...
# [BEAT 1/2] Starting beat processing
# [BEAT 1/2] Applying WVALID delay of 1 cycles
# [BEAT 1/2] WVALID delay completed
# [BEAT 1/2] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 1/2] WVALID asserted, waiting for WREADY...
# [BEAT 1/2] WREADY received, handshake complete
# [BEAT 1/2] Beat completed, advancing to next
# [BEAT 2/2] Starting beat processing
# [BEAT 2/2] No WVALID delay (delay=0)
# [BEAT 2/2] Setting WDATA=0xaaaaaaaa, WLAST=1, WVALID=1
# [BEAT 2/2] WVALID asserted, waiting for WREADY...
# [BEAT 2/2] WREADY received, handshake complete
# [BEAT 2/2] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9467 Result (WRITE_OP)
#   Actual   : AWADDR=0x04b4 AWLEN=1 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x04b4 AWLEN=1 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Delaying AWVALID by 1 cycles
# AWVALID delay completed
# Setting AWADDR=0x03f4, AWLEN=2, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 1012, AWLEN=2, AWSIZE=2, STOP_ADDR=      1024, 4KB_OFFSET=      1024, Is it supposed to cross 4KB?  NO
# Starting data phase with 3 beats...
# [BEAT 1/3] Starting beat processing
# [BEAT 1/3] Applying WVALID delay of 3 cycles
# [BEAT 1/3] WVALID delay completed
# [BEAT 1/3] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 1/3] WVALID asserted, waiting for WREADY...
# [BEAT 1/3] WREADY received, handshake complete
# [BEAT 1/3] Beat completed, advancing to next
# [BEAT 2/3] Starting beat processing
# [BEAT 2/3] Applying WVALID delay of 3 cycles
# [BEAT 2/3] WVALID delay completed
# [BEAT 2/3] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 2/3] WVALID asserted, waiting for WREADY...
# [BEAT 2/3] WREADY received, handshake complete
# [BEAT 2/3] Beat completed, advancing to next
# [BEAT 3/3] Starting beat processing
# [BEAT 3/3] Applying WVALID delay of 1 cycles
# [BEAT 3/3] WVALID delay completed
# [BEAT 3/3] Setting WDATA=0xaaaaaaaa, WLAST=1, WVALID=1
# [BEAT 3/3] WVALID asserted, waiting for WREADY...
# [BEAT 3/3] WREADY received, handshake complete
# [BEAT 3/3] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9468 Result (WRITE_OP)
#   Actual   : AWADDR=0x03f4 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x03f4 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 3 cycles
# AWVALID delay completed
# Setting AWADDR=0x0364, AWLEN=3, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR=  868, AWLEN=3, AWSIZE=2, STOP_ADDR=       884, 4KB_OFFSET=       884, Is it supposed to cross 4KB?  NO
# Starting data phase with 4 beats...
# [BEAT 1/4] Starting beat processing
# [BEAT 1/4] Applying WVALID delay of 2 cycles
# [BEAT 1/4] WVALID delay completed
# [BEAT 1/4] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 1/4] WVALID asserted, waiting for WREADY...
# [BEAT 1/4] WREADY received, handshake complete
# [BEAT 1/4] Beat completed, advancing to next
# [BEAT 2/4] Starting beat processing
# [BEAT 2/4] Applying WVALID delay of 2 cycles
# [BEAT 2/4] WVALID delay completed
# [BEAT 2/4] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 2/4] WVALID asserted, waiting for WREADY...
# [BEAT 2/4] WREADY received, handshake complete
# [BEAT 2/4] Beat completed, advancing to next
# [BEAT 3/4] Starting beat processing
# [BEAT 3/4] Applying WVALID delay of 1 cycles
# [BEAT 3/4] WVALID delay completed
# [BEAT 3/4] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 3/4] WVALID asserted, waiting for WREADY...
# [BEAT 3/4] WREADY received, handshake complete
# [BEAT 3/4] Beat completed, advancing to next
# [BEAT 4/4] Starting beat processing
# [BEAT 4/4] Applying WVALID delay of 1 cycles
# [BEAT 4/4] WVALID delay completed
# [BEAT 4/4] Setting WDATA=0xaaaaaaaa, WLAST=1, WVALID=1
# [BEAT 4/4] WVALID asserted, waiting for WREADY...
# [BEAT 4/4] WREADY received, handshake complete
# [BEAT 4/4] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9469 Result (WRITE_OP)
#   Actual   : AWADDR=0x0364 AWLEN=3 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0364 AWLEN=3 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 3 cycles
# AWVALID delay completed
# Setting AWADDR=0x0e00, AWLEN=4, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 3584, AWLEN=4, AWSIZE=2, STOP_ADDR=      3604, 4KB_OFFSET=      3604, Is it supposed to cross 4KB?  NO
# Starting data phase with 5 beats...
# [BEAT 1/5] Starting beat processing
# [BEAT 1/5] Applying WVALID delay of 1 cycles
# [BEAT 1/5] WVALID delay completed
# [BEAT 1/5] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 1/5] WVALID asserted, waiting for WREADY...
# [BEAT 1/5] WREADY received, handshake complete
# [BEAT 1/5] Beat completed, advancing to next
# [BEAT 2/5] Starting beat processing
# [BEAT 2/5] Applying WVALID delay of 3 cycles
# [BEAT 2/5] WVALID delay completed
# [BEAT 2/5] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 2/5] WVALID asserted, waiting for WREADY...
# [BEAT 2/5] WREADY received, handshake complete
# [BEAT 2/5] Beat completed, advancing to next
# [BEAT 3/5] Starting beat processing
# [BEAT 3/5] No WVALID delay (delay=0)
# [BEAT 3/5] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 3/5] WVALID asserted, waiting for WREADY...
# [BEAT 3/5] WREADY received, handshake complete
# [BEAT 3/5] Beat completed, advancing to next
# [BEAT 4/5] Starting beat processing
# [BEAT 4/5] No WVALID delay (delay=0)
# [BEAT 4/5] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 4/5] WVALID asserted, waiting for WREADY...
# [BEAT 4/5] WREADY received, handshake complete
# [BEAT 4/5] Beat completed, advancing to next
# [BEAT 5/5] Starting beat processing
# [BEAT 5/5] Applying WVALID delay of 2 cycles
# [BEAT 5/5] WVALID delay completed
# [BEAT 5/5] Setting WDATA=0xaaaaaaaa, WLAST=1, WVALID=1
# [BEAT 5/5] WVALID asserted, waiting for WREADY...
# [BEAT 5/5] WREADY received, handshake complete
# [BEAT 5/5] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9470 Result (WRITE_OP)
#   Actual   : AWADDR=0x0e00 AWLEN=4 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0e00 AWLEN=4 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Delaying AWVALID by 1 cycles
# AWVALID delay completed
# Setting AWADDR=0x02b0, AWLEN=5, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR=  688, AWLEN=5, AWSIZE=2, STOP_ADDR=       712, 4KB_OFFSET=       712, Is it supposed to cross 4KB?  NO
# Starting data phase with 6 beats...
# [BEAT 1/6] Starting beat processing
# [BEAT 1/6] Applying WVALID delay of 2 cycles
# [BEAT 1/6] WVALID delay completed
# [BEAT 1/6] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 1/6] WVALID asserted, waiting for WREADY...
# [BEAT 1/6] WREADY received, handshake complete
# [BEAT 1/6] Beat completed, advancing to next
# [BEAT 2/6] Starting beat processing
# [BEAT 2/6] Applying WVALID delay of 1 cycles
# [BEAT 2/6] WVALID delay completed
# [BEAT 2/6] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 2/6] WVALID asserted, waiting for WREADY...
# [BEAT 2/6] WREADY received, handshake complete
# [BEAT 2/6] Beat completed, advancing to next
# [BEAT 3/6] Starting beat processing
# [BEAT 3/6] Applying WVALID delay of 3 cycles
# [BEAT 3/6] WVALID delay completed
# [BEAT 3/6] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 3/6] WVALID asserted, waiting for WREADY...
# [BEAT 3/6] WREADY received, handshake complete
# [BEAT 3/6] Beat completed, advancing to next
# [BEAT 4/6] Starting beat processing
# [BEAT 4/6] Applying WVALID delay of 1 cycles
# [BEAT 4/6] WVALID delay completed
# [BEAT 4/6] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 4/6] WVALID asserted, waiting for WREADY...
# [BEAT 4/6] WREADY received, handshake complete
# [BEAT 4/6] Beat completed, advancing to next
# [BEAT 5/6] Starting beat processing
# [BEAT 5/6] Applying WVALID delay of 3 cycles
# [BEAT 5/6] WVALID delay completed
# [BEAT 5/6] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 5/6] WVALID asserted, waiting for WREADY...
# [BEAT 5/6] WREADY received, handshake complete
# [BEAT 5/6] Beat completed, advancing to next
# [BEAT 6/6] Starting beat processing
# [BEAT 6/6] Applying WVALID delay of 1 cycles
# [BEAT 6/6] WVALID delay completed
# [BEAT 6/6] Setting WDATA=0xaaaaaaaa, WLAST=1, WVALID=1
# [BEAT 6/6] WVALID asserted, waiting for WREADY...
# [BEAT 6/6] WREADY received, handshake complete
# [BEAT 6/6] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9471 Result (WRITE_OP)
#   Actual   : AWADDR=0x02b0 AWLEN=5 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x02b0 AWLEN=5 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 1 cycles
# AWVALID delay completed
# Setting AWADDR=0x0710, AWLEN=6, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 1808, AWLEN=6, AWSIZE=2, STOP_ADDR=      1836, 4KB_OFFSET=      1836, Is it supposed to cross 4KB?  NO
# Starting data phase with 7 beats...
# [BEAT 1/7] Starting beat processing
# [BEAT 1/7] Applying WVALID delay of 3 cycles
# [BEAT 1/7] WVALID delay completed
# [BEAT 1/7] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 1/7] WVALID asserted, waiting for WREADY...
# [BEAT 1/7] WREADY received, handshake complete
# [BEAT 1/7] Beat completed, advancing to next
# [BEAT 2/7] Starting beat processing
# [BEAT 2/7] Applying WVALID delay of 2 cycles
# [BEAT 2/7] WVALID delay completed
# [BEAT 2/7] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 2/7] WVALID asserted, waiting for WREADY...
# [BEAT 2/7] WREADY received, handshake complete
# [BEAT 2/7] Beat completed, advancing to next
# [BEAT 3/7] Starting beat processing
# [BEAT 3/7] No WVALID delay (delay=0)
# [BEAT 3/7] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 3/7] WVALID asserted, waiting for WREADY...
# [BEAT 3/7] WREADY received, handshake complete
# [BEAT 3/7] Beat completed, advancing to next
# [BEAT 4/7] Starting beat processing
# [BEAT 4/7] Applying WVALID delay of 1 cycles
# [BEAT 4/7] WVALID delay completed
# [BEAT 4/7] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 4/7] WVALID asserted, waiting for WREADY...
# [BEAT 4/7] WREADY received, handshake complete
# [BEAT 4/7] Beat completed, advancing to next
# [BEAT 5/7] Starting beat processing
# [BEAT 5/7] Applying WVALID delay of 3 cycles
# [BEAT 5/7] WVALID delay completed
# [BEAT 5/7] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 5/7] WVALID asserted, waiting for WREADY...
# [BEAT 5/7] WREADY received, handshake complete
# [BEAT 5/7] Beat completed, advancing to next
# [BEAT 6/7] Starting beat processing
# [BEAT 6/7] Applying WVALID delay of 2 cycles
# [BEAT 6/7] WVALID delay completed
# [BEAT 6/7] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 6/7] WVALID asserted, waiting for WREADY...
# [BEAT 6/7] WREADY received, handshake complete
# [BEAT 6/7] Beat completed, advancing to next
# [BEAT 7/7] Starting beat processing
# [BEAT 7/7] No WVALID delay (delay=0)
# [BEAT 7/7] Setting WDATA=0xaaaaaaaa, WLAST=1, WVALID=1
# [BEAT 7/7] WVALID asserted, waiting for WREADY...
# [BEAT 7/7] WREADY received, handshake complete
# [BEAT 7/7] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9472 Result (WRITE_OP)
#   Actual   : AWADDR=0x0710 AWLEN=6 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0710 AWLEN=6 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Delaying AWVALID by 2 cycles
# AWVALID delay completed
# Setting AWADDR=0x0370, AWLEN=7, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR=  880, AWLEN=7, AWSIZE=2, STOP_ADDR=       912, 4KB_OFFSET=       912, Is it supposed to cross 4KB?  NO
# Starting data phase with 8 beats...
# [BEAT 1/8] Starting beat processing
# [BEAT 1/8] Applying WVALID delay of 3 cycles
# [BEAT 1/8] WVALID delay completed
# [BEAT 1/8] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 1/8] WVALID asserted, waiting for WREADY...
# [BEAT 1/8] WREADY received, handshake complete
# [BEAT 1/8] Beat completed, advancing to next
# [BEAT 2/8] Starting beat processing
# [BEAT 2/8] Applying WVALID delay of 2 cycles
# [BEAT 2/8] WVALID delay completed
# [BEAT 2/8] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 2/8] WVALID asserted, waiting for WREADY...
# [BEAT 2/8] WREADY received, handshake complete
# [BEAT 2/8] Beat completed, advancing to next
# [BEAT 3/8] Starting beat processing
# [BEAT 3/8] No WVALID delay (delay=0)
# [BEAT 3/8] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 3/8] WVALID asserted, waiting for WREADY...
# [BEAT 3/8] WREADY received, handshake complete
# [BEAT 3/8] Beat completed, advancing to next
# [BEAT 4/8] Starting beat processing
# [BEAT 4/8] Applying WVALID delay of 2 cycles
# [BEAT 4/8] WVALID delay completed
# [BEAT 4/8] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 4/8] WVALID asserted, waiting for WREADY...
# [BEAT 4/8] WREADY received, handshake complete
# [BEAT 4/8] Beat completed, advancing to next
# [BEAT 5/8] Starting beat processing
# [BEAT 5/8] Applying WVALID delay of 2 cycles
# [BEAT 5/8] WVALID delay completed
# [BEAT 5/8] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 5/8] WVALID asserted, waiting for WREADY...
# [BEAT 5/8] WREADY received, handshake complete
# [BEAT 5/8] Beat completed, advancing to next
# [BEAT 6/8] Starting beat processing
# [BEAT 6/8] Applying WVALID delay of 2 cycles
# [BEAT 6/8] WVALID delay completed
# [BEAT 6/8] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 6/8] WVALID asserted, waiting for WREADY...
# [BEAT 6/8] WREADY received, handshake complete
# [BEAT 6/8] Beat completed, advancing to next
# [BEAT 7/8] Starting beat processing
# [BEAT 7/8] Applying WVALID delay of 1 cycles
# [BEAT 7/8] WVALID delay completed
# [BEAT 7/8] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 7/8] WVALID asserted, waiting for WREADY...
# [BEAT 7/8] WREADY received, handshake complete
# [BEAT 7/8] Beat completed, advancing to next
# [BEAT 8/8] Starting beat processing
# [BEAT 8/8] No WVALID delay (delay=0)
# [BEAT 8/8] Setting WDATA=0xaaaaaaaa, WLAST=1, WVALID=1
# [BEAT 8/8] WVALID asserted, waiting for WREADY...
# [BEAT 8/8] WREADY received, handshake complete
# [BEAT 8/8] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9473 Result (WRITE_OP)
#   Actual   : AWADDR=0x0370 AWLEN=7 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0370 AWLEN=7 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Delaying AWVALID by 3 cycles
# AWVALID delay completed
# Setting AWADDR=0x083c, AWLEN=0, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 2108, AWLEN=0, AWSIZE=2, STOP_ADDR=      2112, 4KB_OFFSET=      2112, Is it supposed to cross 4KB?  NO
# Starting data phase with 1 beats...
# [BEAT 1/1] Starting beat processing
# [BEAT 1/1] No WVALID delay (delay=0)
# [BEAT 1/1] Setting WDATA=0x55555555, WLAST=1, WVALID=1
# [BEAT 1/1] WVALID asserted, waiting for WREADY...
# [BEAT 1/1] WREADY received, handshake complete
# [BEAT 1/1] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9474 Result (WRITE_OP)
#   Actual   : AWADDR=0x083c AWLEN=0 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x083c AWLEN=0 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Setting AWADDR=0x0100, AWLEN=1, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR=  256, AWLEN=1, AWSIZE=2, STOP_ADDR=       264, 4KB_OFFSET=       264, Is it supposed to cross 4KB?  NO
# Starting data phase with 2 beats...
# [BEAT 1/2] Starting beat processing
# [BEAT 1/2] Applying WVALID delay of 2 cycles
# [BEAT 1/2] WVALID delay completed
# [BEAT 1/2] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 1/2] WVALID asserted, waiting for WREADY...
# [BEAT 1/2] WREADY received, handshake complete
# [BEAT 1/2] Beat completed, advancing to next
# [BEAT 2/2] Starting beat processing
# [BEAT 2/2] No WVALID delay (delay=0)
# [BEAT 2/2] Setting WDATA=0x55555555, WLAST=1, WVALID=1
# [BEAT 2/2] WVALID asserted, waiting for WREADY...
# [BEAT 2/2] WREADY received, handshake complete
# [BEAT 2/2] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# === COMPREHENSIVE COVERAGE REPORT ===
# Burst Coverage:           100.0%
# Memory Address Coverage:  100.0%
# Data Patterns Coverage:   100.0%
# Protocol Coverage:        100.0%
# -------------------------------------
# Overall Coverage:         100.0%
# =====================================
# 
# === DETAILED COVERAGE BINS ===
# Address Ranges Hit:
#   Low (0-341): R=✓, W=✓
#   Mid (342-681): R=✓, W=✓
#   High (682-1023): R=✓, W=✓
# Boundary Cases: No_Cross=✓, Cross=✗
# ===============================
# ======================================================
# Test #9475 Result (WRITE_OP)
#   Actual   : AWADDR=0x0100 AWLEN=1 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0100 AWLEN=1 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Delaying AWVALID by 3 cycles
# AWVALID delay completed
# Setting AWADDR=0x0d74, AWLEN=2, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 3444, AWLEN=2, AWSIZE=2, STOP_ADDR=      3456, 4KB_OFFSET=      3456, Is it supposed to cross 4KB?  NO
# Starting data phase with 3 beats...
# [BEAT 1/3] Starting beat processing
# [BEAT 1/3] Applying WVALID delay of 3 cycles
# [BEAT 1/3] WVALID delay completed
# [BEAT 1/3] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 1/3] WVALID asserted, waiting for WREADY...
# [BEAT 1/3] WREADY received, handshake complete
# [BEAT 1/3] Beat completed, advancing to next
# [BEAT 2/3] Starting beat processing
# [BEAT 2/3] No WVALID delay (delay=0)
# [BEAT 2/3] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 2/3] WVALID asserted, waiting for WREADY...
# [BEAT 2/3] WREADY received, handshake complete
# [BEAT 2/3] Beat completed, advancing to next
# [BEAT 3/3] Starting beat processing
# [BEAT 3/3] Applying WVALID delay of 1 cycles
# [BEAT 3/3] WVALID delay completed
# [BEAT 3/3] Setting WDATA=0x55555555, WLAST=1, WVALID=1
# [BEAT 3/3] WVALID asserted, waiting for WREADY...
# [BEAT 3/3] WREADY received, handshake complete
# [BEAT 3/3] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9476 Result (WRITE_OP)
#   Actual   : AWADDR=0x0d74 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0d74 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Setting AWADDR=0x0600, AWLEN=3, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 1536, AWLEN=3, AWSIZE=2, STOP_ADDR=      1552, 4KB_OFFSET=      1552, Is it supposed to cross 4KB?  NO
# Starting data phase with 4 beats...
# [BEAT 1/4] Starting beat processing
# [BEAT 1/4] Applying WVALID delay of 3 cycles
# [BEAT 1/4] WVALID delay completed
# [BEAT 1/4] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 1/4] WVALID asserted, waiting for WREADY...
# [BEAT 1/4] WREADY received, handshake complete
# [BEAT 1/4] Beat completed, advancing to next
# [BEAT 2/4] Starting beat processing
# [BEAT 2/4] No WVALID delay (delay=0)
# [BEAT 2/4] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 2/4] WVALID asserted, waiting for WREADY...
# [BEAT 2/4] WREADY received, handshake complete
# [BEAT 2/4] Beat completed, advancing to next
# [BEAT 3/4] Starting beat processing
# [BEAT 3/4] Applying WVALID delay of 2 cycles
# [BEAT 3/4] WVALID delay completed
# [BEAT 3/4] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 3/4] WVALID asserted, waiting for WREADY...
# [BEAT 3/4] WREADY received, handshake complete
# [BEAT 3/4] Beat completed, advancing to next
# [BEAT 4/4] Starting beat processing
# [BEAT 4/4] No WVALID delay (delay=0)
# [BEAT 4/4] Setting WDATA=0x55555555, WLAST=1, WVALID=1
# [BEAT 4/4] WVALID asserted, waiting for WREADY...
# [BEAT 4/4] WREADY received, handshake complete
# [BEAT 4/4] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9477 Result (WRITE_OP)
#   Actual   : AWADDR=0x0600 AWLEN=3 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0600 AWLEN=3 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 3 cycles...
# Randomized reset task completed
# Setting AWADDR=0x0aa4, AWLEN=4, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 2724, AWLEN=4, AWSIZE=2, STOP_ADDR=      2744, 4KB_OFFSET=      2744, Is it supposed to cross 4KB?  NO
# Starting data phase with 5 beats...
# [BEAT 1/5] Starting beat processing
# [BEAT 1/5] Applying WVALID delay of 1 cycles
# [BEAT 1/5] WVALID delay completed
# [BEAT 1/5] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 1/5] WVALID asserted, waiting for WREADY...
# [BEAT 1/5] WREADY received, handshake complete
# [BEAT 1/5] Beat completed, advancing to next
# [BEAT 2/5] Starting beat processing
# [BEAT 2/5] No WVALID delay (delay=0)
# [BEAT 2/5] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 2/5] WVALID asserted, waiting for WREADY...
# [BEAT 2/5] WREADY received, handshake complete
# [BEAT 2/5] Beat completed, advancing to next
# [BEAT 3/5] Starting beat processing
# [BEAT 3/5] Applying WVALID delay of 1 cycles
# [BEAT 3/5] WVALID delay completed
# [BEAT 3/5] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 3/5] WVALID asserted, waiting for WREADY...
# [BEAT 3/5] WREADY received, handshake complete
# [BEAT 3/5] Beat completed, advancing to next
# [BEAT 4/5] Starting beat processing
# [BEAT 4/5] Applying WVALID delay of 1 cycles
# [BEAT 4/5] WVALID delay completed
# [BEAT 4/5] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 4/5] WVALID asserted, waiting for WREADY...
# [BEAT 4/5] WREADY received, handshake complete
# [BEAT 4/5] Beat completed, advancing to next
# [BEAT 5/5] Starting beat processing
# [BEAT 5/5] Applying WVALID delay of 1 cycles
# [BEAT 5/5] WVALID delay completed
# [BEAT 5/5] Setting WDATA=0x55555555, WLAST=1, WVALID=1
# [BEAT 5/5] WVALID asserted, waiting for WREADY...
# [BEAT 5/5] WREADY received, handshake complete
# [BEAT 5/5] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9478 Result (WRITE_OP)
#   Actual   : AWADDR=0x0aa4 AWLEN=4 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0aa4 AWLEN=4 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 3 cycles...
# Randomized reset task completed
# Setting AWADDR=0x08f0, AWLEN=5, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 2288, AWLEN=5, AWSIZE=2, STOP_ADDR=      2312, 4KB_OFFSET=      2312, Is it supposed to cross 4KB?  NO
# Starting data phase with 6 beats...
# [BEAT 1/6] Starting beat processing
# [BEAT 1/6] Applying WVALID delay of 2 cycles
# [BEAT 1/6] WVALID delay completed
# [BEAT 1/6] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 1/6] WVALID asserted, waiting for WREADY...
# [BEAT 1/6] WREADY received, handshake complete
# [BEAT 1/6] Beat completed, advancing to next
# [BEAT 2/6] Starting beat processing
# [BEAT 2/6] Applying WVALID delay of 2 cycles
# [BEAT 2/6] WVALID delay completed
# [BEAT 2/6] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 2/6] WVALID asserted, waiting for WREADY...
# [BEAT 2/6] WREADY received, handshake complete
# [BEAT 2/6] Beat completed, advancing to next
# [BEAT 3/6] Starting beat processing
# [BEAT 3/6] Applying WVALID delay of 3 cycles
# [BEAT 3/6] WVALID delay completed
# [BEAT 3/6] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 3/6] WVALID asserted, waiting for WREADY...
# [BEAT 3/6] WREADY received, handshake complete
# [BEAT 3/6] Beat completed, advancing to next
# [BEAT 4/6] Starting beat processing
# [BEAT 4/6] No WVALID delay (delay=0)
# [BEAT 4/6] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 4/6] WVALID asserted, waiting for WREADY...
# [BEAT 4/6] WREADY received, handshake complete
# [BEAT 4/6] Beat completed, advancing to next
# [BEAT 5/6] Starting beat processing
# [BEAT 5/6] Applying WVALID delay of 2 cycles
# [BEAT 5/6] WVALID delay completed
# [BEAT 5/6] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 5/6] WVALID asserted, waiting for WREADY...
# [BEAT 5/6] WREADY received, handshake complete
# [BEAT 5/6] Beat completed, advancing to next
# [BEAT 6/6] Starting beat processing
# [BEAT 6/6] No WVALID delay (delay=0)
# [BEAT 6/6] Setting WDATA=0x55555555, WLAST=1, WVALID=1
# [BEAT 6/6] WVALID asserted, waiting for WREADY...
# [BEAT 6/6] WREADY received, handshake complete
# [BEAT 6/6] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9479 Result (WRITE_OP)
#   Actual   : AWADDR=0x08f0 AWLEN=5 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x08f0 AWLEN=5 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Delaying AWVALID by 3 cycles
# AWVALID delay completed
# Setting AWADDR=0x0120, AWLEN=6, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR=  288, AWLEN=6, AWSIZE=2, STOP_ADDR=       316, 4KB_OFFSET=       316, Is it supposed to cross 4KB?  NO
# Starting data phase with 7 beats...
# [BEAT 1/7] Starting beat processing
# [BEAT 1/7] Applying WVALID delay of 1 cycles
# [BEAT 1/7] WVALID delay completed
# [BEAT 1/7] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 1/7] WVALID asserted, waiting for WREADY...
# [BEAT 1/7] WREADY received, handshake complete
# [BEAT 1/7] Beat completed, advancing to next
# [BEAT 2/7] Starting beat processing
# [BEAT 2/7] Applying WVALID delay of 1 cycles
# [BEAT 2/7] WVALID delay completed
# [BEAT 2/7] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 2/7] WVALID asserted, waiting for WREADY...
# [BEAT 2/7] WREADY received, handshake complete
# [BEAT 2/7] Beat completed, advancing to next
# [BEAT 3/7] Starting beat processing
# [BEAT 3/7] Applying WVALID delay of 2 cycles
# [BEAT 3/7] WVALID delay completed
# [BEAT 3/7] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 3/7] WVALID asserted, waiting for WREADY...
# [BEAT 3/7] WREADY received, handshake complete
# [BEAT 3/7] Beat completed, advancing to next
# [BEAT 4/7] Starting beat processing
# [BEAT 4/7] No WVALID delay (delay=0)
# [BEAT 4/7] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 4/7] WVALID asserted, waiting for WREADY...
# [BEAT 4/7] WREADY received, handshake complete
# [BEAT 4/7] Beat completed, advancing to next
# [BEAT 5/7] Starting beat processing
# [BEAT 5/7] Applying WVALID delay of 1 cycles
# [BEAT 5/7] WVALID delay completed
# [BEAT 5/7] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 5/7] WVALID asserted, waiting for WREADY...
# [BEAT 5/7] WREADY received, handshake complete
# [BEAT 5/7] Beat completed, advancing to next
# [BEAT 6/7] Starting beat processing
# [BEAT 6/7] Applying WVALID delay of 3 cycles
# [BEAT 6/7] WVALID delay completed
# [BEAT 6/7] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 6/7] WVALID asserted, waiting for WREADY...
# [BEAT 6/7] WREADY received, handshake complete
# [BEAT 6/7] Beat completed, advancing to next
# [BEAT 7/7] Starting beat processing
# [BEAT 7/7] Applying WVALID delay of 2 cycles
# [BEAT 7/7] WVALID delay completed
# [BEAT 7/7] Setting WDATA=0x55555555, WLAST=1, WVALID=1
# [BEAT 7/7] WVALID asserted, waiting for WREADY...
# [BEAT 7/7] WREADY received, handshake complete
# [BEAT 7/7] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=0
# BREADY not asserted - response phase incomplete
# BRESP available but not captured due to BREADY=0: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9480 Result (WRITE_OP)
#   Actual   : AWADDR=0x0120 AWLEN=6 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0120 AWLEN=6 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Delaying AWVALID by 3 cycles
# AWVALID delay completed
# Setting AWADDR=0x0498, AWLEN=7, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 1176, AWLEN=7, AWSIZE=2, STOP_ADDR=      1208, 4KB_OFFSET=      1208, Is it supposed to cross 4KB?  NO
# Starting data phase with 8 beats...
# [BEAT 1/8] Starting beat processing
# [BEAT 1/8] Applying WVALID delay of 2 cycles
# [BEAT 1/8] WVALID delay completed
# [BEAT 1/8] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 1/8] WVALID asserted, waiting for WREADY...
# [BEAT 1/8] WREADY received, handshake complete
# [BEAT 1/8] Beat completed, advancing to next
# [BEAT 2/8] Starting beat processing
# [BEAT 2/8] No WVALID delay (delay=0)
# [BEAT 2/8] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 2/8] WVALID asserted, waiting for WREADY...
# [BEAT 2/8] WREADY received, handshake complete
# [BEAT 2/8] Beat completed, advancing to next
# [BEAT 3/8] Starting beat processing
# [BEAT 3/8] Applying WVALID delay of 1 cycles
# [BEAT 3/8] WVALID delay completed
# [BEAT 3/8] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 3/8] WVALID asserted, waiting for WREADY...
# [BEAT 3/8] WREADY received, handshake complete
# [BEAT 3/8] Beat completed, advancing to next
# [BEAT 4/8] Starting beat processing
# [BEAT 4/8] Applying WVALID delay of 3 cycles
# [BEAT 4/8] WVALID delay completed
# [BEAT 4/8] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 4/8] WVALID asserted, waiting for WREADY...
# [BEAT 4/8] WREADY received, handshake complete
# [BEAT 4/8] Beat completed, advancing to next
# [BEAT 5/8] Starting beat processing
# [BEAT 5/8] Applying WVALID delay of 3 cycles
# [BEAT 5/8] WVALID delay completed
# [BEAT 5/8] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 5/8] WVALID asserted, waiting for WREADY...
# [BEAT 5/8] WREADY received, handshake complete
# [BEAT 5/8] Beat completed, advancing to next
# [BEAT 6/8] Starting beat processing
# [BEAT 6/8] Applying WVALID delay of 3 cycles
# [BEAT 6/8] WVALID delay completed
# [BEAT 6/8] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 6/8] WVALID asserted, waiting for WREADY...
# [BEAT 6/8] WREADY received, handshake complete
# [BEAT 6/8] Beat completed, advancing to next
# [BEAT 7/8] Starting beat processing
# [BEAT 7/8] Applying WVALID delay of 3 cycles
# [BEAT 7/8] WVALID delay completed
# [BEAT 7/8] Setting WDATA=0x55555555, WLAST=0, WVALID=1
# [BEAT 7/8] WVALID asserted, waiting for WREADY...
# [BEAT 7/8] WREADY received, handshake complete
# [BEAT 7/8] Beat completed, advancing to next
# [BEAT 8/8] Starting beat processing
# [BEAT 8/8] Applying WVALID delay of 3 cycles
# [BEAT 8/8] WVALID delay completed
# [BEAT 8/8] Setting WDATA=0x55555555, WLAST=1, WVALID=1
# [BEAT 8/8] WVALID asserted, waiting for WREADY...
# [BEAT 8/8] WREADY received, handshake complete
# [BEAT 8/8] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9481 Result (WRITE_OP)
#   Actual   : AWADDR=0x0498 AWLEN=7 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0498 AWLEN=7 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 1 cycles
# AWVALID delay completed
# Setting AWADDR=0x0ee0, AWLEN=0, AWSIZE=2, AWVALID=0
# AWVALID NOT asserted, skipping AWREADY wait
# Address phase skipped (AWVALID=0), skipping data phase
# Transaction aborted - no data transfer
# ======================================================
# Test #9482 Result (WRITE_OP)
#   Actual   : AWADDR=0x0ee0 AWLEN=0 AWSIZE=2 BRESP=SLVERR
#   Expected : AWADDR=0x0ee0 AWLEN=0 AWSIZE=2 BRESP=SLVERR
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 1 cycles
# AWVALID delay completed
# Setting AWADDR=0x0020, AWLEN=1, AWSIZE=2, AWVALID=0
# AWVALID NOT asserted, skipping AWREADY wait
# Address phase skipped (AWVALID=0), skipping data phase
# Transaction aborted - no data transfer
# ======================================================
# Test #9483 Result (WRITE_OP)
#   Actual   : AWADDR=0x0020 AWLEN=1 AWSIZE=2 BRESP=SLVERR
#   Expected : AWADDR=0x0020 AWLEN=1 AWSIZE=2 BRESP=SLVERR
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 3 cycles...
# Randomized reset task completed
# Delaying AWVALID by 2 cycles
# AWVALID delay completed
# Setting AWADDR=0x0214, AWLEN=2, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR=  532, AWLEN=2, AWSIZE=2, STOP_ADDR=       544, 4KB_OFFSET=       544, Is it supposed to cross 4KB?  NO
# Starting data phase with 3 beats...
# [BEAT 1/3] Starting beat processing
# [BEAT 1/3] No WVALID delay (delay=0)
# [BEAT 1/3] Setting WDATA=0xf6743aec, WLAST=0, WVALID=1
# [BEAT 1/3] WVALID asserted, waiting for WREADY...
# [BEAT 1/3] WREADY received, handshake complete
# [BEAT 1/3] Beat completed, advancing to next
# [BEAT 2/3] Starting beat processing
# [BEAT 2/3] No WVALID delay (delay=0)
# [BEAT 2/3] Setting WDATA=0x7a83c7f5, WLAST=0, WVALID=1
# [BEAT 2/3] WVALID asserted, waiting for WREADY...
# [BEAT 2/3] WREADY received, handshake complete
# [BEAT 2/3] Beat completed, advancing to next
# [BEAT 3/3] Starting beat processing
# [BEAT 3/3] Applying WVALID delay of 3 cycles
# [BEAT 3/3] WVALID delay completed
# [BEAT 3/3] Setting WDATA=0x9139e022, WLAST=1, WVALID=1
# [BEAT 3/3] WVALID asserted, waiting for WREADY...
# [BEAT 3/3] WREADY received, handshake complete
# [BEAT 3/3] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9484 Result (WRITE_OP)
#   Actual   : AWADDR=0x0214 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0214 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Setting AWADDR=0x0864, AWLEN=3, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 2148, AWLEN=3, AWSIZE=2, STOP_ADDR=      2164, 4KB_OFFSET=      2164, Is it supposed to cross 4KB?  NO
# Starting data phase with 4 beats...
# [BEAT 1/4] Starting beat processing
# [BEAT 1/4] Applying WVALID delay of 2 cycles
# [BEAT 1/4] WVALID delay completed
# [BEAT 1/4] Setting WDATA=0x1b086136, WLAST=0, WVALID=1
# [BEAT 1/4] WVALID asserted, waiting for WREADY...
# [BEAT 1/4] WREADY received, handshake complete
# [BEAT 1/4] Beat completed, advancing to next
# [BEAT 2/4] Starting beat processing
# [BEAT 2/4] No WVALID delay (delay=0)
# [BEAT 2/4] Setting WDATA=0x71d0dbe3, WLAST=0, WVALID=1
# [BEAT 2/4] WVALID asserted, waiting for WREADY...
# [BEAT 2/4] WREADY received, handshake complete
# [BEAT 2/4] Beat completed, advancing to next
# [BEAT 3/4] Starting beat processing
# [BEAT 3/4] Applying WVALID delay of 1 cycles
# [BEAT 3/4] WVALID delay completed
# [BEAT 3/4] Setting WDATA=0x98529630, WLAST=0, WVALID=1
# [BEAT 3/4] WVALID asserted, waiting for WREADY...
# [BEAT 3/4] WREADY received, handshake complete
# [BEAT 3/4] Beat completed, advancing to next
# [BEAT 4/4] Starting beat processing
# [BEAT 4/4] Applying WVALID delay of 1 cycles
# [BEAT 4/4] WVALID delay completed
# [BEAT 4/4] Setting WDATA=0xbfa8bc7f, WLAST=1, WVALID=1
# [BEAT 4/4] WVALID asserted, waiting for WREADY...
# [BEAT 4/4] WREADY received, handshake complete
# [BEAT 4/4] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9485 Result (WRITE_OP)
#   Actual   : AWADDR=0x0864 AWLEN=3 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0864 AWLEN=3 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 2 cycles
# AWVALID delay completed
# Setting AWADDR=0x0e4c, AWLEN=4, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 3660, AWLEN=4, AWSIZE=2, STOP_ADDR=      3680, 4KB_OFFSET=      3680, Is it supposed to cross 4KB?  NO
# Starting data phase with 5 beats...
# [BEAT 1/5] Starting beat processing
# [BEAT 1/5] No WVALID delay (delay=0)
# [BEAT 1/5] Setting WDATA=0xc6d49c8d, WLAST=0, WVALID=1
# [BEAT 1/5] WVALID asserted, waiting for WREADY...
# [BEAT 1/5] WREADY received, handshake complete
# [BEAT 1/5] Beat completed, advancing to next
# [BEAT 2/5] Starting beat processing
# [BEAT 2/5] No WVALID delay (delay=0)
# [BEAT 2/5] Setting WDATA=0x9e89783d, WLAST=0, WVALID=1
# [BEAT 2/5] WVALID asserted, waiting for WREADY...
# [BEAT 2/5] WREADY received, handshake complete
# [BEAT 2/5] Beat completed, advancing to next
# [BEAT 3/5] Starting beat processing
# [BEAT 3/5] Applying WVALID delay of 2 cycles
# [BEAT 3/5] WVALID delay completed
# [BEAT 3/5] Setting WDATA=0x666e59cc, WLAST=0, WVALID=1
# [BEAT 3/5] WVALID asserted, waiting for WREADY...
# [BEAT 3/5] WREADY received, handshake complete
# [BEAT 3/5] Beat completed, advancing to next
# [BEAT 4/5] Starting beat processing
# [BEAT 4/5] Applying WVALID delay of 3 cycles
# [BEAT 4/5] WVALID delay completed
# [BEAT 4/5] Setting WDATA=0xf6c9bced, WLAST=0, WVALID=1
# [BEAT 4/5] WVALID asserted, waiting for WREADY...
# [BEAT 4/5] WREADY received, handshake complete
# [BEAT 4/5] Beat completed, advancing to next
# [BEAT 5/5] Starting beat processing
# [BEAT 5/5] No WVALID delay (delay=0)
# [BEAT 5/5] Setting WDATA=0x98d83831, WLAST=1, WVALID=1
# [BEAT 5/5] WVALID asserted, waiting for WREADY...
# [BEAT 5/5] WREADY received, handshake complete
# [BEAT 5/5] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9486 Result (WRITE_OP)
#   Actual   : AWADDR=0x0e4c AWLEN=4 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0e4c AWLEN=4 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Setting AWADDR=0x0c1c, AWLEN=5, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 3100, AWLEN=5, AWSIZE=2, STOP_ADDR=      3124, 4KB_OFFSET=      3124, Is it supposed to cross 4KB?  NO
# Starting data phase with 6 beats...
# [BEAT 1/6] Starting beat processing
# [BEAT 1/6] No WVALID delay (delay=0)
# [BEAT 1/6] Setting WDATA=0x9644502c, WLAST=0, WVALID=1
# [BEAT 1/6] WVALID asserted, waiting for WREADY...
# [BEAT 1/6] WREADY received, handshake complete
# [BEAT 1/6] Beat completed, advancing to next
# [BEAT 2/6] Starting beat processing
# [BEAT 2/6] No WVALID delay (delay=0)
# [BEAT 2/6] Setting WDATA=0x1c011938, WLAST=0, WVALID=1
# [BEAT 2/6] WVALID asserted, waiting for WREADY...
# [BEAT 2/6] WREADY received, handshake complete
# [BEAT 2/6] Beat completed, advancing to next
# [BEAT 3/6] Starting beat processing
# [BEAT 3/6] Applying WVALID delay of 1 cycles
# [BEAT 3/6] WVALID delay completed
# [BEAT 3/6] Setting WDATA=0x91e47c23, WLAST=0, WVALID=1
# [BEAT 3/6] WVALID asserted, waiting for WREADY...
# [BEAT 3/6] WREADY received, handshake complete
# [BEAT 3/6] Beat completed, advancing to next
# [BEAT 4/6] Starting beat processing
# [BEAT 4/6] No WVALID delay (delay=0)
# [BEAT 4/6] Setting WDATA=0xe85720d0, WLAST=0, WVALID=1
# [BEAT 4/6] WVALID asserted, waiting for WREADY...
# [BEAT 4/6] WREADY received, handshake complete
# [BEAT 4/6] Beat completed, advancing to next
# [BEAT 5/6] Starting beat processing
# [BEAT 5/6] Applying WVALID delay of 2 cycles
# [BEAT 5/6] WVALID delay completed
# [BEAT 5/6] Setting WDATA=0x99615e32, WLAST=0, WVALID=1
# [BEAT 5/6] WVALID asserted, waiting for WREADY...
# [BEAT 5/6] WREADY received, handshake complete
# [BEAT 5/6] Beat completed, advancing to next
# [BEAT 6/6] Starting beat processing
# [BEAT 6/6] Applying WVALID delay of 3 cycles
# [BEAT 6/6] WVALID delay completed
# [BEAT 6/6] Setting WDATA=0x21b3a543, WLAST=1, WVALID=1
# [BEAT 6/6] WVALID asserted, waiting for WREADY...
# [BEAT 6/6] WREADY received, handshake complete
# [BEAT 6/6] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9487 Result (WRITE_OP)
#   Actual   : AWADDR=0x0c1c AWLEN=5 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0c1c AWLEN=5 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Delaying AWVALID by 1 cycles
# AWVALID delay completed
# Setting AWADDR=0x027c, AWLEN=6, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR=  636, AWLEN=6, AWSIZE=2, STOP_ADDR=       664, 4KB_OFFSET=       664, Is it supposed to cross 4KB?  NO
# Starting data phase with 7 beats...
# [BEAT 1/7] Starting beat processing
# [BEAT 1/7] Applying WVALID delay of 1 cycles
# [BEAT 1/7] WVALID delay completed
# [BEAT 1/7] Setting WDATA=0xbe80567d, WLAST=0, WVALID=1
# [BEAT 1/7] WVALID asserted, waiting for WREADY...
# [BEAT 1/7] WREADY received, handshake complete
# [BEAT 1/7] Beat completed, advancing to next
# [BEAT 2/7] Starting beat processing
# [BEAT 2/7] Applying WVALID delay of 1 cycles
# [BEAT 2/7] WVALID delay completed
# [BEAT 2/7] Setting WDATA=0x666203cc, WLAST=0, WVALID=1
# [BEAT 2/7] WVALID asserted, waiting for WREADY...
# [BEAT 2/7] WREADY received, handshake complete
# [BEAT 2/7] Beat completed, advancing to next
# [BEAT 3/7] Starting beat processing
# [BEAT 3/7] Applying WVALID delay of 2 cycles
# [BEAT 3/7] WVALID delay completed
# [BEAT 3/7] Setting WDATA=0xf6f65eed, WLAST=0, WVALID=1
# [BEAT 3/7] WVALID asserted, waiting for WREADY...
# [BEAT 3/7] WREADY received, handshake complete
# [BEAT 3/7] Beat completed, advancing to next
# [BEAT 4/7] Starting beat processing
# [BEAT 4/7] Applying WVALID delay of 3 cycles
# [BEAT 4/7] WVALID delay completed
# [BEAT 4/7] Setting WDATA=0xa2798644, WLAST=0, WVALID=1
# [BEAT 4/7] WVALID asserted, waiting for WREADY...
# [BEAT 4/7] WREADY received, handshake complete
# [BEAT 4/7] Beat completed, advancing to next
# [BEAT 5/7] Starting beat processing
# [BEAT 5/7] Applying WVALID delay of 2 cycles
# [BEAT 5/7] WVALID delay completed
# [BEAT 5/7] Setting WDATA=0xcbc06a97, WLAST=0, WVALID=1
# [BEAT 5/7] WVALID asserted, waiting for WREADY...
# [BEAT 5/7] WREADY received, handshake complete
# [BEAT 5/7] Beat completed, advancing to next
# [BEAT 6/7] Starting beat processing
# [BEAT 6/7] Applying WVALID delay of 2 cycles
# [BEAT 6/7] WVALID delay completed
# [BEAT 6/7] Setting WDATA=0x568249ad, WLAST=0, WVALID=1
# [BEAT 6/7] WVALID asserted, waiting for WREADY...
# [BEAT 6/7] WREADY received, handshake complete
# [BEAT 6/7] Beat completed, advancing to next
# [BEAT 7/7] Starting beat processing
# [BEAT 7/7] Applying WVALID delay of 3 cycles
# [BEAT 7/7] WVALID delay completed
# [BEAT 7/7] Setting WDATA=0x2a8acb55, WLAST=1, WVALID=1
# [BEAT 7/7] WVALID asserted, waiting for WREADY...
# [BEAT 7/7] WREADY received, handshake complete
# [BEAT 7/7] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9488 Result (WRITE_OP)
#   Actual   : AWADDR=0x027c AWLEN=6 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x027c AWLEN=6 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 2 cycles
# AWVALID delay completed
# Setting AWADDR=0x05e4, AWLEN=7, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 1508, AWLEN=7, AWSIZE=2, STOP_ADDR=      1540, 4KB_OFFSET=      1540, Is it supposed to cross 4KB?  NO
# Starting data phase with 8 beats...
# [BEAT 1/8] Starting beat processing
# [BEAT 1/8] Applying WVALID delay of 3 cycles
# [BEAT 1/8] WVALID delay completed
# [BEAT 1/8] Setting WDATA=0xe71d0ace, WLAST=0, WVALID=1
# [BEAT 1/8] WVALID asserted, waiting for WREADY...
# [BEAT 1/8] WREADY received, handshake complete
# [BEAT 1/8] Beat completed, advancing to next
# [BEAT 2/8] Starting beat processing
# [BEAT 2/8] Applying WVALID delay of 2 cycles
# [BEAT 2/8] WVALID delay completed
# [BEAT 2/8] Setting WDATA=0x957f902a, WLAST=0, WVALID=1
# [BEAT 2/8] WVALID asserted, waiting for WREADY...
# [BEAT 2/8] WREADY received, handshake complete
# [BEAT 2/8] Beat completed, advancing to next
# [BEAT 3/8] Starting beat processing
# [BEAT 3/8] No WVALID delay (delay=0)
# [BEAT 3/8] Setting WDATA=0xc0261e80, WLAST=0, WVALID=1
# [BEAT 3/8] WVALID asserted, waiting for WREADY...
# [BEAT 3/8] WREADY received, handshake complete
# [BEAT 3/8] Beat completed, advancing to next
# [BEAT 4/8] Starting beat processing
# [BEAT 4/8] Applying WVALID delay of 2 cycles
# [BEAT 4/8] WVALID delay completed
# [BEAT 4/8] Setting WDATA=0xeb93e2d7, WLAST=0, WVALID=1
# [BEAT 4/8] WVALID asserted, waiting for WREADY...
# [BEAT 4/8] WREADY received, handshake complete
# [BEAT 4/8] Beat completed, advancing to next
# [BEAT 5/8] Starting beat processing
# [BEAT 5/8] Applying WVALID delay of 3 cycles
# [BEAT 5/8] WVALID delay completed
# [BEAT 5/8] Setting WDATA=0x088b3f11, WLAST=0, WVALID=1
# [BEAT 5/8] WVALID asserted, waiting for WREADY...
# [BEAT 5/8] WREADY received, handshake complete
# [BEAT 5/8] Beat completed, advancing to next
# [BEAT 6/8] Starting beat processing
# [BEAT 6/8] Applying WVALID delay of 3 cycles
# [BEAT 6/8] WVALID delay completed
# [BEAT 6/8] Setting WDATA=0x272c674e, WLAST=0, WVALID=1
# [BEAT 6/8] WVALID asserted, waiting for WREADY...
# [BEAT 6/8] WREADY received, handshake complete
# [BEAT 6/8] Beat completed, advancing to next
# [BEAT 7/8] Starting beat processing
# [BEAT 7/8] Applying WVALID delay of 3 cycles
# [BEAT 7/8] WVALID delay completed
# [BEAT 7/8] Setting WDATA=0x04cc7309, WLAST=0, WVALID=1
# [BEAT 7/8] WVALID asserted, waiting for WREADY...
# [BEAT 7/8] WREADY received, handshake complete
# [BEAT 7/8] Beat completed, advancing to next
# [BEAT 8/8] Starting beat processing
# [BEAT 8/8] No WVALID delay (delay=0)
# [BEAT 8/8] Setting WDATA=0xaab09e55, WLAST=1, WVALID=1
# [BEAT 8/8] WVALID asserted, waiting for WREADY...
# [BEAT 8/8] WREADY received, handshake complete
# [BEAT 8/8] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9489 Result (WRITE_OP)
#   Actual   : AWADDR=0x05e4 AWLEN=7 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x05e4 AWLEN=7 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Testing corner case combinations...
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 1 cycles
# AWVALID delay completed
# Setting AWADDR=0x0634, AWLEN=0, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 1588, AWLEN=0, AWSIZE=2, STOP_ADDR=      1592, 4KB_OFFSET=      1592, Is it supposed to cross 4KB?  NO
# Starting data phase with 1 beats...
# [BEAT 1/1] Starting beat processing
# [BEAT 1/1] No WVALID delay (delay=0)
# [BEAT 1/1] Setting WDATA=0x44dfef89, WLAST=1, WVALID=1
# [BEAT 1/1] WVALID asserted, waiting for WREADY...
# [BEAT 1/1] WREADY received, handshake complete
# [BEAT 1/1] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9490 Result (WRITE_OP)
#   Actual   : AWADDR=0x0634 AWLEN=0 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0634 AWLEN=0 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Setting AWADDR=0x0d34, AWLEN=1, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 3380, AWLEN=1, AWSIZE=2, STOP_ADDR=      3388, 4KB_OFFSET=      3388, Is it supposed to cross 4KB?  NO
# Starting data phase with 2 beats...
# [BEAT 1/2] Starting beat processing
# [BEAT 1/2] Applying WVALID delay of 3 cycles
# [BEAT 1/2] WVALID delay completed
# [BEAT 1/2] Setting WDATA=0x726549e4, WLAST=0, WVALID=1
# [BEAT 1/2] WVALID asserted, waiting for WREADY...
# [BEAT 1/2] WREADY received, handshake complete
# [BEAT 1/2] Beat completed, advancing to next
# [BEAT 2/2] Starting beat processing
# [BEAT 2/2] No WVALID delay (delay=0)
# [BEAT 2/2] Setting WDATA=0x06f0ef0d, WLAST=1, WVALID=1
# [BEAT 2/2] WVALID asserted, waiting for WREADY...
# [BEAT 2/2] WREADY received, handshake complete
# [BEAT 2/2] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9491 Result (WRITE_OP)
#   Actual   : AWADDR=0x0d34 AWLEN=1 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0d34 AWLEN=1 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 1 cycles
# AWVALID delay completed
# Setting AWADDR=0x02a8, AWLEN=2, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR=  680, AWLEN=2, AWSIZE=2, STOP_ADDR=       692, 4KB_OFFSET=       692, Is it supposed to cross 4KB?  NO
# Starting data phase with 3 beats...
# [BEAT 1/3] Starting beat processing
# [BEAT 1/3] Applying WVALID delay of 1 cycles
# [BEAT 1/3] WVALID delay completed
# [BEAT 1/3] Setting WDATA=0xb8a5bc71, WLAST=0, WVALID=1
# [BEAT 1/3] WVALID asserted, waiting for WREADY...
# [BEAT 1/3] WREADY received, handshake complete
# [BEAT 1/3] Beat completed, advancing to next
# [BEAT 2/3] Starting beat processing
# [BEAT 2/3] Applying WVALID delay of 3 cycles
# [BEAT 2/3] WVALID delay completed
# [BEAT 2/3] Setting WDATA=0x0331a306, WLAST=0, WVALID=1
# [BEAT 2/3] WVALID asserted, waiting for WREADY...
# [BEAT 2/3] WREADY received, handshake complete
# [BEAT 2/3] Beat completed, advancing to next
# [BEAT 3/3] Starting beat processing
# [BEAT 3/3] No WVALID delay (delay=0)
# [BEAT 3/3] Setting WDATA=0xb554526a, WLAST=1, WVALID=1
# [BEAT 3/3] WVALID asserted, waiting for WREADY...
# [BEAT 3/3] WREADY received, handshake complete
# [BEAT 3/3] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9492 Result (WRITE_OP)
#   Actual   : AWADDR=0x02a8 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x02a8 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 3 cycles
# AWVALID delay completed
# Setting AWADDR=0x0eb0, AWLEN=3, AWSIZE=2, AWVALID=0
# AWVALID NOT asserted, skipping AWREADY wait
# Address phase skipped (AWVALID=0), skipping data phase
# Transaction aborted - no data transfer
# ======================================================
# Test #9493 Result (WRITE_OP)
#   Actual   : AWADDR=0x0eb0 AWLEN=3 AWSIZE=2 BRESP=SLVERR
#   Expected : AWADDR=0x0eb0 AWLEN=3 AWSIZE=2 BRESP=SLVERR
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Delaying AWVALID by 1 cycles
# AWVALID delay completed
# Setting AWADDR=0x0458, AWLEN=4, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 1112, AWLEN=4, AWSIZE=2, STOP_ADDR=      1132, 4KB_OFFSET=      1132, Is it supposed to cross 4KB?  NO
# Starting data phase with 5 beats...
# [BEAT 1/5] Starting beat processing
# [BEAT 1/5] Applying WVALID delay of 1 cycles
# [BEAT 1/5] WVALID delay completed
# [BEAT 1/5] Setting WDATA=0xcdb8009b, WLAST=0, WVALID=1
# [BEAT 1/5] WVALID asserted, waiting for WREADY...
# [BEAT 1/5] WREADY received, handshake complete
# [BEAT 1/5] Beat completed, advancing to next
# [BEAT 2/5] Starting beat processing
# [BEAT 2/5] Applying WVALID delay of 1 cycles
# [BEAT 2/5] WVALID delay completed
# [BEAT 2/5] Setting WDATA=0x1319bb26, WLAST=0, WVALID=1
# [BEAT 2/5] WVALID asserted, waiting for WREADY...
# [BEAT 2/5] WREADY received, handshake complete
# [BEAT 2/5] Beat completed, advancing to next
# [BEAT 3/5] Starting beat processing
# [BEAT 3/5] Applying WVALID delay of 1 cycles
# [BEAT 3/5] WVALID delay completed
# [BEAT 3/5] Setting WDATA=0x521daba4, WLAST=0, WVALID=1
# [BEAT 3/5] WVALID asserted, waiting for WREADY...
# [BEAT 3/5] WREADY received, handshake complete
# [BEAT 3/5] Beat completed, advancing to next
# [BEAT 4/5] Starting beat processing
# [BEAT 4/5] Applying WVALID delay of 3 cycles
# [BEAT 4/5] WVALID delay completed
# [BEAT 4/5] Setting WDATA=0xeccb60d9, WLAST=0, WVALID=1
# [BEAT 4/5] WVALID asserted, waiting for WREADY...
# [BEAT 4/5] WREADY received, handshake complete
# [BEAT 4/5] Beat completed, advancing to next
# [BEAT 5/5] Starting beat processing
# [BEAT 5/5] Applying WVALID delay of 2 cycles
# [BEAT 5/5] WVALID delay completed
# [BEAT 5/5] Setting WDATA=0x515ad3a2, WLAST=1, WVALID=1
# [BEAT 5/5] WVALID asserted, waiting for WREADY...
# [BEAT 5/5] WREADY received, handshake complete
# [BEAT 5/5] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9494 Result (WRITE_OP)
#   Actual   : AWADDR=0x0458 AWLEN=4 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0458 AWLEN=4 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Delaying AWVALID by 2 cycles
# AWVALID delay completed
# Setting AWADDR=0x0d2c, AWLEN=0, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 3372, AWLEN=0, AWSIZE=2, STOP_ADDR=      3376, 4KB_OFFSET=      3376, Is it supposed to cross 4KB?  NO
# Starting data phase with 1 beats...
# [BEAT 1/1] Starting beat processing
# [BEAT 1/1] Applying WVALID delay of 1 cycles
# [BEAT 1/1] WVALID delay completed
# [BEAT 1/1] Setting WDATA=0xffffffff, WLAST=1, WVALID=1
# [BEAT 1/1] WVALID asserted, waiting for WREADY...
# [BEAT 1/1] WREADY received, handshake complete
# [BEAT 1/1] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9495 Result (WRITE_OP)
#   Actual   : AWADDR=0x0d2c AWLEN=0 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0d2c AWLEN=0 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Setting AWADDR=0x0d24, AWLEN=1, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 3364, AWLEN=1, AWSIZE=2, STOP_ADDR=      3372, 4KB_OFFSET=      3372, Is it supposed to cross 4KB?  NO
# Starting data phase with 2 beats...
# [BEAT 1/2] Starting beat processing
# [BEAT 1/2] Applying WVALID delay of 1 cycles
# [BEAT 1/2] WVALID delay completed
# [BEAT 1/2] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 1/2] WVALID asserted, waiting for WREADY...
# [BEAT 1/2] WREADY received, handshake complete
# [BEAT 1/2] Beat completed, advancing to next
# [BEAT 2/2] Starting beat processing
# [BEAT 2/2] Applying WVALID delay of 2 cycles
# [BEAT 2/2] WVALID delay completed
# [BEAT 2/2] Setting WDATA=0xaaaaaaaa, WLAST=1, WVALID=1
# [BEAT 2/2] WVALID asserted, waiting for WREADY...
# [BEAT 2/2] WREADY received, handshake complete
# [BEAT 2/2] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9496 Result (WRITE_OP)
#   Actual   : AWADDR=0x0d24 AWLEN=1 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0d24 AWLEN=1 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 2 cycles
# AWVALID delay completed
# Setting AWADDR=0x02c8, AWLEN=2, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR=  712, AWLEN=2, AWSIZE=2, STOP_ADDR=       724, 4KB_OFFSET=       724, Is it supposed to cross 4KB?  NO
# Starting data phase with 3 beats...
# [BEAT 1/3] Starting beat processing
# [BEAT 1/3] Applying WVALID delay of 2 cycles
# [BEAT 1/3] WVALID delay completed
# [BEAT 1/3] Setting WDATA=0x9310d026, WLAST=0, WVALID=1
# [BEAT 1/3] WVALID asserted, waiting for WREADY...
# [BEAT 1/3] WREADY received, handshake complete
# [BEAT 1/3] Beat completed, advancing to next
# [BEAT 2/3] Starting beat processing
# [BEAT 2/3] Applying WVALID delay of 1 cycles
# [BEAT 2/3] WVALID delay completed
# [BEAT 2/3] Setting WDATA=0x6d1413da, WLAST=0, WVALID=1
# [BEAT 2/3] WVALID asserted, waiting for WREADY...
# [BEAT 2/3] WREADY received, handshake complete
# [BEAT 2/3] Beat completed, advancing to next
# [BEAT 3/3] Starting beat processing
# [BEAT 3/3] Applying WVALID delay of 1 cycles
# [BEAT 3/3] WVALID delay completed
# [BEAT 3/3] Setting WDATA=0x6e200fdc, WLAST=1, WVALID=1
# [BEAT 3/3] WVALID asserted, waiting for WREADY...
# [BEAT 3/3] WREADY received, handshake complete
# [BEAT 3/3] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9497 Result (WRITE_OP)
#   Actual   : AWADDR=0x02c8 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x02c8 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 3 cycles...
# Randomized reset task completed
# Delaying AWVALID by 1 cycles
# AWVALID delay completed
# Setting AWADDR=0x09d4, AWLEN=3, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 2516, AWLEN=3, AWSIZE=2, STOP_ADDR=      2532, 4KB_OFFSET=      2532, Is it supposed to cross 4KB?  NO
# Starting data phase with 4 beats...
# [BEAT 1/4] Starting beat processing
# [BEAT 1/4] Applying WVALID delay of 1 cycles
# [BEAT 1/4] WVALID delay completed
# [BEAT 1/4] Setting WDATA=0xdc5350b8, WLAST=0, WVALID=1
# [BEAT 1/4] WVALID asserted, waiting for WREADY...
# [BEAT 1/4] WREADY received, handshake complete
# [BEAT 1/4] Beat completed, advancing to next
# [BEAT 2/4] Starting beat processing
# [BEAT 2/4] Applying WVALID delay of 3 cycles
# [BEAT 2/4] WVALID delay completed
# [BEAT 2/4] Setting WDATA=0xf928faf2, WLAST=0, WVALID=1
# [BEAT 2/4] WVALID asserted, waiting for WREADY...
# [BEAT 2/4] WREADY received, handshake complete
# [BEAT 2/4] Beat completed, advancing to next
# [BEAT 3/4] Starting beat processing
# [BEAT 3/4] Applying WVALID delay of 3 cycles
# [BEAT 3/4] WVALID delay completed
# [BEAT 3/4] Setting WDATA=0x9463a228, WLAST=0, WVALID=1
# [BEAT 3/4] WVALID asserted, waiting for WREADY...
# [BEAT 3/4] WREADY received, handshake complete
# [BEAT 3/4] Beat completed, advancing to next
# [BEAT 4/4] Starting beat processing
# [BEAT 4/4] Applying WVALID delay of 2 cycles
# [BEAT 4/4] WVALID delay completed
# [BEAT 4/4] Setting WDATA=0x84c7b609, WLAST=1, WVALID=1
# [BEAT 4/4] WVALID asserted, waiting for WREADY...
# [BEAT 4/4] WREADY received, handshake complete
# [BEAT 4/4] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9498 Result (WRITE_OP)
#   Actual   : AWADDR=0x09d4 AWLEN=3 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x09d4 AWLEN=3 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# === COVERAGE REPORT (Transaction 9500) ===
# Data Patterns: 4/4 (100.0%)
# Address Ranges: 6/6 (100.0%)
# Boundary Cases: 1/2 (50.0%)
# Corner Cases: 12/12 (100.0%)
# ===========================================
# Starting write transaction...
# Asserting randomized reset for 3 cycles...
# Randomized reset task completed
# Setting AWADDR=0x06fc, AWLEN=4, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 1788, AWLEN=4, AWSIZE=2, STOP_ADDR=      1808, 4KB_OFFSET=      1808, Is it supposed to cross 4KB?  NO
# Starting data phase with 5 beats...
# [BEAT 1/5] Starting beat processing
# [BEAT 1/5] Applying WVALID delay of 2 cycles
# [BEAT 1/5] WVALID delay completed
# [BEAT 1/5] Setting WDATA=0x2d48295a, WLAST=0, WVALID=1
# [BEAT 1/5] WVALID asserted, waiting for WREADY...
# [BEAT 1/5] WREADY received, handshake complete
# [BEAT 1/5] Beat completed, advancing to next
# [BEAT 2/5] Starting beat processing
# [BEAT 2/5] Applying WVALID delay of 1 cycles
# [BEAT 2/5] WVALID delay completed
# [BEAT 2/5] Setting WDATA=0x1395f927, WLAST=0, WVALID=1
# [BEAT 2/5] WVALID asserted, waiting for WREADY...
# [BEAT 2/5] WREADY received, handshake complete
# [BEAT 2/5] Beat completed, advancing to next
# [BEAT 3/5] Starting beat processing
# [BEAT 3/5] Applying WVALID delay of 3 cycles
# [BEAT 3/5] WVALID delay completed
# [BEAT 3/5] Setting WDATA=0x4405ed88, WLAST=0, WVALID=1
# [BEAT 3/5] WVALID asserted, waiting for WREADY...
# [BEAT 3/5] WREADY received, handshake complete
# [BEAT 3/5] Beat completed, advancing to next
# [BEAT 4/5] Starting beat processing
# [BEAT 4/5] Applying WVALID delay of 3 cycles
# [BEAT 4/5] WVALID delay completed
# [BEAT 4/5] Setting WDATA=0xafb3785f, WLAST=0, WVALID=1
# [BEAT 4/5] WVALID asserted, waiting for WREADY...
# [BEAT 4/5] WREADY received, handshake complete
# [BEAT 4/5] Beat completed, advancing to next
# [BEAT 5/5] Starting beat processing
# [BEAT 5/5] Applying WVALID delay of 2 cycles
# [BEAT 5/5] WVALID delay completed
# [BEAT 5/5] Setting WDATA=0x45b8c58b, WLAST=1, WVALID=1
# [BEAT 5/5] WVALID asserted, waiting for WREADY...
# [BEAT 5/5] WREADY received, handshake complete
# [BEAT 5/5] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9499 Result (WRITE_OP)
#   Actual   : AWADDR=0x06fc AWLEN=4 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x06fc AWLEN=4 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Delaying AWVALID by 2 cycles
# AWVALID delay completed
# Setting AWADDR=0x08bc, AWLEN=0, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 2236, AWLEN=0, AWSIZE=2, STOP_ADDR=      2240, 4KB_OFFSET=      2240, Is it supposed to cross 4KB?  NO
# Starting data phase with 1 beats...
# [BEAT 1/1] Starting beat processing
# [BEAT 1/1] No WVALID delay (delay=0)
# [BEAT 1/1] Setting WDATA=0xf9dd44f3, WLAST=1, WVALID=1
# [BEAT 1/1] WVALID asserted, waiting for WREADY...
# [BEAT 1/1] WREADY received, handshake complete
# [BEAT 1/1] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# === COMPREHENSIVE COVERAGE REPORT ===
# Burst Coverage:           100.0%
# Memory Address Coverage:  100.0%
# Data Patterns Coverage:   100.0%
# Protocol Coverage:        100.0%
# -------------------------------------
# Overall Coverage:         100.0%
# =====================================
# 
# === DETAILED COVERAGE BINS ===
# Address Ranges Hit:
#   Low (0-341): R=✓, W=✓
#   Mid (342-681): R=✓, W=✓
#   High (682-1023): R=✓, W=✓
# Boundary Cases: No_Cross=✓, Cross=✗
# ===============================
# ======================================================
# Test #9500 Result (WRITE_OP)
#   Actual   : AWADDR=0x08bc AWLEN=0 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x08bc AWLEN=0 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 3 cycles...
# Randomized reset task completed
# Delaying AWVALID by 3 cycles
# AWVALID delay completed
# Setting AWADDR=0x04d8, AWLEN=1, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 1240, AWLEN=1, AWSIZE=2, STOP_ADDR=      1248, 4KB_OFFSET=      1248, Is it supposed to cross 4KB?  NO
# Starting data phase with 2 beats...
# [BEAT 1/2] Starting beat processing
# [BEAT 1/2] No WVALID delay (delay=0)
# [BEAT 1/2] Setting WDATA=0x952b362a, WLAST=0, WVALID=1
# [BEAT 1/2] WVALID asserted, waiting for WREADY...
# [BEAT 1/2] WREADY received, handshake complete
# [BEAT 1/2] Beat completed, advancing to next
# [BEAT 2/2] Starting beat processing
# [BEAT 2/2] No WVALID delay (delay=0)
# [BEAT 2/2] Setting WDATA=0xda6c2cb4, WLAST=1, WVALID=1
# [BEAT 2/2] WVALID asserted, waiting for WREADY...
# [BEAT 2/2] WREADY received, handshake complete
# [BEAT 2/2] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=0
# BREADY not asserted - response phase incomplete
# BRESP available but not captured due to BREADY=0: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9501 Result (WRITE_OP)
#   Actual   : AWADDR=0x04d8 AWLEN=1 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x04d8 AWLEN=1 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 1 cycles
# AWVALID delay completed
# Setting AWADDR=0x00b8, AWLEN=2, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR=  184, AWLEN=2, AWSIZE=2, STOP_ADDR=       196, 4KB_OFFSET=       196, Is it supposed to cross 4KB?  NO
# Starting data phase with 3 beats...
# [BEAT 1/3] Starting beat processing
# [BEAT 1/3] Applying WVALID delay of 2 cycles
# [BEAT 1/3] WVALID delay completed
# [BEAT 1/3] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 1/3] WVALID asserted, waiting for WREADY...
# [BEAT 1/3] WREADY received, handshake complete
# [BEAT 1/3] Beat completed, advancing to next
# [BEAT 2/3] Starting beat processing
# [BEAT 2/3] No WVALID delay (delay=0)
# [BEAT 2/3] Setting WDATA=0xaaaaaaaa, WLAST=0, WVALID=1
# [BEAT 2/3] WVALID asserted, waiting for WREADY...
# [BEAT 2/3] WREADY received, handshake complete
# [BEAT 2/3] Beat completed, advancing to next
# [BEAT 3/3] Starting beat processing
# [BEAT 3/3] Applying WVALID delay of 1 cycles
# [BEAT 3/3] WVALID delay completed
# [BEAT 3/3] Setting WDATA=0xaaaaaaaa, WLAST=1, WVALID=1
# [BEAT 3/3] WVALID asserted, waiting for WREADY...
# [BEAT 3/3] WREADY received, handshake complete
# [BEAT 3/3] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=0
# BREADY not asserted - response phase incomplete
# BRESP available but not captured due to BREADY=0: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9502 Result (WRITE_OP)
#   Actual   : AWADDR=0x00b8 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x00b8 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 3 cycles...
# Randomized reset task completed
# Delaying AWVALID by 3 cycles
# AWVALID delay completed
# Setting AWADDR=0x09d0, AWLEN=3, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 2512, AWLEN=3, AWSIZE=2, STOP_ADDR=      2528, 4KB_OFFSET=      2528, Is it supposed to cross 4KB?  NO
# Starting data phase with 4 beats...
# [BEAT 1/4] Starting beat processing
# [BEAT 1/4] No WVALID delay (delay=0)
# [BEAT 1/4] Setting WDATA=0x91695022, WLAST=0, WVALID=1
# [BEAT 1/4] WVALID asserted, waiting for WREADY...
# [BEAT 1/4] WREADY received, handshake complete
# [BEAT 1/4] Beat completed, advancing to next
# [BEAT 2/4] Starting beat processing
# [BEAT 2/4] Applying WVALID delay of 2 cycles
# [BEAT 2/4] WVALID delay completed
# [BEAT 2/4] Setting WDATA=0x1a521934, WLAST=0, WVALID=1
# [BEAT 2/4] WVALID asserted, waiting for WREADY...
# [BEAT 2/4] WREADY received, handshake complete
# [BEAT 2/4] Beat completed, advancing to next
# [BEAT 3/4] Starting beat processing
# [BEAT 3/4] No WVALID delay (delay=0)
# [BEAT 3/4] Setting WDATA=0x568691ad, WLAST=0, WVALID=1
# [BEAT 3/4] WVALID asserted, waiting for WREADY...
# [BEAT 3/4] WREADY received, handshake complete
# [BEAT 3/4] Beat completed, advancing to next
# [BEAT 4/4] Starting beat processing
# [BEAT 4/4] Applying WVALID delay of 1 cycles
# [BEAT 4/4] WVALID delay completed
# [BEAT 4/4] Setting WDATA=0xadee705b, WLAST=1, WVALID=1
# [BEAT 4/4] WVALID asserted, waiting for WREADY...
# [BEAT 4/4] WREADY received, handshake complete
# [BEAT 4/4] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9503 Result (WRITE_OP)
#   Actual   : AWADDR=0x09d0 AWLEN=3 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x09d0 AWLEN=3 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 3 cycles...
# Randomized reset task completed
# Setting AWADDR=0x0cb0, AWLEN=4, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 3248, AWLEN=4, AWSIZE=2, STOP_ADDR=      3268, 4KB_OFFSET=      3268, Is it supposed to cross 4KB?  NO
# Starting data phase with 5 beats...
# [BEAT 1/5] Starting beat processing
# [BEAT 1/5] No WVALID delay (delay=0)
# [BEAT 1/5] Setting WDATA=0xd28ebaa5, WLAST=0, WVALID=1
# [BEAT 1/5] WVALID asserted, waiting for WREADY...
# [BEAT 1/5] WREADY received, handshake complete
# [BEAT 1/5] Beat completed, advancing to next
# [BEAT 2/5] Starting beat processing
# [BEAT 2/5] Applying WVALID delay of 2 cycles
# [BEAT 2/5] WVALID delay completed
# [BEAT 2/5] Setting WDATA=0x9551742a, WLAST=0, WVALID=1
# [BEAT 2/5] WVALID asserted, waiting for WREADY...
# [BEAT 2/5] WREADY received, handshake complete
# [BEAT 2/5] Beat completed, advancing to next
# [BEAT 3/5] Starting beat processing
# [BEAT 3/5] Applying WVALID delay of 2 cycles
# [BEAT 3/5] WVALID delay completed
# [BEAT 3/5] Setting WDATA=0x2759c54e, WLAST=0, WVALID=1
# [BEAT 3/5] WVALID asserted, waiting for WREADY...
# [BEAT 3/5] WREADY received, handshake complete
# [BEAT 3/5] Beat completed, advancing to next
# [BEAT 4/5] Starting beat processing
# [BEAT 4/5] No WVALID delay (delay=0)
# [BEAT 4/5] Setting WDATA=0xd546a0aa, WLAST=0, WVALID=1
# [BEAT 4/5] WVALID asserted, waiting for WREADY...
# [BEAT 4/5] WREADY received, handshake complete
# [BEAT 4/5] Beat completed, advancing to next
# [BEAT 5/5] Starting beat processing
# [BEAT 5/5] Applying WVALID delay of 2 cycles
# [BEAT 5/5] WVALID delay completed
# [BEAT 5/5] Setting WDATA=0xfebaaefd, WLAST=1, WVALID=1
# [BEAT 5/5] WVALID asserted, waiting for WREADY...
# [BEAT 5/5] WREADY received, handshake complete
# [BEAT 5/5] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9504 Result (WRITE_OP)
#   Actual   : AWADDR=0x0cb0 AWLEN=4 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0cb0 AWLEN=4 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 3 cycles...
# Randomized reset task completed
# Setting AWADDR=0x0810, AWLEN=0, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 2064, AWLEN=0, AWSIZE=2, STOP_ADDR=      2068, 4KB_OFFSET=      2068, Is it supposed to cross 4KB?  NO
# Starting data phase with 1 beats...
# [BEAT 1/1] Starting beat processing
# [BEAT 1/1] No WVALID delay (delay=0)
# [BEAT 1/1] Setting WDATA=0x223e1144, WLAST=1, WVALID=1
# [BEAT 1/1] WVALID asserted, waiting for WREADY...
# [BEAT 1/1] WREADY received, handshake complete
# [BEAT 1/1] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9505 Result (WRITE_OP)
#   Actual   : AWADDR=0x0810 AWLEN=0 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0810 AWLEN=0 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 1 cycles
# AWVALID delay completed
# Setting AWADDR=0x028c, AWLEN=1, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR=  652, AWLEN=1, AWSIZE=2, STOP_ADDR=       660, 4KB_OFFSET=       660, Is it supposed to cross 4KB?  NO
# Starting data phase with 2 beats...
# [BEAT 1/2] Starting beat processing
# [BEAT 1/2] Applying WVALID delay of 1 cycles
# [BEAT 1/2] WVALID delay completed
# [BEAT 1/2] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 1/2] WVALID asserted, waiting for WREADY...
# [BEAT 1/2] WREADY received, handshake complete
# [BEAT 1/2] Beat completed, advancing to next
# [BEAT 2/2] Starting beat processing
# [BEAT 2/2] Applying WVALID delay of 3 cycles
# [BEAT 2/2] WVALID delay completed
# [BEAT 2/2] Setting WDATA=0xffffffff, WLAST=1, WVALID=1
# [BEAT 2/2] WVALID asserted, waiting for WREADY...
# [BEAT 2/2] WREADY received, handshake complete
# [BEAT 2/2] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9506 Result (WRITE_OP)
#   Actual   : AWADDR=0x028c AWLEN=1 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x028c AWLEN=1 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 1 cycles
# AWVALID delay completed
# Setting AWADDR=0x0e18, AWLEN=2, AWSIZE=2, AWVALID=0
# AWVALID NOT asserted, skipping AWREADY wait
# Address phase skipped (AWVALID=0), skipping data phase
# Transaction aborted - no data transfer
# ======================================================
# Test #9507 Result (WRITE_OP)
#   Actual   : AWADDR=0x0e18 AWLEN=2 AWSIZE=2 BRESP=SLVERR
#   Expected : AWADDR=0x0e18 AWLEN=2 AWSIZE=2 BRESP=SLVERR
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Delaying AWVALID by 2 cycles
# AWVALID delay completed
# Setting AWADDR=0x0d28, AWLEN=3, AWSIZE=2, AWVALID=0
# AWVALID NOT asserted, skipping AWREADY wait
# Address phase skipped (AWVALID=0), skipping data phase
# Transaction aborted - no data transfer
# ======================================================
# Test #9508 Result (WRITE_OP)
#   Actual   : AWADDR=0x0d28 AWLEN=3 AWSIZE=2 BRESP=SLVERR
#   Expected : AWADDR=0x0d28 AWLEN=3 AWSIZE=2 BRESP=SLVERR
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 3 cycles...
# Randomized reset task completed
# Delaying AWVALID by 3 cycles
# AWVALID delay completed
# Setting AWADDR=0x0dfc, AWLEN=4, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 3580, AWLEN=4, AWSIZE=2, STOP_ADDR=      3600, 4KB_OFFSET=      3600, Is it supposed to cross 4KB?  NO
# Starting data phase with 5 beats...
# [BEAT 1/5] Starting beat processing
# [BEAT 1/5] No WVALID delay (delay=0)
# [BEAT 1/5] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 1/5] WVALID asserted, waiting for WREADY...
# [BEAT 1/5] WREADY received, handshake complete
# [BEAT 1/5] Beat completed, advancing to next
# [BEAT 2/5] Starting beat processing
# [BEAT 2/5] Applying WVALID delay of 1 cycles
# [BEAT 2/5] WVALID delay completed
# [BEAT 2/5] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 2/5] WVALID asserted, waiting for WREADY...
# [BEAT 2/5] WREADY received, handshake complete
# [BEAT 2/5] Beat completed, advancing to next
# [BEAT 3/5] Starting beat processing
# [BEAT 3/5] No WVALID delay (delay=0)
# [BEAT 3/5] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 3/5] WVALID asserted, waiting for WREADY...
# [BEAT 3/5] WREADY received, handshake complete
# [BEAT 3/5] Beat completed, advancing to next
# [BEAT 4/5] Starting beat processing
# [BEAT 4/5] Applying WVALID delay of 1 cycles
# [BEAT 4/5] WVALID delay completed
# [BEAT 4/5] Setting WDATA=0xffffffff, WLAST=0, WVALID=1
# [BEAT 4/5] WVALID asserted, waiting for WREADY...
# [BEAT 4/5] WREADY received, handshake complete
# [BEAT 4/5] Beat completed, advancing to next
# [BEAT 5/5] Starting beat processing
# [BEAT 5/5] Applying WVALID delay of 3 cycles
# [BEAT 5/5] WVALID delay completed
# [BEAT 5/5] Setting WDATA=0xffffffff, WLAST=1, WVALID=1
# [BEAT 5/5] WVALID asserted, waiting for WREADY...
# [BEAT 5/5] WREADY received, handshake complete
# [BEAT 5/5] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9509 Result (WRITE_OP)
#   Actual   : AWADDR=0x0dfc AWLEN=4 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0dfc AWLEN=4 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 2 cycles
# AWVALID delay completed
# Setting AWADDR=0x0a14, AWLEN=0, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 2580, AWLEN=0, AWSIZE=2, STOP_ADDR=      2584, 4KB_OFFSET=      2584, Is it supposed to cross 4KB?  NO
# Starting data phase with 1 beats...
# [BEAT 1/1] Starting beat processing
# [BEAT 1/1] Applying WVALID delay of 2 cycles
# [BEAT 1/1] WVALID delay completed
# [BEAT 1/1] Setting WDATA=0x04aebf09, WLAST=1, WVALID=1
# [BEAT 1/1] WVALID asserted, waiting for WREADY...
# [BEAT 1/1] WREADY received, handshake complete
# [BEAT 1/1] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9510 Result (WRITE_OP)
#   Actual   : AWADDR=0x0a14 AWLEN=0 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0a14 AWLEN=0 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Delaying AWVALID by 1 cycles
# AWVALID delay completed
# Setting AWADDR=0x0418, AWLEN=1, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 1048, AWLEN=1, AWSIZE=2, STOP_ADDR=      1056, 4KB_OFFSET=      1056, Is it supposed to cross 4KB?  NO
# Starting data phase with 2 beats...
# [BEAT 1/2] Starting beat processing
# [BEAT 1/2] Applying WVALID delay of 1 cycles
# [BEAT 1/2] WVALID delay completed
# [BEAT 1/2] Setting WDATA=0x5c8dbbb9, WLAST=0, WVALID=1
# [BEAT 1/2] WVALID asserted, waiting for WREADY...
# [BEAT 1/2] WREADY received, handshake complete
# [BEAT 1/2] Beat completed, advancing to next
# [BEAT 2/2] Starting beat processing
# [BEAT 2/2] Applying WVALID delay of 3 cycles
# [BEAT 2/2] WVALID delay completed
# [BEAT 2/2] Setting WDATA=0x09868f13, WLAST=1, WVALID=1
# [BEAT 2/2] WVALID asserted, waiting for WREADY...
# [BEAT 2/2] WREADY received, handshake complete
# [BEAT 2/2] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9511 Result (WRITE_OP)
#   Actual   : AWADDR=0x0418 AWLEN=1 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0418 AWLEN=1 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Delaying AWVALID by 1 cycles
# AWVALID delay completed
# Setting AWADDR=0x0004, AWLEN=2, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR=    4, AWLEN=2, AWSIZE=2, STOP_ADDR=        16, 4KB_OFFSET=        16, Is it supposed to cross 4KB?  NO
# Starting data phase with 3 beats...
# [BEAT 1/3] Starting beat processing
# [BEAT 1/3] Applying WVALID delay of 2 cycles
# [BEAT 1/3] WVALID delay completed
# [BEAT 1/3] Setting WDATA=0x03e1b107, WLAST=0, WVALID=1
# [BEAT 1/3] WVALID asserted, waiting for WREADY...
# [BEAT 1/3] WREADY received, handshake complete
# [BEAT 1/3] Beat completed, advancing to next
# [BEAT 2/3] Starting beat processing
# [BEAT 2/3] Applying WVALID delay of 1 cycles
# [BEAT 2/3] WVALID delay completed
# [BEAT 2/3] Setting WDATA=0x41710982, WLAST=0, WVALID=1
# [BEAT 2/3] WVALID asserted, waiting for WREADY...
# [BEAT 2/3] WREADY received, handshake complete
# [BEAT 2/3] Beat completed, advancing to next
# [BEAT 3/3] Starting beat processing
# [BEAT 3/3] No WVALID delay (delay=0)
# [BEAT 3/3] Setting WDATA=0x2b9d5357, WLAST=1, WVALID=1
# [BEAT 3/3] WVALID asserted, waiting for WREADY...
# [BEAT 3/3] WREADY received, handshake complete
# [BEAT 3/3] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9512 Result (WRITE_OP)
#   Actual   : AWADDR=0x0004 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0004 AWLEN=2 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 2 cycles...
# Randomized reset task completed
# Setting AWADDR=0x0538, AWLEN=3, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 1336, AWLEN=3, AWSIZE=2, STOP_ADDR=      1352, 4KB_OFFSET=      1352, Is it supposed to cross 4KB?  NO
# Starting data phase with 4 beats...
# [BEAT 1/4] Starting beat processing
# [BEAT 1/4] Applying WVALID delay of 1 cycles
# [BEAT 1/4] WVALID delay completed
# [BEAT 1/4] Setting WDATA=0x3b410776, WLAST=0, WVALID=1
# [BEAT 1/4] WVALID asserted, waiting for WREADY...
# [BEAT 1/4] WREADY received, handshake complete
# [BEAT 1/4] Beat completed, advancing to next
# [BEAT 2/4] Starting beat processing
# [BEAT 2/4] Applying WVALID delay of 1 cycles
# [BEAT 2/4] WVALID delay completed
# [BEAT 2/4] Setting WDATA=0xc55b7e8a, WLAST=0, WVALID=1
# [BEAT 2/4] WVALID asserted, waiting for WREADY...
# [BEAT 2/4] WREADY received, handshake complete
# [BEAT 2/4] Beat completed, advancing to next
# [BEAT 3/4] Starting beat processing
# [BEAT 3/4] Applying WVALID delay of 3 cycles
# [BEAT 3/4] WVALID delay completed
# [BEAT 3/4] Setting WDATA=0x2cd50559, WLAST=0, WVALID=1
# [BEAT 3/4] WVALID asserted, waiting for WREADY...
# [BEAT 3/4] WREADY received, handshake complete
# [BEAT 3/4] Beat completed, advancing to next
# [BEAT 4/4] Starting beat processing
# [BEAT 4/4] Applying WVALID delay of 1 cycles
# [BEAT 4/4] WVALID delay completed
# [BEAT 4/4] Setting WDATA=0xb9ef0073, WLAST=1, WVALID=1
# [BEAT 4/4] WVALID asserted, waiting for WREADY...
# [BEAT 4/4] WREADY received, handshake complete
# [BEAT 4/4] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=1
# BREADY asserted, waiting for BVALID...
# BVALID received, response handshake complete
# BRESP: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9513 Result (WRITE_OP)
#   Actual   : AWADDR=0x0538 AWLEN=3 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0538 AWLEN=3 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# Starting write transaction...
# Asserting randomized reset for 4 cycles...
# Randomized reset task completed
# Delaying AWVALID by 2 cycles
# AWVALID delay completed
# Setting AWADDR=0x0ee8, AWLEN=4, AWSIZE=2, AWVALID=1
# AWVALID asserted, waiting for AWREADY...
# AWREADY received, address handshake complete
# Address phase: AWADDR= 3816, AWLEN=4, AWSIZE=2, STOP_ADDR=      3836, 4KB_OFFSET=      3836, Is it supposed to cross 4KB?  NO
# Starting data phase with 5 beats...
# [BEAT 1/5] Starting beat processing
# [BEAT 1/5] Applying WVALID delay of 2 cycles
# [BEAT 1/5] WVALID delay completed
# [BEAT 1/5] Setting WDATA=0x06cf750d, WLAST=0, WVALID=1
# [BEAT 1/5] WVALID asserted, waiting for WREADY...
# [BEAT 1/5] WREADY received, handshake complete
# [BEAT 1/5] Beat completed, advancing to next
# [BEAT 2/5] Starting beat processing
# [BEAT 2/5] Applying WVALID delay of 3 cycles
# [BEAT 2/5] WVALID delay completed
# [BEAT 2/5] Setting WDATA=0x70e771e1, WLAST=0, WVALID=1
# [BEAT 2/5] WVALID asserted, waiting for WREADY...
# [BEAT 2/5] WREADY received, handshake complete
# [BEAT 2/5] Beat completed, advancing to next
# [BEAT 3/5] Starting beat processing
# [BEAT 3/5] Applying WVALID delay of 3 cycles
# [BEAT 3/5] WVALID delay completed
# [BEAT 3/5] Setting WDATA=0x995e2c32, WLAST=0, WVALID=1
# [BEAT 3/5] WVALID asserted, waiting for WREADY...
# [BEAT 3/5] WREADY received, handshake complete
# [BEAT 3/5] Beat completed, advancing to next
# [BEAT 4/5] Starting beat processing
# [BEAT 4/5] No WVALID delay (delay=0)
# [BEAT 4/5] Setting WDATA=0xc4191288, WLAST=0, WVALID=1
# [BEAT 4/5] WVALID asserted, waiting for WREADY...
# [BEAT 4/5] WREADY received, handshake complete
# [BEAT 4/5] Beat completed, advancing to next
# [BEAT 5/5] Starting beat processing
# [BEAT 5/5] Applying WVALID delay of 3 cycles
# [BEAT 5/5] WVALID delay completed
# [BEAT 5/5] Setting WDATA=0x5e68b9bc, WLAST=1, WVALID=1
# [BEAT 5/5] WVALID asserted, waiting for WREADY...
# [BEAT 5/5] WREADY received, handshake complete
# [BEAT 5/5] Beat completed, advancing to next
# Waiting for write response...
# Setting BREADY=0
# BREADY not asserted - response phase incomplete
# BRESP available but not captured due to BREADY=0: OKAY (0b00)
# Transaction completed successfully
# Write response: BRESP=OKAY
# ======================================================
# Test #9514 Result (WRITE_OP)
#   Actual   : AWADDR=0x0ee8 AWLEN=4 AWSIZE=2 BRESP=OKAY
#   Expected : AWADDR=0x0ee8 AWLEN=4 AWSIZE=2 BRESP=OKAY
#   TEST PASS
# ======================================================
# === COMPREHENSIVE COVERAGE REPORT ===
# Burst Coverage:           100.0%
# Memory Address Coverage:  100.0%
# Data Patterns Coverage:   100.0%
# Protocol Coverage:        100.0%
# -------------------------------------
# Overall Coverage:         100.0%
# =====================================
# 
# === DETAILED COVERAGE BINS ===
# Address Ranges Hit:
#   Low (0-341): R=✓, W=✓
#   Mid (342-681): R=✓, W=✓
#   High (682-1023): R=✓, W=✓
# Boundary Cases: No_Cross=✓, Cross=✗
# ===============================
# Completed 116 specific coverage hole tests. New coverage: 100.0%
# *** TARGET COVERAGE 100.0% ACHIEVED in 4570 tests! ***
# 
# ======================================================
#                 FINAL TEST REPORT                    
# ======================================================
# Total Tests:    9515
# Read Tests:     3354
# Write Tests:    6161
# Passed Tests:   9515
# Failed Tests (inteded failure):   88
# Pass Rate:      100.0%
# ------------------------------------------------------
# OKAY Responses: 10526
# SLVERR Count:   898
# === COMPREHENSIVE COVERAGE REPORT ===
# Burst Coverage:           100.0%
# Memory Address Coverage:  100.0%
# Data Patterns Coverage:   100.0%
# Protocol Coverage:        100.0%
# -------------------------------------
# Overall Coverage:         100.0%
# =====================================
# 
# === DETAILED COVERAGE BINS ===
# Address Ranges Hit:
#   Low (0-341): R=✓, W=✓
#   Mid (342-681): R=✓, W=✓
#   High (682-1023): R=✓, W=✓
# Boundary Cases: No_Cross=✓, Cross=✗
# ===============================
# ======================================================
# 
# *** 88 TESTS FAILED (intended failure) ***
# *** SUCCESS: TARGET COVERAGE ACHIEVED! ***
# ** Note: $stop    : Testbench.sv(1189)
#    Time: 15627725 ns  Iteration: 1  Instance: /top/tb
# Break in Module Testbench at Testbench.sv line 1189
# Merging coverage databases...
# QuestaSim-64 vcover 2021.1 Coverage Utility 2021.01 Jan 19 2021
# Start time: 22:14:33 on Aug 18,2025
# vcover merge merged_cov.ucdb cov_run0.ucdb cov_run1.ucdb cov_run2.ucdb cov_run3.ucdb cov_run4.ucdb 
# QuestaSim-64 vcover 2021.1 Coverage Utility 2021.01 Jan 19 2021
# Merging file cov_run0.ucdb
# Merging file cov_run1.ucdb
# Merging file cov_run2.ucdb
# ** Warning: (vcover-6820) Source code mismatch detected while merging ucdb file cov_run2.ucdb, skipping code coverage merge for design unit work.Testbench defined in file Testbench.sv, line 6
# ** Warning: (vcover-6820) Source code mismatch detected while merging ucdb file cov_run2.ucdb, skipping code coverage merge for instance /top/tb defined in file top.sv, line 45
# Merging file cov_run3.ucdb
# ** Warning: (vcover-6820) Source code mismatch detected while merging ucdb file cov_run3.ucdb, skipping code coverage merge for design unit work.axi4 defined in file axi4.v, line 1
# ** Warning: (vcover-6820) Source code mismatch detected while merging ucdb file cov_run3.ucdb, skipping code coverage merge for design unit work.axi4_memory defined in file axi_memory.v, line 1
# Merging file cov_run4.ucdb
# ** Warning: (vcover-6820) Source code mismatch detected while merging ucdb file cov_run4.ucdb, skipping code coverage merge for design unit work.axi4 defined in file axi4.v, line 1
# ** Warning: (vcover-6820) Source code mismatch detected while merging ucdb file cov_run4.ucdb, skipping code coverage merge for design unit work.axi4_memory defined in file axi_memory.v, line 1
# ** Warning: (vcover-6820) Source code mismatch detected while merging ucdb file cov_run4.ucdb, skipping code coverage merge for design unit work.axi4_assertions defined in file assertions.sv, line 10
# ** Warning: (vcover-6820) Source code mismatch detected while merging ucdb file cov_run4.ucdb, skipping code coverage merge for instance /\top#dut  defined in file top.sv, line 18
# ** Warning: (vcover-6820) Source code mismatch detected while merging ucdb file cov_run4.ucdb, skipping code coverage merge for instance /\top#dut /mem_inst defined in file axi4.v, line 78
# ** Warning: (vcover-6820) Source code mismatch detected while merging ucdb file cov_run4.ucdb, skipping code coverage merge for instance /\top#dut /u_axi4_assertions defined in file top.sv, line 47
# Writing merged result to merged_cov.ucdb
# 
# End time: 22:14:33 on Aug 18,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 10
# Generating coverage reports...
# QuestaSim-64 vcover 2021.1 Coverage Utility 2021.01 Jan 19 2021
# Start time: 22:14:33 on Aug 18,2025
# vcover report merged_cov.ucdb -details -output cov_report.txt 
# End time: 22:14:34 on Aug 18,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# QuestaSim-64 vcover 2021.1 Coverage Utility 2021.01 Jan 19 2021
# Start time: 22:14:34 on Aug 18,2025
# vcover report merged_cov.ucdb -details -html -output cov_report 
# 
# End time: 22:14:58 on Aug 18,2025, Elapsed time: 0:00:24
# Errors: 0, Warnings: 0
# Coverage analysis complete!
# Text report: cov_report.txt
# HTML report: cov_report/index.html
# Last simulation is still running for interactive debugging...
